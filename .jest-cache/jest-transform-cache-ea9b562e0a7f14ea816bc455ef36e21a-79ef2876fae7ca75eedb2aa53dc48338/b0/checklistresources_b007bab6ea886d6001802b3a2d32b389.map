{"version":3,"names":["cov_1xg3uou5zd","actualCoverage","ResourceTemplate","createClickUpClient","createTasksClient","createChecklistsClient","clickUpClient","s","tasksClient","checklistsClient","setupChecklistResources","server","f","resource","list","undefined","description","uri","params","task_id","task","getTask","checklists","contents","toString","mimeType","text","JSON","stringify","task_name","name","error","console","Error","message","checklist_id","checklistItems","items"],"sources":["/Users/peterkrzyzek/Development/clickup-mcp-server/src/resources/checklist-resources.ts"],"sourcesContent":["import { McpServer, ResourceTemplate } from '@modelcontextprotocol/sdk/server/mcp.js';\nimport { createClickUpClient } from '../clickup-client/index.js';\nimport { createTasksClient } from '../clickup-client/tasks.js';\nimport { createChecklistsClient, Checklist } from '../clickup-client/checklists.js';\n\n// Create clients\nconst clickUpClient = createClickUpClient();\nconst tasksClient = createTasksClient(clickUpClient);\nconst checklistsClient = createChecklistsClient(clickUpClient);\n\nexport function setupChecklistResources(server: McpServer): void {\n  // Register task checklists resource\n  server.resource(\n    'task-checklists',\n    new ResourceTemplate('clickup://task/{task_id}/checklist', { list: undefined }),\n    {\n      description: 'Get all checklists for a specific ClickUp task, including their names, items, and completion status.'\n    },\n    async (uri, params) => {\n      try {\n        const task_id = params.task_id as string;\n        \n        // Get the task details\n        const task = await tasksClient.getTask(task_id);\n        \n        // Note: The ClickUp API doesn't return checklists directly with task data\n        // We would need to make a separate call to get checklists for a task\n        // This would need to be implemented in the checklistsClient if API supports it\n        \n        // For now, return an empty array with proper typing\n        const checklists: Checklist[] = [];\n        \n        // In a real implementation, we might do something like:\n        // const checklists = await checklistsClient.getChecklistsForTask(task_id);\n        \n        return {\n          contents: [\n            {\n              uri: uri.toString(),\n              mimeType: 'application/json',\n              text: JSON.stringify({\n                task_id: task_id,\n                task_name: task.name,\n                checklists: checklists\n              }, null, 2),\n            },\n          ],\n        };\n      } catch (error: any) {\n        console.error('[ChecklistResources] Error fetching checklists:', error);\n        throw new Error(`Error fetching checklists: ${error.message}`);\n      }\n    }\n  );\n\n  // Register checklist items resource\n  server.resource(\n    'checklist-items',\n    new ResourceTemplate('clickup://checklist/{checklist_id}/items', { list: undefined }),\n    {\n      description: 'Get all items in a specific ClickUp checklist, including their names, assignees, and completion status.'\n    },\n    async (uri, params) => {\n      try {\n        const checklist_id = params.checklist_id as string;\n        \n        // For now, this is a placeholder as we'd need to implement a method\n        // to get all items for a checklist - we'll need to implement this endpoint\n        // or extract this data from the checklist details\n        \n        // Placeholder for response format\n        const checklistItems = {\n          checklist_id: checklist_id,\n          items: []\n        };\n        \n        return {\n          contents: [\n            {\n              uri: uri.toString(),\n              mimeType: 'application/json',\n              text: JSON.stringify(checklistItems, null, 2),\n            },\n          ],\n        };\n      } catch (error: any) {\n        console.error('[ChecklistResources] Error fetching checklist items:', error);\n        throw new Error(`Error fetching checklist items: ${error.message}`);\n      }\n    }\n  );\n\n  // Add some example static resources for discoverability\n  server.resource(\n    'example-task-checklists',\n    'clickup://task/86rkjvttt/checklist',\n    {\n      description: 'An example task checklists resource demonstrating the checklist data format.'\n    },\n    async (uri) => {\n      try {\n        const task_id = '86rkjvttt';\n        \n        // Get the task details\n        const task = await tasksClient.getTask(task_id);\n        \n        // Placeholder for checklists\n        const checklists: Checklist[] = [];\n        \n        return {\n          contents: [\n            {\n              uri: uri.toString(),\n              mimeType: 'application/json',\n              text: JSON.stringify({\n                task_id: task_id,\n                task_name: task.name,\n                checklists: checklists\n              }, null, 2),\n            },\n          ],\n        };\n      } catch (error: any) {\n        console.error('[ChecklistResources] Error fetching example checklists:', error);\n        throw new Error(`Error fetching example checklists: ${error.message}`);\n      }\n    }\n  );\n}\n"],"mappings":"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","ignoreList":[]}