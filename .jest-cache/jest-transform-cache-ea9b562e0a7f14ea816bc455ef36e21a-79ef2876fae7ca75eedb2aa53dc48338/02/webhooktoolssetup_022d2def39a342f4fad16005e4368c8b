3ed675afbb402b35c6b825eebc45cd9b
/* istanbul ignore next */
function cov_1y31ma6ue0() {
  var path = "/Users/peterkrzyzek/Development/clickup-mcp-server/src/tools/webhook-tools-setup.ts";
  var hash = "d6f569c8ae9842204a2165e26122ad0ed16691c5";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/peterkrzyzek/Development/clickup-mcp-server/src/tools/webhook-tools-setup.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 22
        },
        end: {
          line: 6,
          column: 43
        }
      },
      "1": {
        start: {
          line: 7,
          column: 23
        },
        end: {
          line: 7,
          column: 80
        }
      },
      "2": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 46,
          column: 7
        }
      },
      "3": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 45,
          column: 9
        }
      },
      "4": {
        start: {
          line: 28,
          column: 28
        },
        end: {
          line: 28,
          column: 59
        }
      },
      "5": {
        start: {
          line: 29,
          column: 27
        },
        end: {
          line: 29,
          column: 70
        }
      },
      "6": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 35,
          column: 14
        }
      },
      "7": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 44,
          column: 14
        }
      },
      "8": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 71,
          column: 7
        }
      },
      "9": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 70,
          column: 9
        }
      },
      "10": {
        start: {
          line: 53,
          column: 27
        },
        end: {
          line: 53,
          column: 58
        }
      },
      "11": {
        start: {
          line: 54,
          column: 27
        },
        end: {
          line: 54,
          column: 67
        }
      },
      "12": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 60,
          column: 14
        }
      },
      "13": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 69,
          column: 14
        }
      },
      "14": {
        start: {
          line: 72,
          column: 4
        },
        end: {
          line: 93,
          column: 7
        }
      },
      "15": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 92,
          column: 9
        }
      },
      "16": {
        start: {
          line: 76,
          column: 27
        },
        end: {
          line: 76,
          column: 75
        }
      },
      "17": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 82,
          column: 14
        }
      },
      "18": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 91,
          column: 14
        }
      },
      "19": {
        start: {
          line: 94,
          column: 4
        },
        end: {
          line: 129,
          column: 7
        }
      },
      "20": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 128,
          column: 9
        }
      },
      "21": {
        start: {
          line: 111,
          column: 28
        },
        end: {
          line: 111,
          column: 59
        }
      },
      "22": {
        start: {
          line: 112,
          column: 27
        },
        end: {
          line: 112,
          column: 70
        }
      },
      "23": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 118,
          column: 14
        }
      },
      "24": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 127,
          column: 14
        }
      },
      "25": {
        start: {
          line: 130,
          column: 4
        },
        end: {
          line: 151,
          column: 7
        }
      },
      "26": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 150,
          column: 9
        }
      },
      "27": {
        start: {
          line: 134,
          column: 27
        },
        end: {
          line: 134,
          column: 78
        }
      },
      "28": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 140,
          column: 14
        }
      },
      "29": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 149,
          column: 14
        }
      },
      "30": {
        start: {
          line: 152,
          column: 4
        },
        end: {
          line: 174,
          column: 7
        }
      },
      "31": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 173,
          column: 9
        }
      },
      "32": {
        start: {
          line: 157,
          column: 27
        },
        end: {
          line: 157,
          column: 99
        }
      },
      "33": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 163,
          column: 14
        }
      },
      "34": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 172,
          column: 14
        }
      },
      "35": {
        start: {
          line: 175,
          column: 4
        },
        end: {
          line: 196,
          column: 7
        }
      },
      "36": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 195,
          column: 9
        }
      },
      "37": {
        start: {
          line: 179,
          column: 27
        },
        end: {
          line: 179,
          column: 76
        }
      },
      "38": {
        start: {
          line: 180,
          column: 12
        },
        end: {
          line: 185,
          column: 14
        }
      },
      "39": {
        start: {
          line: 188,
          column: 12
        },
        end: {
          line: 194,
          column: 14
        }
      },
      "40": {
        start: {
          line: 197,
          column: 4
        },
        end: {
          line: 222,
          column: 7
        }
      },
      "41": {
        start: {
          line: 202,
          column: 8
        },
        end: {
          line: 221,
          column: 9
        }
      },
      "42": {
        start: {
          line: 203,
          column: 28
        },
        end: {
          line: 203,
          column: 70
        }
      },
      "43": {
        start: {
          line: 204,
          column: 28
        },
        end: {
          line: 204,
          column: 76
        }
      },
      "44": {
        start: {
          line: 205,
          column: 27
        },
        end: {
          line: 205,
          column: 45
        }
      },
      "45": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 211,
          column: 14
        }
      },
      "46": {
        start: {
          line: 214,
          column: 12
        },
        end: {
          line: 220,
          column: 14
        }
      },
      "47": {
        start: {
          line: 223,
          column: 4
        },
        end: {
          line: 257,
          column: 7
        }
      },
      "48": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 256,
          column: 9
        }
      },
      "49": {
        start: {
          line: 231,
          column: 26
        },
        end: {
          line: 231,
          column: 38
        }
      },
      "50": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 234,
          column: 13
        }
      },
      "51": {
        start: {
          line: 233,
          column: 16
        },
        end: {
          line: 233,
          column: 46
        }
      },
      "52": {
        start: {
          line: 235,
          column: 34
        },
        end: {
          line: 235,
          column: 69
        }
      },
      "53": {
        start: {
          line: 236,
          column: 28
        },
        end: {
          line: 239,
          column: 14
        }
      },
      "54": {
        start: {
          line: 240,
          column: 27
        },
        end: {
          line: 240,
          column: 71
        }
      },
      "55": {
        start: {
          line: 241,
          column: 12
        },
        end: {
          line: 246,
          column: 14
        }
      },
      "56": {
        start: {
          line: 249,
          column: 12
        },
        end: {
          line: 255,
          column: 14
        }
      },
      "57": {
        start: {
          line: 258,
          column: 4
        },
        end: {
          line: 280,
          column: 7
        }
      },
      "58": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 279,
          column: 9
        }
      },
      "59": {
        start: {
          line: 263,
          column: 27
        },
        end: {
          line: 263,
          column: 91
        }
      },
      "60": {
        start: {
          line: 264,
          column: 12
        },
        end: {
          line: 269,
          column: 14
        }
      },
      "61": {
        start: {
          line: 272,
          column: 12
        },
        end: {
          line: 278,
          column: 14
        }
      },
      "62": {
        start: {
          line: 281,
          column: 4
        },
        end: {
          line: 303,
          column: 7
        }
      },
      "63": {
        start: {
          line: 285,
          column: 8
        },
        end: {
          line: 302,
          column: 9
        }
      },
      "64": {
        start: {
          line: 286,
          column: 27
        },
        end: {
          line: 286,
          column: 99
        }
      },
      "65": {
        start: {
          line: 287,
          column: 12
        },
        end: {
          line: 292,
          column: 14
        }
      },
      "66": {
        start: {
          line: 295,
          column: 12
        },
        end: {
          line: 301,
          column: 14
        }
      }
    },
    fnMap: {
      "0": {
        name: "setupWebhookTools",
        decl: {
          start: {
            line: 8,
            column: 16
          },
          end: {
            line: 8,
            column: 33
          }
        },
        loc: {
          start: {
            line: 8,
            column: 42
          },
          end: {
            line: 304,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 26,
            column: 7
          },
          end: {
            line: 26,
            column: 8
          }
        },
        loc: {
          start: {
            line: 26,
            column: 23
          },
          end: {
            line: 46,
            column: 5
          }
        },
        line: 26
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 51,
            column: 7
          },
          end: {
            line: 51,
            column: 8
          }
        },
        loc: {
          start: {
            line: 51,
            column: 23
          },
          end: {
            line: 71,
            column: 5
          }
        },
        line: 51
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 74,
            column: 7
          },
          end: {
            line: 74,
            column: 8
          }
        },
        loc: {
          start: {
            line: 74,
            column: 23
          },
          end: {
            line: 93,
            column: 5
          }
        },
        line: 74
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 109,
            column: 7
          },
          end: {
            line: 109,
            column: 8
          }
        },
        loc: {
          start: {
            line: 109,
            column: 23
          },
          end: {
            line: 129,
            column: 5
          }
        },
        line: 109
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 132,
            column: 7
          },
          end: {
            line: 132,
            column: 8
          }
        },
        loc: {
          start: {
            line: 132,
            column: 23
          },
          end: {
            line: 151,
            column: 5
          }
        },
        line: 132
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 155,
            column: 7
          },
          end: {
            line: 155,
            column: 8
          }
        },
        loc: {
          start: {
            line: 155,
            column: 23
          },
          end: {
            line: 174,
            column: 5
          }
        },
        line: 155
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 177,
            column: 7
          },
          end: {
            line: 177,
            column: 8
          }
        },
        loc: {
          start: {
            line: 177,
            column: 23
          },
          end: {
            line: 196,
            column: 5
          }
        },
        line: 177
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 201,
            column: 7
          },
          end: {
            line: 201,
            column: 8
          }
        },
        loc: {
          start: {
            line: 201,
            column: 23
          },
          end: {
            line: 222,
            column: 5
          }
        },
        line: 201
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 228,
            column: 7
          },
          end: {
            line: 228,
            column: 8
          }
        },
        loc: {
          start: {
            line: 228,
            column: 23
          },
          end: {
            line: 257,
            column: 5
          }
        },
        line: 228
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 261,
            column: 7
          },
          end: {
            line: 261,
            column: 8
          }
        },
        loc: {
          start: {
            line: 261,
            column: 23
          },
          end: {
            line: 280,
            column: 5
          }
        },
        line: 261
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 284,
            column: 7
          },
          end: {
            line: 284,
            column: 8
          }
        },
        loc: {
          start: {
            line: 284,
            column: 23
          },
          end: {
            line: 303,
            column: 5
          }
        },
        line: 284
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 41,
            column: 57
          },
          end: {
            line: 41,
            column: 113
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 41,
            column: 82
          },
          end: {
            line: 41,
            column: 95
          }
        }, {
          start: {
            line: 41,
            column: 98
          },
          end: {
            line: 41,
            column: 113
          }
        }],
        line: 41
      },
      "1": {
        loc: {
          start: {
            line: 66,
            column: 57
          },
          end: {
            line: 66,
            column: 113
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 66,
            column: 82
          },
          end: {
            line: 66,
            column: 95
          }
        }, {
          start: {
            line: 66,
            column: 98
          },
          end: {
            line: 66,
            column: 113
          }
        }],
        line: 66
      },
      "2": {
        loc: {
          start: {
            line: 88,
            column: 56
          },
          end: {
            line: 88,
            column: 112
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 88,
            column: 81
          },
          end: {
            line: 88,
            column: 94
          }
        }, {
          start: {
            line: 88,
            column: 97
          },
          end: {
            line: 88,
            column: 112
          }
        }],
        line: 88
      },
      "3": {
        loc: {
          start: {
            line: 124,
            column: 57
          },
          end: {
            line: 124,
            column: 113
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 124,
            column: 82
          },
          end: {
            line: 124,
            column: 95
          }
        }, {
          start: {
            line: 124,
            column: 98
          },
          end: {
            line: 124,
            column: 113
          }
        }],
        line: 124
      },
      "4": {
        loc: {
          start: {
            line: 146,
            column: 57
          },
          end: {
            line: 146,
            column: 113
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 146,
            column: 82
          },
          end: {
            line: 146,
            column: 95
          }
        }, {
          start: {
            line: 146,
            column: 98
          },
          end: {
            line: 146,
            column: 113
          }
        }],
        line: 146
      },
      "5": {
        loc: {
          start: {
            line: 169,
            column: 70
          },
          end: {
            line: 169,
            column: 126
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 169,
            column: 95
          },
          end: {
            line: 169,
            column: 108
          }
        }, {
          start: {
            line: 169,
            column: 111
          },
          end: {
            line: 169,
            column: 126
          }
        }],
        line: 169
      },
      "6": {
        loc: {
          start: {
            line: 191,
            column: 56
          },
          end: {
            line: 191,
            column: 112
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 191,
            column: 81
          },
          end: {
            line: 191,
            column: 94
          }
        }, {
          start: {
            line: 191,
            column: 97
          },
          end: {
            line: 191,
            column: 112
          }
        }],
        line: 191
      },
      "7": {
        loc: {
          start: {
            line: 217,
            column: 69
          },
          end: {
            line: 217,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 217,
            column: 94
          },
          end: {
            line: 217,
            column: 107
          }
        }, {
          start: {
            line: 217,
            column: 110
          },
          end: {
            line: 217,
            column: 125
          }
        }],
        line: 217
      },
      "8": {
        loc: {
          start: {
            line: 232,
            column: 12
          },
          end: {
            line: 234,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 232,
            column: 12
          },
          end: {
            line: 234,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 232
      },
      "9": {
        loc: {
          start: {
            line: 252,
            column: 59
          },
          end: {
            line: 252,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 252,
            column: 84
          },
          end: {
            line: 252,
            column: 97
          }
        }, {
          start: {
            line: 252,
            column: 100
          },
          end: {
            line: 252,
            column: 115
          }
        }],
        line: 252
      },
      "10": {
        loc: {
          start: {
            line: 275,
            column: 67
          },
          end: {
            line: 275,
            column: 123
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 275,
            column: 92
          },
          end: {
            line: 275,
            column: 105
          }
        }, {
          start: {
            line: 275,
            column: 108
          },
          end: {
            line: 275,
            column: 123
          }
        }],
        line: 275
      },
      "11": {
        loc: {
          start: {
            line: 298,
            column: 64
          },
          end: {
            line: 298,
            column: 120
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 298,
            column: 89
          },
          end: {
            line: 298,
            column: 102
          }
        }, {
          start: {
            line: 298,
            column: 105
          },
          end: {
            line: 298,
            column: 120
          }
        }],
        line: 298
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/peterkrzyzek/Development/clickup-mcp-server/src/tools/webhook-tools-setup.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/peterkrzyzek/Development/clickup-mcp-server/src/tools/webhook-tools-setup.ts"],
      sourcesContent: ["import { McpServer } from '@modelcontextprotocol/sdk/server/mcp.js';\nimport { z } from 'zod';\nimport { createClickUpClient } from '../clickup-client/index.js';\nimport { WebhooksEnhancedClient } from '../clickup-client/webhooks-enhanced.js';\nimport {\n  CreateWebhookSchema,\n  UpdateWebhookSchema,\n  WebhookFilterSchema,\n  ValidateWebhookSignatureSchema,\n  ProcessWebhookSchema,\n  WebhookPayloadSchema\n} from '../schemas/webhook-schemas.js';\n\n// Create clients\nconst clickUpClient = createClickUpClient();\nconst webhooksClient = new WebhooksEnhancedClient(process.env.CLICKUP_API_TOKEN!);\n\nexport function setupWebhookTools(server: McpServer): void {\n\n  // ========================================\n  // WEBHOOK MANAGEMENT OPERATIONS\n  // ========================================\n\n  server.tool(\n    'create_webhook',\n    'Create a new webhook in a ClickUp workspace. Webhooks allow real-time notifications when events occur.',\n    {\n      workspace_id: z.string().min(1).describe('The ID of the workspace to create the webhook in'),\n      endpoint: z.string().url().describe('The URL endpoint that will receive webhook notifications'),\n      events: z.array(z.enum([\n        'taskCreated', 'taskUpdated', 'taskDeleted', 'taskStatusUpdated',\n        'taskAssigneeUpdated', 'taskDueDateUpdated', 'taskCommentPosted',\n        'taskCommentUpdated', 'taskTimeTracked', 'taskTimeUpdated',\n        'listCreated', 'listUpdated', 'listDeleted',\n        'folderCreated', 'folderUpdated', 'folderDeleted',\n        'spaceCreated', 'spaceUpdated', 'spaceDeleted',\n        'goalCreated', 'goalUpdated', 'goalDeleted', 'goalTargetUpdated'\n      ])).describe('Array of events to subscribe to'),\n      health_check_url: z.string().url().optional().describe('Optional URL for webhook health checks'),\n      secret: z.string().optional().describe('Optional secret for HMAC signature validation')\n    },\n    async (args) => {\n      try {\n        const request = CreateWebhookSchema.parse(args);\n        const result = await webhooksClient.createWebhook(request);\n        \n        return {\n          content: [{ \n            type: 'text', \n            text: `Webhook created successfully:\\n\\n${JSON.stringify(result, null, 2)}` \n          }]\n        };\n      } catch (error) {\n        return {\n          content: [{ \n            type: 'text', \n            text: `Error creating webhook: ${error instanceof Error ? error.message : 'Unknown error'}` \n          }],\n          isError: true\n        };\n      }\n    }\n  );\n\n  server.tool(\n    'get_webhooks',\n    'Get all webhooks for a workspace with optional filtering by status or event type.',\n    {\n      workspace_id: z.string().min(1).describe('The ID of the workspace to get webhooks from'),\n      status: z.enum(['active', 'inactive']).optional().describe('Filter webhooks by status'),\n      event_type: z.string().optional().describe('Filter webhooks by event type')\n    },\n    async (args) => {\n      try {\n        const filter = WebhookFilterSchema.parse(args);\n        const result = await webhooksClient.getWebhooks(filter);\n        \n        return {\n          content: [{ \n            type: 'text', \n            text: `Webhooks for workspace ${args.workspace_id}:\\n\\n${JSON.stringify(result, null, 2)}` \n          }]\n        };\n      } catch (error) {\n        return {\n          content: [{ \n            type: 'text', \n            text: `Error getting webhooks: ${error instanceof Error ? error.message : 'Unknown error'}` \n          }],\n          isError: true\n        };\n      }\n    }\n  );\n\n  server.tool(\n    'get_webhook',\n    'Get detailed information about a specific webhook by its ID.',\n    {\n      webhook_id: z.string().min(1).describe('The ID of the webhook to get')\n    },\n    async (args) => {\n      try {\n        const result = await webhooksClient.getWebhook(args.webhook_id);\n        \n        return {\n          content: [{ \n            type: 'text', \n            text: `Webhook details:\\n\\n${JSON.stringify(result, null, 2)}` \n          }]\n        };\n      } catch (error) {\n        return {\n          content: [{ \n            type: 'text', \n            text: `Error getting webhook: ${error instanceof Error ? error.message : 'Unknown error'}` \n          }],\n          isError: true\n        };\n      }\n    }\n  );\n\n  server.tool(\n    'update_webhook',\n    'Update an existing webhook\\'s configuration including endpoint, events, and status.',\n    {\n      webhook_id: z.string().min(1).describe('The ID of the webhook to update'),\n      endpoint: z.string().url().optional().describe('The new URL endpoint for webhook notifications'),\n      events: z.array(z.enum([\n        'taskCreated', 'taskUpdated', 'taskDeleted', 'taskStatusUpdated',\n        'taskAssigneeUpdated', 'taskDueDateUpdated', 'taskCommentPosted',\n        'taskCommentUpdated', 'taskTimeTracked', 'taskTimeUpdated',\n        'listCreated', 'listUpdated', 'listDeleted',\n        'folderCreated', 'folderUpdated', 'folderDeleted',\n        'spaceCreated', 'spaceUpdated', 'spaceDeleted',\n        'goalCreated', 'goalUpdated', 'goalDeleted', 'goalTargetUpdated'\n      ])).optional().describe('New array of events to subscribe to'),\n      health_check_url: z.string().url().optional().describe('New URL for webhook health checks'),\n      secret: z.string().optional().describe('New secret for HMAC signature validation'),\n      status: z.enum(['active', 'inactive']).optional().describe('New status for the webhook')\n    },\n    async (args) => {\n      try {\n        const request = UpdateWebhookSchema.parse(args);\n        const result = await webhooksClient.updateWebhook(request);\n        \n        return {\n          content: [{ \n            type: 'text', \n            text: `Webhook updated successfully:\\n\\n${JSON.stringify(result, null, 2)}` \n          }]\n        };\n      } catch (error) {\n        return {\n          content: [{ \n            type: 'text', \n            text: `Error updating webhook: ${error instanceof Error ? error.message : 'Unknown error'}` \n          }],\n          isError: true\n        };\n      }\n    }\n  );\n\n  server.tool(\n    'delete_webhook',\n    'Delete a webhook from ClickUp. This will stop all notifications to the webhook endpoint.',\n    {\n      webhook_id: z.string().min(1).describe('The ID of the webhook to delete')\n    },\n    async (args) => {\n      try {\n        const result = await webhooksClient.deleteWebhook(args.webhook_id);\n        \n        return {\n          content: [{ \n            type: 'text', \n            text: `Webhook deleted successfully: ${JSON.stringify(result, null, 2)}` \n          }]\n        };\n      } catch (error) {\n        return {\n          content: [{ \n            type: 'text', \n            text: `Error deleting webhook: ${error instanceof Error ? error.message : 'Unknown error'}` \n          }],\n          isError: true\n        };\n      }\n    }\n  );\n\n  server.tool(\n    'get_webhook_event_history',\n    'Get the event history for a webhook including delivery status and response codes.',\n    {\n      webhook_id: z.string().min(1).describe('The ID of the webhook to get event history for'),\n      limit: z.number().positive().optional().describe('Maximum number of events to return')\n    },\n    async (args) => {\n      try {\n        const result = await webhooksClient.getWebhookEventHistory(args.webhook_id, args.limit);\n        \n        return {\n          content: [{ \n            type: 'text', \n            text: `Webhook event history:\\n\\n${JSON.stringify(result, null, 2)}` \n          }]\n        };\n      } catch (error) {\n        return {\n          content: [{ \n            type: 'text', \n            text: `Error getting webhook event history: ${error instanceof Error ? error.message : 'Unknown error'}` \n          }],\n          isError: true\n        };\n      }\n    }\n  );\n\n  server.tool(\n    'ping_webhook',\n    'Send a test ping to a webhook endpoint to verify it\\'s working correctly.',\n    {\n      webhook_id: z.string().min(1).describe('The ID of the webhook to ping')\n    },\n    async (args) => {\n      try {\n        const result = await webhooksClient.pingWebhook(args.webhook_id);\n        \n        return {\n          content: [{ \n            type: 'text', \n            text: `Webhook ping result:\\n\\n${JSON.stringify(result, null, 2)}` \n          }]\n        };\n      } catch (error) {\n        return {\n          content: [{ \n            type: 'text', \n            text: `Error pinging webhook: ${error instanceof Error ? error.message : 'Unknown error'}` \n          }],\n          isError: true\n        };\n      }\n    }\n  );\n\n  server.tool(\n    'validate_webhook_signature',\n    'Validate the HMAC signature of a webhook payload to ensure authenticity.',\n    {\n      payload: z.string().describe('The raw webhook payload as a string'),\n      signature: z.string().describe('The signature header from the webhook request'),\n      secret: z.string().describe('The webhook secret used for signature generation')\n    },\n    async (args) => {\n      try {\n        const request = ValidateWebhookSignatureSchema.parse(args);\n        const isValid = webhooksClient.validateWebhookSignature(request);\n        const result = { valid: isValid };\n        \n        return {\n          content: [{ \n            type: 'text', \n            text: `Webhook signature validation result:\\n\\n${JSON.stringify(result, null, 2)}` \n          }]\n        };\n      } catch (error) {\n        return {\n          content: [{ \n            type: 'text', \n            text: `Error validating webhook signature: ${error instanceof Error ? error.message : 'Unknown error'}` \n          }],\n          isError: true\n        };\n      }\n    }\n  );\n\n  server.tool(\n    'process_webhook',\n    'Process an incoming webhook payload and extract structured information about the event.',\n    {\n      payload: z.any().describe('The webhook payload object'),\n      validate_signature: z.boolean().default(true).describe('Whether to validate the webhook signature'),\n      signature: z.string().optional().describe('The signature header for validation'),\n      secret: z.string().optional().describe('The webhook secret for signature validation')\n    },\n    async (args) => {\n      try {\n        // Parse the payload if it's a string\n        let payload = args.payload;\n        if (typeof payload === 'string') {\n          payload = JSON.parse(payload);\n        }\n        \n        const parsedPayload = WebhookPayloadSchema.parse(payload);\n        const request = ProcessWebhookSchema.parse({\n          ...args,\n          payload: parsedPayload\n        });\n        const result = await webhooksClient.processWebhook(request);\n        \n        return {\n          content: [{ \n            type: 'text', \n            text: `Webhook processing result:\\n\\n${JSON.stringify(result, null, 2)}` \n          }]\n        };\n      } catch (error) {\n        return {\n          content: [{ \n            type: 'text', \n            text: `Error processing webhook: ${error instanceof Error ? error.message : 'Unknown error'}` \n          }],\n          isError: true\n        };\n      }\n    }\n  );\n\n  server.tool(\n    'get_webhook_stats',\n    'Get statistics about webhook performance including success rate and response times.',\n    {\n      webhook_id: z.string().min(1).describe('The ID of the webhook to get statistics for'),\n      days: z.number().positive().optional().describe('Number of days to include in statistics (default: 30)')\n    },\n    async (args) => {\n      try {\n        const result = await webhooksClient.getWebhookStats(args.webhook_id, args.days);\n        \n        return {\n          content: [{ \n            type: 'text', \n            text: `Webhook statistics:\\n\\n${JSON.stringify(result, null, 2)}` \n          }]\n        };\n      } catch (error) {\n        return {\n          content: [{ \n            type: 'text', \n            text: `Error getting webhook statistics: ${error instanceof Error ? error.message : 'Unknown error'}` \n          }],\n          isError: true\n        };\n      }\n    }\n  );\n\n  server.tool(\n    'retry_webhook_events',\n    'Retry failed webhook events for a specific webhook.',\n    {\n      webhook_id: z.string().min(1).describe('The ID of the webhook to retry events for'),\n      event_ids: z.array(z.string()).optional().describe('Optional array of specific event IDs to retry. If not provided, all failed events will be retried.')\n    },\n    async (args) => {\n      try {\n        const result = await webhooksClient.retryWebhookEvents(args.webhook_id, args.event_ids);\n        \n        return {\n          content: [{ \n            type: 'text', \n            text: `Webhook events retry result:\\n\\n${JSON.stringify(result, null, 2)}` \n          }]\n        };\n      } catch (error) {\n        return {\n          content: [{ \n            type: 'text', \n            text: `Error retrying webhook events: ${error instanceof Error ? error.message : 'Unknown error'}` \n          }],\n          isError: true\n        };\n      }\n    }\n  );\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d6f569c8ae9842204a2165e26122ad0ed16691c5"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1y31ma6ue0 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1y31ma6ue0();
import { z } from 'zod';
import { createClickUpClient } from '../clickup-client/index.js';
import { WebhooksEnhancedClient } from '../clickup-client/webhooks-enhanced.js';
import { CreateWebhookSchema, UpdateWebhookSchema, WebhookFilterSchema, ValidateWebhookSignatureSchema, ProcessWebhookSchema, WebhookPayloadSchema } from '../schemas/webhook-schemas.js';
// Create clients
const clickUpClient =
/* istanbul ignore next */
(cov_1y31ma6ue0().s[0]++, createClickUpClient());
const webhooksClient =
/* istanbul ignore next */
(cov_1y31ma6ue0().s[1]++, new WebhooksEnhancedClient(process.env.CLICKUP_API_TOKEN));
export function setupWebhookTools(server) {
  /* istanbul ignore next */
  cov_1y31ma6ue0().f[0]++;
  cov_1y31ma6ue0().s[2]++;
  // ========================================
  // WEBHOOK MANAGEMENT OPERATIONS
  // ========================================
  server.tool('create_webhook', 'Create a new webhook in a ClickUp workspace. Webhooks allow real-time notifications when events occur.', {
    workspace_id: z.string().min(1).describe('The ID of the workspace to create the webhook in'),
    endpoint: z.string().url().describe('The URL endpoint that will receive webhook notifications'),
    events: z.array(z.enum(['taskCreated', 'taskUpdated', 'taskDeleted', 'taskStatusUpdated', 'taskAssigneeUpdated', 'taskDueDateUpdated', 'taskCommentPosted', 'taskCommentUpdated', 'taskTimeTracked', 'taskTimeUpdated', 'listCreated', 'listUpdated', 'listDeleted', 'folderCreated', 'folderUpdated', 'folderDeleted', 'spaceCreated', 'spaceUpdated', 'spaceDeleted', 'goalCreated', 'goalUpdated', 'goalDeleted', 'goalTargetUpdated'])).describe('Array of events to subscribe to'),
    health_check_url: z.string().url().optional().describe('Optional URL for webhook health checks'),
    secret: z.string().optional().describe('Optional secret for HMAC signature validation')
  }, async args => {
    /* istanbul ignore next */
    cov_1y31ma6ue0().f[1]++;
    cov_1y31ma6ue0().s[3]++;
    try {
      const request =
      /* istanbul ignore next */
      (cov_1y31ma6ue0().s[4]++, CreateWebhookSchema.parse(args));
      const result =
      /* istanbul ignore next */
      (cov_1y31ma6ue0().s[5]++, await webhooksClient.createWebhook(request));
      /* istanbul ignore next */
      cov_1y31ma6ue0().s[6]++;
      return {
        content: [{
          type: 'text',
          text: `Webhook created successfully:\n\n${JSON.stringify(result, null, 2)}`
        }]
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_1y31ma6ue0().s[7]++;
      return {
        content: [{
          type: 'text',
          text: `Error creating webhook: ${error instanceof Error ?
          /* istanbul ignore next */
          (cov_1y31ma6ue0().b[0][0]++, error.message) :
          /* istanbul ignore next */
          (cov_1y31ma6ue0().b[0][1]++, 'Unknown error')}`
        }],
        isError: true
      };
    }
  });
  /* istanbul ignore next */
  cov_1y31ma6ue0().s[8]++;
  server.tool('get_webhooks', 'Get all webhooks for a workspace with optional filtering by status or event type.', {
    workspace_id: z.string().min(1).describe('The ID of the workspace to get webhooks from'),
    status: z.enum(['active', 'inactive']).optional().describe('Filter webhooks by status'),
    event_type: z.string().optional().describe('Filter webhooks by event type')
  }, async args => {
    /* istanbul ignore next */
    cov_1y31ma6ue0().f[2]++;
    cov_1y31ma6ue0().s[9]++;
    try {
      const filter =
      /* istanbul ignore next */
      (cov_1y31ma6ue0().s[10]++, WebhookFilterSchema.parse(args));
      const result =
      /* istanbul ignore next */
      (cov_1y31ma6ue0().s[11]++, await webhooksClient.getWebhooks(filter));
      /* istanbul ignore next */
      cov_1y31ma6ue0().s[12]++;
      return {
        content: [{
          type: 'text',
          text: `Webhooks for workspace ${args.workspace_id}:\n\n${JSON.stringify(result, null, 2)}`
        }]
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_1y31ma6ue0().s[13]++;
      return {
        content: [{
          type: 'text',
          text: `Error getting webhooks: ${error instanceof Error ?
          /* istanbul ignore next */
          (cov_1y31ma6ue0().b[1][0]++, error.message) :
          /* istanbul ignore next */
          (cov_1y31ma6ue0().b[1][1]++, 'Unknown error')}`
        }],
        isError: true
      };
    }
  });
  /* istanbul ignore next */
  cov_1y31ma6ue0().s[14]++;
  server.tool('get_webhook', 'Get detailed information about a specific webhook by its ID.', {
    webhook_id: z.string().min(1).describe('The ID of the webhook to get')
  }, async args => {
    /* istanbul ignore next */
    cov_1y31ma6ue0().f[3]++;
    cov_1y31ma6ue0().s[15]++;
    try {
      const result =
      /* istanbul ignore next */
      (cov_1y31ma6ue0().s[16]++, await webhooksClient.getWebhook(args.webhook_id));
      /* istanbul ignore next */
      cov_1y31ma6ue0().s[17]++;
      return {
        content: [{
          type: 'text',
          text: `Webhook details:\n\n${JSON.stringify(result, null, 2)}`
        }]
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_1y31ma6ue0().s[18]++;
      return {
        content: [{
          type: 'text',
          text: `Error getting webhook: ${error instanceof Error ?
          /* istanbul ignore next */
          (cov_1y31ma6ue0().b[2][0]++, error.message) :
          /* istanbul ignore next */
          (cov_1y31ma6ue0().b[2][1]++, 'Unknown error')}`
        }],
        isError: true
      };
    }
  });
  /* istanbul ignore next */
  cov_1y31ma6ue0().s[19]++;
  server.tool('update_webhook', 'Update an existing webhook\'s configuration including endpoint, events, and status.', {
    webhook_id: z.string().min(1).describe('The ID of the webhook to update'),
    endpoint: z.string().url().optional().describe('The new URL endpoint for webhook notifications'),
    events: z.array(z.enum(['taskCreated', 'taskUpdated', 'taskDeleted', 'taskStatusUpdated', 'taskAssigneeUpdated', 'taskDueDateUpdated', 'taskCommentPosted', 'taskCommentUpdated', 'taskTimeTracked', 'taskTimeUpdated', 'listCreated', 'listUpdated', 'listDeleted', 'folderCreated', 'folderUpdated', 'folderDeleted', 'spaceCreated', 'spaceUpdated', 'spaceDeleted', 'goalCreated', 'goalUpdated', 'goalDeleted', 'goalTargetUpdated'])).optional().describe('New array of events to subscribe to'),
    health_check_url: z.string().url().optional().describe('New URL for webhook health checks'),
    secret: z.string().optional().describe('New secret for HMAC signature validation'),
    status: z.enum(['active', 'inactive']).optional().describe('New status for the webhook')
  }, async args => {
    /* istanbul ignore next */
    cov_1y31ma6ue0().f[4]++;
    cov_1y31ma6ue0().s[20]++;
    try {
      const request =
      /* istanbul ignore next */
      (cov_1y31ma6ue0().s[21]++, UpdateWebhookSchema.parse(args));
      const result =
      /* istanbul ignore next */
      (cov_1y31ma6ue0().s[22]++, await webhooksClient.updateWebhook(request));
      /* istanbul ignore next */
      cov_1y31ma6ue0().s[23]++;
      return {
        content: [{
          type: 'text',
          text: `Webhook updated successfully:\n\n${JSON.stringify(result, null, 2)}`
        }]
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_1y31ma6ue0().s[24]++;
      return {
        content: [{
          type: 'text',
          text: `Error updating webhook: ${error instanceof Error ?
          /* istanbul ignore next */
          (cov_1y31ma6ue0().b[3][0]++, error.message) :
          /* istanbul ignore next */
          (cov_1y31ma6ue0().b[3][1]++, 'Unknown error')}`
        }],
        isError: true
      };
    }
  });
  /* istanbul ignore next */
  cov_1y31ma6ue0().s[25]++;
  server.tool('delete_webhook', 'Delete a webhook from ClickUp. This will stop all notifications to the webhook endpoint.', {
    webhook_id: z.string().min(1).describe('The ID of the webhook to delete')
  }, async args => {
    /* istanbul ignore next */
    cov_1y31ma6ue0().f[5]++;
    cov_1y31ma6ue0().s[26]++;
    try {
      const result =
      /* istanbul ignore next */
      (cov_1y31ma6ue0().s[27]++, await webhooksClient.deleteWebhook(args.webhook_id));
      /* istanbul ignore next */
      cov_1y31ma6ue0().s[28]++;
      return {
        content: [{
          type: 'text',
          text: `Webhook deleted successfully: ${JSON.stringify(result, null, 2)}`
        }]
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_1y31ma6ue0().s[29]++;
      return {
        content: [{
          type: 'text',
          text: `Error deleting webhook: ${error instanceof Error ?
          /* istanbul ignore next */
          (cov_1y31ma6ue0().b[4][0]++, error.message) :
          /* istanbul ignore next */
          (cov_1y31ma6ue0().b[4][1]++, 'Unknown error')}`
        }],
        isError: true
      };
    }
  });
  /* istanbul ignore next */
  cov_1y31ma6ue0().s[30]++;
  server.tool('get_webhook_event_history', 'Get the event history for a webhook including delivery status and response codes.', {
    webhook_id: z.string().min(1).describe('The ID of the webhook to get event history for'),
    limit: z.number().positive().optional().describe('Maximum number of events to return')
  }, async args => {
    /* istanbul ignore next */
    cov_1y31ma6ue0().f[6]++;
    cov_1y31ma6ue0().s[31]++;
    try {
      const result =
      /* istanbul ignore next */
      (cov_1y31ma6ue0().s[32]++, await webhooksClient.getWebhookEventHistory(args.webhook_id, args.limit));
      /* istanbul ignore next */
      cov_1y31ma6ue0().s[33]++;
      return {
        content: [{
          type: 'text',
          text: `Webhook event history:\n\n${JSON.stringify(result, null, 2)}`
        }]
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_1y31ma6ue0().s[34]++;
      return {
        content: [{
          type: 'text',
          text: `Error getting webhook event history: ${error instanceof Error ?
          /* istanbul ignore next */
          (cov_1y31ma6ue0().b[5][0]++, error.message) :
          /* istanbul ignore next */
          (cov_1y31ma6ue0().b[5][1]++, 'Unknown error')}`
        }],
        isError: true
      };
    }
  });
  /* istanbul ignore next */
  cov_1y31ma6ue0().s[35]++;
  server.tool('ping_webhook', 'Send a test ping to a webhook endpoint to verify it\'s working correctly.', {
    webhook_id: z.string().min(1).describe('The ID of the webhook to ping')
  }, async args => {
    /* istanbul ignore next */
    cov_1y31ma6ue0().f[7]++;
    cov_1y31ma6ue0().s[36]++;
    try {
      const result =
      /* istanbul ignore next */
      (cov_1y31ma6ue0().s[37]++, await webhooksClient.pingWebhook(args.webhook_id));
      /* istanbul ignore next */
      cov_1y31ma6ue0().s[38]++;
      return {
        content: [{
          type: 'text',
          text: `Webhook ping result:\n\n${JSON.stringify(result, null, 2)}`
        }]
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_1y31ma6ue0().s[39]++;
      return {
        content: [{
          type: 'text',
          text: `Error pinging webhook: ${error instanceof Error ?
          /* istanbul ignore next */
          (cov_1y31ma6ue0().b[6][0]++, error.message) :
          /* istanbul ignore next */
          (cov_1y31ma6ue0().b[6][1]++, 'Unknown error')}`
        }],
        isError: true
      };
    }
  });
  /* istanbul ignore next */
  cov_1y31ma6ue0().s[40]++;
  server.tool('validate_webhook_signature', 'Validate the HMAC signature of a webhook payload to ensure authenticity.', {
    payload: z.string().describe('The raw webhook payload as a string'),
    signature: z.string().describe('The signature header from the webhook request'),
    secret: z.string().describe('The webhook secret used for signature generation')
  }, async args => {
    /* istanbul ignore next */
    cov_1y31ma6ue0().f[8]++;
    cov_1y31ma6ue0().s[41]++;
    try {
      const request =
      /* istanbul ignore next */
      (cov_1y31ma6ue0().s[42]++, ValidateWebhookSignatureSchema.parse(args));
      const isValid =
      /* istanbul ignore next */
      (cov_1y31ma6ue0().s[43]++, webhooksClient.validateWebhookSignature(request));
      const result =
      /* istanbul ignore next */
      (cov_1y31ma6ue0().s[44]++, {
        valid: isValid
      });
      /* istanbul ignore next */
      cov_1y31ma6ue0().s[45]++;
      return {
        content: [{
          type: 'text',
          text: `Webhook signature validation result:\n\n${JSON.stringify(result, null, 2)}`
        }]
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_1y31ma6ue0().s[46]++;
      return {
        content: [{
          type: 'text',
          text: `Error validating webhook signature: ${error instanceof Error ?
          /* istanbul ignore next */
          (cov_1y31ma6ue0().b[7][0]++, error.message) :
          /* istanbul ignore next */
          (cov_1y31ma6ue0().b[7][1]++, 'Unknown error')}`
        }],
        isError: true
      };
    }
  });
  /* istanbul ignore next */
  cov_1y31ma6ue0().s[47]++;
  server.tool('process_webhook', 'Process an incoming webhook payload and extract structured information about the event.', {
    payload: z.any().describe('The webhook payload object'),
    validate_signature: z.boolean().default(true).describe('Whether to validate the webhook signature'),
    signature: z.string().optional().describe('The signature header for validation'),
    secret: z.string().optional().describe('The webhook secret for signature validation')
  }, async args => {
    /* istanbul ignore next */
    cov_1y31ma6ue0().f[9]++;
    cov_1y31ma6ue0().s[48]++;
    try {
      // Parse the payload if it's a string
      let payload =
      /* istanbul ignore next */
      (cov_1y31ma6ue0().s[49]++, args.payload);
      /* istanbul ignore next */
      cov_1y31ma6ue0().s[50]++;
      if (typeof payload === 'string') {
        /* istanbul ignore next */
        cov_1y31ma6ue0().b[8][0]++;
        cov_1y31ma6ue0().s[51]++;
        payload = JSON.parse(payload);
      } else
      /* istanbul ignore next */
      {
        cov_1y31ma6ue0().b[8][1]++;
      }
      const parsedPayload =
      /* istanbul ignore next */
      (cov_1y31ma6ue0().s[52]++, WebhookPayloadSchema.parse(payload));
      const request =
      /* istanbul ignore next */
      (cov_1y31ma6ue0().s[53]++, ProcessWebhookSchema.parse({
        ...args,
        payload: parsedPayload
      }));
      const result =
      /* istanbul ignore next */
      (cov_1y31ma6ue0().s[54]++, await webhooksClient.processWebhook(request));
      /* istanbul ignore next */
      cov_1y31ma6ue0().s[55]++;
      return {
        content: [{
          type: 'text',
          text: `Webhook processing result:\n\n${JSON.stringify(result, null, 2)}`
        }]
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_1y31ma6ue0().s[56]++;
      return {
        content: [{
          type: 'text',
          text: `Error processing webhook: ${error instanceof Error ?
          /* istanbul ignore next */
          (cov_1y31ma6ue0().b[9][0]++, error.message) :
          /* istanbul ignore next */
          (cov_1y31ma6ue0().b[9][1]++, 'Unknown error')}`
        }],
        isError: true
      };
    }
  });
  /* istanbul ignore next */
  cov_1y31ma6ue0().s[57]++;
  server.tool('get_webhook_stats', 'Get statistics about webhook performance including success rate and response times.', {
    webhook_id: z.string().min(1).describe('The ID of the webhook to get statistics for'),
    days: z.number().positive().optional().describe('Number of days to include in statistics (default: 30)')
  }, async args => {
    /* istanbul ignore next */
    cov_1y31ma6ue0().f[10]++;
    cov_1y31ma6ue0().s[58]++;
    try {
      const result =
      /* istanbul ignore next */
      (cov_1y31ma6ue0().s[59]++, await webhooksClient.getWebhookStats(args.webhook_id, args.days));
      /* istanbul ignore next */
      cov_1y31ma6ue0().s[60]++;
      return {
        content: [{
          type: 'text',
          text: `Webhook statistics:\n\n${JSON.stringify(result, null, 2)}`
        }]
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_1y31ma6ue0().s[61]++;
      return {
        content: [{
          type: 'text',
          text: `Error getting webhook statistics: ${error instanceof Error ?
          /* istanbul ignore next */
          (cov_1y31ma6ue0().b[10][0]++, error.message) :
          /* istanbul ignore next */
          (cov_1y31ma6ue0().b[10][1]++, 'Unknown error')}`
        }],
        isError: true
      };
    }
  });
  /* istanbul ignore next */
  cov_1y31ma6ue0().s[62]++;
  server.tool('retry_webhook_events', 'Retry failed webhook events for a specific webhook.', {
    webhook_id: z.string().min(1).describe('The ID of the webhook to retry events for'),
    event_ids: z.array(z.string()).optional().describe('Optional array of specific event IDs to retry. If not provided, all failed events will be retried.')
  }, async args => {
    /* istanbul ignore next */
    cov_1y31ma6ue0().f[11]++;
    cov_1y31ma6ue0().s[63]++;
    try {
      const result =
      /* istanbul ignore next */
      (cov_1y31ma6ue0().s[64]++, await webhooksClient.retryWebhookEvents(args.webhook_id, args.event_ids));
      /* istanbul ignore next */
      cov_1y31ma6ue0().s[65]++;
      return {
        content: [{
          type: 'text',
          text: `Webhook events retry result:\n\n${JSON.stringify(result, null, 2)}`
        }]
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_1y31ma6ue0().s[66]++;
      return {
        content: [{
          type: 'text',
          text: `Error retrying webhook events: ${error instanceof Error ?
          /* istanbul ignore next */
          (cov_1y31ma6ue0().b[11][0]++, error.message) :
          /* istanbul ignore next */
          (cov_1y31ma6ue0().b[11][1]++, 'Unknown error')}`
        }],
        isError: true
      };
    }
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,