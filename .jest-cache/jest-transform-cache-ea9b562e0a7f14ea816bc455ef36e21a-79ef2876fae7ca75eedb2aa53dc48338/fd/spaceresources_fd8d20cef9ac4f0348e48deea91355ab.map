{"version":3,"names":["cov_1voj0xv3vi","actualCoverage","ResourceTemplate","createClickUpClient","createSpacesClient","clickUpClient","s","spacesClient","setupSpaceResources","server","f","resource","list","undefined","description","uri","params","workspace_id","console","log","spaces","getSpacesFromWorkspace","length","contents","toString","mimeType","text","JSON","stringify","error","Error","message","space_id","space","getSpace","name"],"sources":["/Users/peterkrzyzek/Development/clickup-mcp-server/src/resources/space-resources.ts"],"sourcesContent":["import { McpServer, ResourceTemplate } from '@modelcontextprotocol/sdk/server/mcp.js';\nimport { createClickUpClient } from '../clickup-client/index.js';\nimport { createSpacesClient } from '../clickup-client/spaces.js';\n\n// Create clients\nconst clickUpClient = createClickUpClient();\nconst spacesClient = createSpacesClient(clickUpClient);\n\nexport function setupSpaceResources(server: McpServer): void {\n  // Register workspace spaces resource\n  server.resource(\n    'workspace-spaces',\n    new ResourceTemplate('clickup://workspace/{workspace_id}/spaces', { list: undefined }),\n    {\n      description: 'Get all spaces in a ClickUp workspace, including their names, settings, and features.'\n    },\n    async (uri, params) => {\n      try {\n        const workspace_id = params.workspace_id as string;\n        console.log('[SpaceResources] Fetching spaces for workspace:', workspace_id);\n        const spaces = await spacesClient.getSpacesFromWorkspace(workspace_id);\n        console.log('[SpaceResources] Got spaces count:', spaces.length);\n        \n        return {\n          contents: [\n            {\n              uri: uri.toString(),\n              mimeType: 'application/json',\n              text: JSON.stringify(spaces, null, 2),\n            },\n          ],\n        };\n      } catch (error: any) {\n        console.error('[SpaceResources] Error fetching workspace spaces:', error);\n        throw new Error(`Error fetching workspace spaces: ${error.message}`);\n      }\n    }\n  );\n\n  // Register space details resource\n  server.resource(\n    'space-details',\n    new ResourceTemplate('clickup://space/{space_id}', { list: undefined }),\n    {\n      description: 'Get detailed information about a specific ClickUp space, including its name, settings, features, and metadata.'\n    },\n    async (uri, params) => {\n      try {\n        const space_id = params.space_id as string;\n        console.log('[SpaceResources] Fetching space:', space_id);\n        const space = await spacesClient.getSpace(space_id);\n        console.log('[SpaceResources] Got space:', space.name);\n        \n        return {\n          contents: [\n            {\n              uri: uri.toString(),\n              mimeType: 'application/json',\n              text: JSON.stringify(space, null, 2),\n            },\n          ],\n        };\n      } catch (error: any) {\n        console.error('[SpaceResources] Error fetching space:', error);\n        throw new Error(`Error fetching space: ${error.message}`);\n      }\n    }\n  );\n\n  // Add some example static resources for discoverability\n  server.resource(\n    'example-workspace-spaces',\n    'clickup://workspace/9011839976/spaces',\n    {\n      description: 'An example workspace spaces resource demonstrating the space list format.'\n    },\n    async (uri) => {\n      try {\n        const workspace_id = '9011839976';\n        console.log('[SpaceResources] Fetching spaces for example workspace:', workspace_id);\n        const spaces = await spacesClient.getSpacesFromWorkspace(workspace_id);\n        console.log('[SpaceResources] Got example spaces count:', spaces.length);\n        \n        return {\n          contents: [\n            {\n              uri: uri.toString(),\n              mimeType: 'application/json',\n              text: JSON.stringify(spaces, null, 2),\n            },\n          ],\n        };\n      } catch (error: any) {\n        console.error('[SpaceResources] Error fetching example workspace spaces:', error);\n        throw new Error(`Error fetching example workspace spaces: ${error.message}`);\n      }\n    }\n  );\n\n  server.resource(\n    'example-space',\n    'clickup://space/90113637923',\n    {\n      description: 'An example space resource demonstrating the space details format.'\n    },\n    async (uri) => {\n      try {\n        const space_id = '90113637923';\n        console.log('[SpaceResources] Fetching example space:', space_id);\n        const space = await spacesClient.getSpace(space_id);\n        console.log('[SpaceResources] Got example space:', space.name);\n        \n        return {\n          contents: [\n            {\n              uri: uri.toString(),\n              mimeType: 'application/json',\n              text: JSON.stringify(space, null, 2),\n            },\n          ],\n        };\n      } catch (error: any) {\n        console.error('[SpaceResources] Error fetching example space:', error);\n        throw new Error(`Error fetching example space: ${error.message}`);\n      }\n    }\n  );\n}\n"],"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","ignoreList":[]}