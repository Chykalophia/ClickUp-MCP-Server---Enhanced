{"version":3,"names":["CreateWebhookSchema","UpdateWebhookSchema","WebhookFilterSchema","ValidateWebhookSignatureSchema","ProcessWebhookSchema","WebhookPayloadSchema","createWebhookTools","client","cov_1qfkmbolti","f","s","name","description","inputSchema","type","properties","workspace_id","endpoint","events","items","enum","health_check_url","secret","required","status","event_type","webhook_id","limit","payload","signature","validate_signature","default","days","event_ids","handleWebhookTool","args","b","request","parse","createWebhook","filter","getWebhooks","getWebhook","updateWebhook","deleteWebhook","getWebhookEventHistory","pingWebhook","isValid","validateWebhookSignature","valid","JSON","parsedPayload","processWebhook","getWebhookStats","retryWebhookEvents","Error","error","message"],"sources":["/Users/peterkrzyzek/Development/clickup-mcp-server/src/tools/webhook-tools.ts"],"sourcesContent":["import { Tool } from '@modelcontextprotocol/sdk/types.js';\nimport { WebhooksEnhancedClient } from '../clickup-client/webhooks-enhanced.js';\nimport {\n  CreateWebhookSchema,\n  UpdateWebhookSchema,\n  WebhookFilterSchema,\n  ValidateWebhookSignatureSchema,\n  ProcessWebhookSchema,\n  WebhookPayloadSchema\n} from '../schemas/webhook-schemas.js';\n\nexport function createWebhookTools(client: WebhooksEnhancedClient): Tool[] {\n  return [\n    // Create webhook\n    {\n      name: 'create_webhook',\n      description: 'Create a new webhook in a ClickUp workspace. Webhooks allow real-time notifications when events occur.',\n      inputSchema: {\n        type: 'object',\n        properties: {\n          workspace_id: {\n            type: 'string',\n            description: 'The ID of the workspace to create the webhook in'\n          },\n          endpoint: {\n            type: 'string',\n            description: 'The URL endpoint that will receive webhook notifications'\n          },\n          events: {\n            type: 'array',\n            items: {\n              type: 'string',\n              enum: [\n                'taskCreated', 'taskUpdated', 'taskDeleted', 'taskStatusUpdated',\n                'taskAssigneeUpdated', 'taskDueDateUpdated', 'taskCommentPosted',\n                'taskCommentUpdated', 'taskTimeTracked', 'taskTimeUpdated',\n                'listCreated', 'listUpdated', 'listDeleted',\n                'folderCreated', 'folderUpdated', 'folderDeleted',\n                'spaceCreated', 'spaceUpdated', 'spaceDeleted',\n                'goalCreated', 'goalUpdated', 'goalDeleted', 'goalTargetUpdated'\n              ]\n            },\n            description: 'Array of events to subscribe to'\n          },\n          health_check_url: {\n            type: 'string',\n            description: 'Optional URL for webhook health checks'\n          },\n          secret: {\n            type: 'string',\n            description: 'Optional secret for HMAC signature validation'\n          }\n        },\n        required: ['workspace_id', 'endpoint', 'events']\n      }\n    },\n\n    // Get webhooks\n    {\n      name: 'get_webhooks',\n      description: 'Get all webhooks for a workspace with optional filtering by status or event type.',\n      inputSchema: {\n        type: 'object',\n        properties: {\n          workspace_id: {\n            type: 'string',\n            description: 'The ID of the workspace to get webhooks from'\n          },\n          status: {\n            type: 'string',\n            enum: ['active', 'inactive'],\n            description: 'Filter webhooks by status'\n          },\n          event_type: {\n            type: 'string',\n            description: 'Filter webhooks by event type'\n          }\n        },\n        required: ['workspace_id']\n      }\n    },\n\n    // Get webhook\n    {\n      name: 'get_webhook',\n      description: 'Get detailed information about a specific webhook by its ID.',\n      inputSchema: {\n        type: 'object',\n        properties: {\n          webhook_id: {\n            type: 'string',\n            description: 'The ID of the webhook to get'\n          }\n        },\n        required: ['webhook_id']\n      }\n    },\n\n    // Update webhook\n    {\n      name: 'update_webhook',\n      description: 'Update an existing webhook\\'s configuration including endpoint, events, and status.',\n      inputSchema: {\n        type: 'object',\n        properties: {\n          webhook_id: {\n            type: 'string',\n            description: 'The ID of the webhook to update'\n          },\n          endpoint: {\n            type: 'string',\n            description: 'The new URL endpoint for webhook notifications'\n          },\n          events: {\n            type: 'array',\n            items: {\n              type: 'string',\n              enum: [\n                'taskCreated', 'taskUpdated', 'taskDeleted', 'taskStatusUpdated',\n                'taskAssigneeUpdated', 'taskDueDateUpdated', 'taskCommentPosted',\n                'taskCommentUpdated', 'taskTimeTracked', 'taskTimeUpdated',\n                'listCreated', 'listUpdated', 'listDeleted',\n                'folderCreated', 'folderUpdated', 'folderDeleted',\n                'spaceCreated', 'spaceUpdated', 'spaceDeleted',\n                'goalCreated', 'goalUpdated', 'goalDeleted', 'goalTargetUpdated'\n              ]\n            },\n            description: 'New array of events to subscribe to'\n          },\n          health_check_url: {\n            type: 'string',\n            description: 'New URL for webhook health checks'\n          },\n          secret: {\n            type: 'string',\n            description: 'New secret for HMAC signature validation'\n          },\n          status: {\n            type: 'string',\n            enum: ['active', 'inactive'],\n            description: 'New status for the webhook'\n          }\n        },\n        required: ['webhook_id']\n      }\n    },\n\n    // Delete webhook\n    {\n      name: 'delete_webhook',\n      description: 'Delete a webhook from ClickUp. This will stop all notifications to the webhook endpoint.',\n      inputSchema: {\n        type: 'object',\n        properties: {\n          webhook_id: {\n            type: 'string',\n            description: 'The ID of the webhook to delete'\n          }\n        },\n        required: ['webhook_id']\n      }\n    },\n\n    // Get webhook event history\n    {\n      name: 'get_webhook_event_history',\n      description: 'Get the event history for a webhook including delivery status and response codes.',\n      inputSchema: {\n        type: 'object',\n        properties: {\n          webhook_id: {\n            type: 'string',\n            description: 'The ID of the webhook to get event history for'\n          },\n          limit: {\n            type: 'number',\n            description: 'Maximum number of events to return'\n          }\n        },\n        required: ['webhook_id']\n      }\n    },\n\n    // Ping webhook\n    {\n      name: 'ping_webhook',\n      description: 'Send a test ping to a webhook endpoint to verify it\\'s working correctly.',\n      inputSchema: {\n        type: 'object',\n        properties: {\n          webhook_id: {\n            type: 'string',\n            description: 'The ID of the webhook to ping'\n          }\n        },\n        required: ['webhook_id']\n      }\n    },\n\n    // Validate webhook signature\n    {\n      name: 'validate_webhook_signature',\n      description: 'Validate the HMAC signature of a webhook payload to ensure authenticity.',\n      inputSchema: {\n        type: 'object',\n        properties: {\n          payload: {\n            type: 'string',\n            description: 'The raw webhook payload as a string'\n          },\n          signature: {\n            type: 'string',\n            description: 'The signature header from the webhook request'\n          },\n          secret: {\n            type: 'string',\n            description: 'The webhook secret used for signature generation'\n          }\n        },\n        required: ['payload', 'signature', 'secret']\n      }\n    },\n\n    // Process webhook\n    {\n      name: 'process_webhook',\n      description: 'Process an incoming webhook payload and extract structured information about the event.',\n      inputSchema: {\n        type: 'object',\n        properties: {\n          payload: {\n            type: 'object',\n            description: 'The webhook payload object'\n          },\n          validate_signature: {\n            type: 'boolean',\n            description: 'Whether to validate the webhook signature',\n            default: true\n          },\n          signature: {\n            type: 'string',\n            description: 'The signature header for validation'\n          },\n          secret: {\n            type: 'string',\n            description: 'The webhook secret for signature validation'\n          }\n        },\n        required: ['payload']\n      }\n    },\n\n    // Get webhook statistics\n    {\n      name: 'get_webhook_stats',\n      description: 'Get statistics about webhook performance including success rate and response times.',\n      inputSchema: {\n        type: 'object',\n        properties: {\n          webhook_id: {\n            type: 'string',\n            description: 'The ID of the webhook to get statistics for'\n          },\n          days: {\n            type: 'number',\n            description: 'Number of days to include in statistics (default: 30)'\n          }\n        },\n        required: ['webhook_id']\n      }\n    },\n\n    // Retry webhook events\n    {\n      name: 'retry_webhook_events',\n      description: 'Retry failed webhook events for a specific webhook.',\n      inputSchema: {\n        type: 'object',\n        properties: {\n          webhook_id: {\n            type: 'string',\n            description: 'The ID of the webhook to retry events for'\n          },\n          event_ids: {\n            type: 'array',\n            items: {\n              type: 'string'\n            },\n            description: 'Optional array of specific event IDs to retry. If not provided, all failed events will be retried.'\n          }\n        },\n        required: ['webhook_id']\n      }\n    }\n  ];\n}\n\nexport async function handleWebhookTool(\n  name: string,\n  args: any,\n  client: WebhooksEnhancedClient\n): Promise<any> {\n  try {\n    switch (name) {\n      case 'create_webhook': {\n        const request = CreateWebhookSchema.parse(args);\n        return await client.createWebhook(request);\n      }\n\n      case 'get_webhooks': {\n        const filter = WebhookFilterSchema.parse(args);\n        return await client.getWebhooks(filter);\n      }\n\n      case 'get_webhook': {\n        const { webhook_id } = args;\n        return await client.getWebhook(webhook_id);\n      }\n\n      case 'update_webhook': {\n        const request = UpdateWebhookSchema.parse(args);\n        return await client.updateWebhook(request);\n      }\n\n      case 'delete_webhook': {\n        const { webhook_id } = args;\n        return await client.deleteWebhook(webhook_id);\n      }\n\n      case 'get_webhook_event_history': {\n        const { webhook_id, limit } = args;\n        return await client.getWebhookEventHistory(webhook_id, limit);\n      }\n\n      case 'ping_webhook': {\n        const { webhook_id } = args;\n        return await client.pingWebhook(webhook_id);\n      }\n\n      case 'validate_webhook_signature': {\n        const request = ValidateWebhookSignatureSchema.parse(args);\n        const isValid = client.validateWebhookSignature(request);\n        return { valid: isValid };\n      }\n\n      case 'process_webhook': {\n        // Parse the payload if it's a string\n        let payload = args.payload;\n        if (typeof payload === 'string') {\n          payload = JSON.parse(payload);\n        }\n        \n        const parsedPayload = WebhookPayloadSchema.parse(payload);\n        const request = ProcessWebhookSchema.parse({\n          ...args,\n          payload: parsedPayload\n        });\n        return await client.processWebhook(request);\n      }\n\n      case 'get_webhook_stats': {\n        const { webhook_id, days } = args;\n        return await client.getWebhookStats(webhook_id, days);\n      }\n\n      case 'retry_webhook_events': {\n        const { webhook_id, event_ids } = args;\n        return await client.retryWebhookEvents(webhook_id, event_ids);\n      }\n\n      default:\n        throw new Error(`Unknown webhook tool: ${name}`);\n    }\n  } catch (error) {\n    if (error instanceof Error) {\n      throw new Error(`Webhook tool error: ${error.message}`);\n    }\n    throw error;\n  }\n}\n"],"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","ignoreList":[]}