4f36ae8b9efd61578b65ceab9ef4755b
/* istanbul ignore next */
function cov_135cn0mbll() {
  var path = "/Users/peterkrzyzek/Development/clickup-mcp-server/src/utils/markdown-styling.ts";
  var hash = "ce151fb72c5fa243c2b42a99886fc90c451c9a62";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/peterkrzyzek/Development/clickup-mcp-server/src/utils/markdown-styling.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 24
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "1": {
        start: {
          line: 12,
          column: 15
        },
        end: {
          line: 36,
          column: 1
        }
      },
      "2": {
        start: {
          line: 38,
          column: 18
        },
        end: {
          line: 58,
          column: 1
        }
      },
      "3": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 64,
          column: 20
        }
      },
      "4": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 20
        }
      },
      "5": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 65,
          column: 44
        }
      },
      "6": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 72,
          column: 20
        }
      },
      "7": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 20
        }
      },
      "8": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 73,
          column: 30
        }
      },
      "9": {
        start: {
          line: 79,
          column: 4
        },
        end: {
          line: 105,
          column: 7
        }
      },
      "10": {
        start: {
          line: 80,
          column: 22
        },
        end: {
          line: 80,
          column: 35
        }
      },
      "11": {
        start: {
          line: 81,
          column: 22
        },
        end: {
          line: 81,
          column: 44
        }
      },
      "12": {
        start: {
          line: 82,
          column: 21
        },
        end: {
          line: 82,
          column: 25
        }
      },
      "13": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 102,
          column: 9
        }
      },
      "14": {
        start: {
          line: 85,
          column: 16
        },
        end: {
          line: 85,
          column: 91
        }
      },
      "15": {
        start: {
          line: 86,
          column: 16
        },
        end: {
          line: 86,
          column: 22
        }
      },
      "16": {
        start: {
          line: 88,
          column: 16
        },
        end: {
          line: 88,
          column: 78
        }
      },
      "17": {
        start: {
          line: 89,
          column: 16
        },
        end: {
          line: 89,
          column: 22
        }
      },
      "18": {
        start: {
          line: 91,
          column: 16
        },
        end: {
          line: 91,
          column: 79
        }
      },
      "19": {
        start: {
          line: 92,
          column: 16
        },
        end: {
          line: 92,
          column: 22
        }
      },
      "20": {
        start: {
          line: 94,
          column: 16
        },
        end: {
          line: 94,
          column: 80
        }
      },
      "21": {
        start: {
          line: 95,
          column: 16
        },
        end: {
          line: 95,
          column: 22
        }
      },
      "22": {
        start: {
          line: 97,
          column: 16
        },
        end: {
          line: 97,
          column: 81
        }
      },
      "23": {
        start: {
          line: 98,
          column: 16
        },
        end: {
          line: 98,
          column: 22
        }
      },
      "24": {
        start: {
          line: 100,
          column: 16
        },
        end: {
          line: 100,
          column: 78
        }
      },
      "25": {
        start: {
          line: 101,
          column: 16
        },
        end: {
          line: 101,
          column: 22
        }
      },
      "26": {
        start: {
          line: 103,
          column: 23
        },
        end: {
          line: 103,
          column: 55
        }
      },
      "27": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 104,
          column: 93
        }
      },
      "28": {
        start: {
          line: 112,
          column: 4
        },
        end: {
          line: 115,
          column: 7
        }
      },
      "29": {
        start: {
          line: 113,
          column: 23
        },
        end: {
          line: 113,
          column: 61
        }
      },
      "30": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 114,
          column: 59
        }
      },
      "31": {
        start: {
          line: 117,
          column: 4
        },
        end: {
          line: 120,
          column: 7
        }
      },
      "32": {
        start: {
          line: 118,
          column: 23
        },
        end: {
          line: 118,
          column: 61
        }
      },
      "33": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 119,
          column: 58
        }
      },
      "34": {
        start: {
          line: 121,
          column: 4
        },
        end: {
          line: 121,
          column: 19
        }
      },
      "35": {
        start: {
          line: 128,
          column: 4
        },
        end: {
          line: 134,
          column: 7
        }
      },
      "36": {
        start: {
          line: 129,
          column: 26
        },
        end: {
          line: 129,
          column: 50
        }
      },
      "37": {
        start: {
          line: 130,
          column: 23
        },
        end: {
          line: 130,
          column: 90
        }
      },
      "38": {
        start: {
          line: 131,
          column: 27
        },
        end: {
          line: 131,
          column: 83
        }
      },
      "39": {
        start: {
          line: 132,
          column: 23
        },
        end: {
          line: 132,
          column: 71
        }
      },
      "40": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 133,
          column: 103
        }
      },
      "41": {
        start: {
          line: 136,
          column: 4
        },
        end: {
          line: 139,
          column: 7
        }
      },
      "42": {
        start: {
          line: 137,
          column: 23
        },
        end: {
          line: 137,
          column: 78
        }
      },
      "43": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 138,
          column: 59
        }
      },
      "44": {
        start: {
          line: 140,
          column: 4
        },
        end: {
          line: 140,
          column: 19
        }
      },
      "45": {
        start: {
          line: 146,
          column: 19
        },
        end: {
          line: 146,
          column: 54
        }
      },
      "46": {
        start: {
          line: 148,
          column: 4
        },
        end: {
          line: 152,
          column: 7
        }
      },
      "47": {
        start: {
          line: 149,
          column: 23
        },
        end: {
          line: 149,
          column: 53
        }
      },
      "48": {
        start: {
          line: 150,
          column: 23
        },
        end: {
          line: 150,
          column: 60
        }
      },
      "49": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 151,
          column: 46
        }
      },
      "50": {
        start: {
          line: 154,
          column: 4
        },
        end: {
          line: 158,
          column: 7
        }
      },
      "51": {
        start: {
          line: 155,
          column: 23
        },
        end: {
          line: 155,
          column: 65
        }
      },
      "52": {
        start: {
          line: 156,
          column: 23
        },
        end: {
          line: 156,
          column: 60
        }
      },
      "53": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 157,
          column: 46
        }
      },
      "54": {
        start: {
          line: 160,
          column: 4
        },
        end: {
          line: 166,
          column: 7
        }
      },
      "55": {
        start: {
          line: 161,
          column: 25
        },
        end: {
          line: 161,
          column: 76
        }
      },
      "56": {
        start: {
          line: 162,
          column: 23
        },
        end: {
          line: 164,
          column: 51
        }
      },
      "57": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 165,
          column: 48
        }
      },
      "58": {
        start: {
          line: 167,
          column: 4
        },
        end: {
          line: 167,
          column: 19
        }
      },
      "59": {
        start: {
          line: 173,
          column: 4
        },
        end: {
          line: 177,
          column: 7
        }
      },
      "60": {
        start: {
          line: 174,
          column: 23
        },
        end: {
          line: 174,
          column: 75
        }
      },
      "61": {
        start: {
          line: 175,
          column: 22
        },
        end: {
          line: 175,
          column: 64
        }
      },
      "62": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 176,
          column: 28
        }
      },
      "63": {
        start: {
          line: 184,
          column: 4
        },
        end: {
          line: 187,
          column: 7
        }
      },
      "64": {
        start: {
          line: 185,
          column: 23
        },
        end: {
          line: 185,
          column: 95
        }
      },
      "65": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 186,
          column: 72
        }
      },
      "66": {
        start: {
          line: 189,
          column: 4
        },
        end: {
          line: 192,
          column: 7
        }
      },
      "67": {
        start: {
          line: 190,
          column: 23
        },
        end: {
          line: 190,
          column: 78
        }
      },
      "68": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 191,
          column: 71
        }
      },
      "69": {
        start: {
          line: 193,
          column: 4
        },
        end: {
          line: 193,
          column: 19
        }
      },
      "70": {
        start: {
          line: 199,
          column: 4
        },
        end: {
          line: 202,
          column: 7
        }
      },
      "71": {
        start: {
          line: 200,
          column: 21
        },
        end: {
          line: 200,
          column: 69
        }
      },
      "72": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 201,
          column: 66
        }
      },
      "73": {
        start: {
          line: 209,
          column: 4
        },
        end: {
          line: 209,
          column: 55
        }
      },
      "74": {
        start: {
          line: 210,
          column: 4
        },
        end: {
          line: 210,
          column: 61
        }
      },
      "75": {
        start: {
          line: 212,
          column: 4
        },
        end: {
          line: 212,
          column: 49
        }
      },
      "76": {
        start: {
          line: 213,
          column: 4
        },
        end: {
          line: 213,
          column: 26
        }
      },
      "77": {
        start: {
          line: 222,
          column: 4
        },
        end: {
          line: 224,
          column: 5
        }
      },
      "78": {
        start: {
          line: 223,
          column: 8
        },
        end: {
          line: 223,
          column: 18
        }
      },
      "79": {
        start: {
          line: 225,
          column: 17
        },
        end: {
          line: 225,
          column: 51
        }
      },
      "80": {
        start: {
          line: 226,
          column: 17
        },
        end: {
          line: 226,
          column: 25
        }
      },
      "81": {
        start: {
          line: 228,
          column: 4
        },
        end: {
          line: 228,
          column: 42
        }
      },
      "82": {
        start: {
          line: 229,
          column: 4
        },
        end: {
          line: 229,
          column: 39
        }
      },
      "83": {
        start: {
          line: 230,
          column: 4
        },
        end: {
          line: 230,
          column: 43
        }
      },
      "84": {
        start: {
          line: 231,
          column: 4
        },
        end: {
          line: 231,
          column: 40
        }
      },
      "85": {
        start: {
          line: 232,
          column: 4
        },
        end: {
          line: 232,
          column: 46
        }
      },
      "86": {
        start: {
          line: 233,
          column: 4
        },
        end: {
          line: 233,
          column: 40
        }
      },
      "87": {
        start: {
          line: 234,
          column: 4
        },
        end: {
          line: 234,
          column: 50
        }
      },
      "88": {
        start: {
          line: 235,
          column: 4
        },
        end: {
          line: 235,
          column: 49
        }
      },
      "89": {
        start: {
          line: 236,
          column: 4
        },
        end: {
          line: 236,
          column: 18
        }
      },
      "90": {
        start: {
          line: 246,
          column: 17
        },
        end: {
          line: 246,
          column: 51
        }
      },
      "91": {
        start: {
          line: 247,
          column: 19
        },
        end: {
          line: 247,
          column: 55
        }
      },
      "92": {
        start: {
          line: 248,
          column: 4
        },
        end: {
          line: 250,
          column: 5
        }
      },
      "93": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 249,
          column: 22
        }
      },
      "94": {
        start: {
          line: 251,
          column: 19
        },
        end: {
          line: 251,
          column: 78
        }
      },
      "95": {
        start: {
          line: 252,
          column: 24
        },
        end: {
          line: 252,
          column: 89
        }
      },
      "96": {
        start: {
          line: 253,
          column: 27
        },
        end: {
          line: 253,
          column: 60
        }
      },
      "97": {
        start: {
          line: 254,
          column: 4
        },
        end: {
          line: 254,
          column: 81
        }
      },
      "98": {
        start: {
          line: 264,
          column: 4
        },
        end: {
          line: 265,
          column: 18
        }
      },
      "99": {
        start: {
          line: 265,
          column: 8
        },
        end: {
          line: 265,
          column: 18
        }
      },
      "100": {
        start: {
          line: 266,
          column: 17
        },
        end: {
          line: 266,
          column: 51
        }
      },
      "101": {
        start: {
          line: 267,
          column: 21
        },
        end: {
          line: 267,
          column: 23
        }
      },
      "102": {
        start: {
          line: 268,
          column: 4
        },
        end: {
          line: 299,
          column: 5
        }
      },
      "103": {
        start: {
          line: 270,
          column: 34
        },
        end: {
          line: 270,
          column: 67
        }
      },
      "104": {
        start: {
          line: 271,
          column: 12
        },
        end: {
          line: 273,
          column: 13
        }
      },
      "105": {
        start: {
          line: 272,
          column: 16
        },
        end: {
          line: 272,
          column: 82
        }
      },
      "106": {
        start: {
          line: 272,
          column: 56
        },
        end: {
          line: 272,
          column: 79
        }
      },
      "107": {
        start: {
          line: 274,
          column: 12
        },
        end: {
          line: 274,
          column: 18
        }
      },
      "108": {
        start: {
          line: 276,
          column: 32
        },
        end: {
          line: 276,
          column: 73
        }
      },
      "109": {
        start: {
          line: 277,
          column: 12
        },
        end: {
          line: 279,
          column: 13
        }
      },
      "110": {
        start: {
          line: 278,
          column: 16
        },
        end: {
          line: 278,
          column: 77
        }
      },
      "111": {
        start: {
          line: 278,
          column: 54
        },
        end: {
          line: 278,
          column: 74
        }
      },
      "112": {
        start: {
          line: 280,
          column: 12
        },
        end: {
          line: 280,
          column: 18
        }
      },
      "113": {
        start: {
          line: 282,
          column: 32
        },
        end: {
          line: 282,
          column: 87
        }
      },
      "114": {
        start: {
          line: 283,
          column: 12
        },
        end: {
          line: 285,
          column: 13
        }
      },
      "115": {
        start: {
          line: 284,
          column: 16
        },
        end: {
          line: 284,
          column: 78
        }
      },
      "116": {
        start: {
          line: 284,
          column: 54
        },
        end: {
          line: 284,
          column: 75
        }
      },
      "117": {
        start: {
          line: 286,
          column: 12
        },
        end: {
          line: 286,
          column: 18
        }
      },
      "118": {
        start: {
          line: 288,
          column: 33
        },
        end: {
          line: 288,
          column: 61
        }
      },
      "119": {
        start: {
          line: 289,
          column: 12
        },
        end: {
          line: 291,
          column: 13
        }
      },
      "120": {
        start: {
          line: 290,
          column: 16
        },
        end: {
          line: 290,
          column: 85
        }
      },
      "121": {
        start: {
          line: 290,
          column: 55
        },
        end: {
          line: 290,
          column: 82
        }
      },
      "122": {
        start: {
          line: 292,
          column: 12
        },
        end: {
          line: 292,
          column: 18
        }
      },
      "123": {
        start: {
          line: 294,
          column: 32
        },
        end: {
          line: 294,
          column: 99
        }
      },
      "124": {
        start: {
          line: 295,
          column: 12
        },
        end: {
          line: 297,
          column: 13
        }
      },
      "125": {
        start: {
          line: 296,
          column: 16
        },
        end: {
          line: 296,
          column: 78
        }
      },
      "126": {
        start: {
          line: 296,
          column: 54
        },
        end: {
          line: 296,
          column: 75
        }
      },
      "127": {
        start: {
          line: 298,
          column: 12
        },
        end: {
          line: 298,
          column: 18
        }
      },
      "128": {
        start: {
          line: 300,
          column: 4
        },
        end: {
          line: 300,
          column: 20
        }
      },
      "129": {
        start: {
          line: 309,
          column: 4
        },
        end: {
          line: 310,
          column: 18
        }
      },
      "130": {
        start: {
          line: 310,
          column: 8
        },
        end: {
          line: 310,
          column: 18
        }
      },
      "131": {
        start: {
          line: 311,
          column: 17
        },
        end: {
          line: 311,
          column: 51
        }
      },
      "132": {
        start: {
          line: 312,
          column: 20
        },
        end: {
          line: 312,
          column: 22
        }
      },
      "133": {
        start: {
          line: 314,
          column: 20
        },
        end: {
          line: 314,
          column: 68
        }
      },
      "134": {
        start: {
          line: 315,
          column: 4
        },
        end: {
          line: 318,
          column: 5
        }
      },
      "135": {
        start: {
          line: 316,
          column: 8
        },
        end: {
          line: 316,
          column: 82
        }
      },
      "136": {
        start: {
          line: 317,
          column: 8
        },
        end: {
          line: 317,
          column: 45
        }
      },
      "137": {
        start: {
          line: 320,
          column: 23
        },
        end: {
          line: 320,
          column: 68
        }
      },
      "138": {
        start: {
          line: 321,
          column: 4
        },
        end: {
          line: 324,
          column: 5
        }
      },
      "139": {
        start: {
          line: 322,
          column: 8
        },
        end: {
          line: 322,
          column: 86
        }
      },
      "140": {
        start: {
          line: 323,
          column: 8
        },
        end: {
          line: 323,
          column: 65
        }
      },
      "141": {
        start: {
          line: 326,
          column: 18
        },
        end: {
          line: 326,
          column: 64
        }
      },
      "142": {
        start: {
          line: 327,
          column: 4
        },
        end: {
          line: 330,
          column: 5
        }
      },
      "143": {
        start: {
          line: 328,
          column: 8
        },
        end: {
          line: 328,
          column: 81
        }
      },
      "144": {
        start: {
          line: 329,
          column: 8
        },
        end: {
          line: 329,
          column: 59
        }
      },
      "145": {
        start: {
          line: 332,
          column: 18
        },
        end: {
          line: 332,
          column: 64
        }
      },
      "146": {
        start: {
          line: 333,
          column: 4
        },
        end: {
          line: 336,
          column: 5
        }
      },
      "147": {
        start: {
          line: 334,
          column: 8
        },
        end: {
          line: 334,
          column: 79
        }
      },
      "148": {
        start: {
          line: 335,
          column: 8
        },
        end: {
          line: 335,
          column: 54
        }
      },
      "149": {
        start: {
          line: 337,
          column: 4
        },
        end: {
          line: 337,
          column: 30
        }
      }
    },
    fnMap: {
      "0": {
        name: "colorize",
        decl: {
          start: {
            line: 62,
            column: 9
          },
          end: {
            line: 62,
            column: 17
          }
        },
        loc: {
          start: {
            line: 62,
            column: 40
          },
          end: {
            line: 66,
            column: 1
          }
        },
        line: 62
      },
      "1": {
        name: "addEmoji",
        decl: {
          start: {
            line: 70,
            column: 9
          },
          end: {
            line: 70,
            column: 17
          }
        },
        loc: {
          start: {
            line: 70,
            column: 40
          },
          end: {
            line: 74,
            column: 1
          }
        },
        line: 70
      },
      "2": {
        name: "processHeaders",
        decl: {
          start: {
            line: 78,
            column: 9
          },
          end: {
            line: 78,
            column: 23
          }
        },
        loc: {
          start: {
            line: 78,
            column: 42
          },
          end: {
            line: 106,
            column: 1
          }
        },
        line: 78
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 79,
            column: 50
          },
          end: {
            line: 79,
            column: 51
          }
        },
        loc: {
          start: {
            line: 79,
            column: 75
          },
          end: {
            line: 105,
            column: 5
          }
        },
        line: 79
      },
      "4": {
        name: "processEmphasis",
        decl: {
          start: {
            line: 110,
            column: 9
          },
          end: {
            line: 110,
            column: 24
          }
        },
        loc: {
          start: {
            line: 110,
            column: 43
          },
          end: {
            line: 122,
            column: 1
          }
        },
        line: 110
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 112,
            column: 50
          },
          end: {
            line: 112,
            column: 51
          }
        },
        loc: {
          start: {
            line: 112,
            column: 67
          },
          end: {
            line: 115,
            column: 5
          }
        },
        line: 112
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 117,
            column: 46
          },
          end: {
            line: 117,
            column: 47
          }
        },
        loc: {
          start: {
            line: 117,
            column: 63
          },
          end: {
            line: 120,
            column: 5
          }
        },
        line: 117
      },
      "7": {
        name: "processCode",
        decl: {
          start: {
            line: 126,
            column: 9
          },
          end: {
            line: 126,
            column: 20
          }
        },
        loc: {
          start: {
            line: 126,
            column: 39
          },
          end: {
            line: 141,
            column: 1
          }
        },
        line: 126
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 128,
            column: 59
          },
          end: {
            line: 128,
            column: 60
          }
        },
        loc: {
          start: {
            line: 128,
            column: 82
          },
          end: {
            line: 134,
            column: 5
          }
        },
        line: 128
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 136,
            column: 44
          },
          end: {
            line: 136,
            column: 45
          }
        },
        loc: {
          start: {
            line: 136,
            column: 61
          },
          end: {
            line: 139,
            column: 5
          }
        },
        line: 136
      },
      "10": {
        name: "processLists",
        decl: {
          start: {
            line: 145,
            column: 9
          },
          end: {
            line: 145,
            column: 21
          }
        },
        loc: {
          start: {
            line: 145,
            column: 40
          },
          end: {
            line: 168,
            column: 1
          }
        },
        line: 145
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 148,
            column: 55
          },
          end: {
            line: 148,
            column: 56
          }
        },
        loc: {
          start: {
            line: 148,
            column: 80
          },
          end: {
            line: 152,
            column: 5
          }
        },
        line: 148
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 154,
            column: 57
          },
          end: {
            line: 154,
            column: 58
          }
        },
        loc: {
          start: {
            line: 154,
            column: 87
          },
          end: {
            line: 158,
            column: 5
          }
        },
        line: 154
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 160,
            column: 62
          },
          end: {
            line: 160,
            column: 63
          }
        },
        loc: {
          start: {
            line: 160,
            column: 94
          },
          end: {
            line: 166,
            column: 5
          }
        },
        line: 160
      },
      "14": {
        name: "processBlockquotes",
        decl: {
          start: {
            line: 172,
            column: 9
          },
          end: {
            line: 172,
            column: 27
          }
        },
        loc: {
          start: {
            line: 172,
            column: 46
          },
          end: {
            line: 178,
            column: 1
          }
        },
        line: 172
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 173,
            column: 43
          },
          end: {
            line: 173,
            column: 44
          }
        },
        loc: {
          start: {
            line: 173,
            column: 60
          },
          end: {
            line: 177,
            column: 5
          }
        },
        line: 173
      },
      "16": {
        name: "processLinks",
        decl: {
          start: {
            line: 182,
            column: 9
          },
          end: {
            line: 182,
            column: 21
          }
        },
        loc: {
          start: {
            line: 182,
            column: 40
          },
          end: {
            line: 194,
            column: 1
          }
        },
        line: 182
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 184,
            column: 59
          },
          end: {
            line: 184,
            column: 60
          }
        },
        loc: {
          start: {
            line: 184,
            column: 80
          },
          end: {
            line: 187,
            column: 5
          }
        },
        line: 184
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 189,
            column: 58
          },
          end: {
            line: 189,
            column: 59
          }
        },
        loc: {
          start: {
            line: 189,
            column: 80
          },
          end: {
            line: 192,
            column: 5
          }
        },
        line: 189
      },
      "19": {
        name: "processHorizontalRules",
        decl: {
          start: {
            line: 198,
            column: 9
          },
          end: {
            line: 198,
            column: 31
          }
        },
        loc: {
          start: {
            line: 198,
            column: 50
          },
          end: {
            line: 203,
            column: 1
          }
        },
        line: 198
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 199,
            column: 39
          },
          end: {
            line: 199,
            column: 40
          }
        },
        loc: {
          start: {
            line: 199,
            column: 45
          },
          end: {
            line: 202,
            column: 5
          }
        },
        line: 199
      },
      "21": {
        name: "addVisualEnhancements",
        decl: {
          start: {
            line: 207,
            column: 9
          },
          end: {
            line: 207,
            column: 30
          }
        },
        loc: {
          start: {
            line: 207,
            column: 49
          },
          end: {
            line: 214,
            column: 1
          }
        },
        line: 207
      },
      "22": {
        name: "applyMarkdownStyling",
        decl: {
          start: {
            line: 221,
            column: 16
          },
          end: {
            line: 221,
            column: 36
          }
        },
        loc: {
          start: {
            line: 221,
            column: 61
          },
          end: {
            line: 237,
            column: 1
          }
        },
        line: 221
      },
      "23": {
        name: "createMarkdownPreview",
        decl: {
          start: {
            line: 245,
            column: 16
          },
          end: {
            line: 245,
            column: 37
          }
        },
        loc: {
          start: {
            line: 245,
            column: 69
          },
          end: {
            line: 255,
            column: 1
          }
        },
        line: 245
      },
      "24": {
        name: "extractStyledSections",
        decl: {
          start: {
            line: 263,
            column: 16
          },
          end: {
            line: 263,
            column: 37
          }
        },
        loc: {
          start: {
            line: 263,
            column: 75
          },
          end: {
            line: 301,
            column: 1
          }
        },
        line: 263
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 272,
            column: 51
          },
          end: {
            line: 272,
            column: 52
          }
        },
        loc: {
          start: {
            line: 272,
            column: 56
          },
          end: {
            line: 272,
            column: 79
          }
        },
        line: 272
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 278,
            column: 49
          },
          end: {
            line: 278,
            column: 50
          }
        },
        loc: {
          start: {
            line: 278,
            column: 54
          },
          end: {
            line: 278,
            column: 74
          }
        },
        line: 278
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 284,
            column: 49
          },
          end: {
            line: 284,
            column: 50
          }
        },
        loc: {
          start: {
            line: 284,
            column: 54
          },
          end: {
            line: 284,
            column: 75
          }
        },
        line: 284
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 290,
            column: 50
          },
          end: {
            line: 290,
            column: 51
          }
        },
        loc: {
          start: {
            line: 290,
            column: 55
          },
          end: {
            line: 290,
            column: 82
          }
        },
        line: 290
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 296,
            column: 49
          },
          end: {
            line: 296,
            column: 50
          }
        },
        loc: {
          start: {
            line: 296,
            column: 54
          },
          end: {
            line: 296,
            column: 75
          }
        },
        line: 296
      },
      "30": {
        name: "createMarkdownSummary",
        decl: {
          start: {
            line: 308,
            column: 16
          },
          end: {
            line: 308,
            column: 37
          }
        },
        loc: {
          start: {
            line: 308,
            column: 62
          },
          end: {
            line: 338,
            column: 1
          }
        },
        line: 308
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 64,
            column: 20
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 64,
            column: 20
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "1": {
        loc: {
          start: {
            line: 71,
            column: 4
          },
          end: {
            line: 72,
            column: 20
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 4
          },
          end: {
            line: 72,
            column: 20
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      },
      "2": {
        loc: {
          start: {
            line: 83,
            column: 8
          },
          end: {
            line: 102,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 84,
            column: 12
          },
          end: {
            line: 86,
            column: 22
          }
        }, {
          start: {
            line: 87,
            column: 12
          },
          end: {
            line: 89,
            column: 22
          }
        }, {
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 92,
            column: 22
          }
        }, {
          start: {
            line: 93,
            column: 12
          },
          end: {
            line: 95,
            column: 22
          }
        }, {
          start: {
            line: 96,
            column: 12
          },
          end: {
            line: 98,
            column: 22
          }
        }, {
          start: {
            line: 99,
            column: 12
          },
          end: {
            line: 101,
            column: 22
          }
        }],
        line: 83
      },
      "3": {
        loc: {
          start: {
            line: 104,
            column: 64
          },
          end: {
            line: 104,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 104,
            column: 64
          },
          end: {
            line: 104,
            column: 80
          }
        }, {
          start: {
            line: 104,
            column: 84
          },
          end: {
            line: 104,
            column: 86
          }
        }],
        line: 104
      },
      "4": {
        loc: {
          start: {
            line: 114,
            column: 15
          },
          end: {
            line: 114,
            column: 58
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 114,
            column: 35
          },
          end: {
            line: 114,
            column: 49
          }
        }, {
          start: {
            line: 114,
            column: 52
          },
          end: {
            line: 114,
            column: 58
          }
        }],
        line: 114
      },
      "5": {
        loc: {
          start: {
            line: 119,
            column: 15
          },
          end: {
            line: 119,
            column: 57
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 119,
            column: 35
          },
          end: {
            line: 119,
            column: 48
          }
        }, {
          start: {
            line: 119,
            column: 51
          },
          end: {
            line: 119,
            column: 57
          }
        }],
        line: 119
      },
      "6": {
        loc: {
          start: {
            line: 129,
            column: 26
          },
          end: {
            line: 129,
            column: 50
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 129,
            column: 33
          },
          end: {
            line: 129,
            column: 45
          }
        }, {
          start: {
            line: 129,
            column: 48
          },
          end: {
            line: 129,
            column: 50
          }
        }],
        line: 129
      },
      "7": {
        loc: {
          start: {
            line: 132,
            column: 47
          },
          end: {
            line: 132,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 132,
            column: 47
          },
          end: {
            line: 132,
            column: 63
          }
        }, {
          start: {
            line: 132,
            column: 67
          },
          end: {
            line: 132,
            column: 69
          }
        }],
        line: 132
      },
      "8": {
        loc: {
          start: {
            line: 138,
            column: 15
          },
          end: {
            line: 138,
            column: 58
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 138,
            column: 35
          },
          end: {
            line: 138,
            column: 49
          }
        }, {
          start: {
            line: 138,
            column: 52
          },
          end: {
            line: 138,
            column: 58
          }
        }],
        line: 138
      },
      "9": {
        loc: {
          start: {
            line: 146,
            column: 30
          },
          end: {
            line: 146,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 146,
            column: 30
          },
          end: {
            line: 146,
            column: 48
          }
        }, {
          start: {
            line: 146,
            column: 52
          },
          end: {
            line: 146,
            column: 53
          }
        }],
        line: 146
      },
      "10": {
        loc: {
          start: {
            line: 149,
            column: 23
          },
          end: {
            line: 149,
            column: 53
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 149,
            column: 43
          },
          end: {
            line: 149,
            column: 47
          }
        }, {
          start: {
            line: 149,
            column: 50
          },
          end: {
            line: 149,
            column: 53
          }
        }],
        line: 149
      },
      "11": {
        loc: {
          start: {
            line: 155,
            column: 23
          },
          end: {
            line: 155,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 155,
            column: 43
          },
          end: {
            line: 155,
            column: 53
          }
        }, {
          start: {
            line: 155,
            column: 56
          },
          end: {
            line: 155,
            column: 65
          }
        }],
        line: 155
      },
      "12": {
        loc: {
          start: {
            line: 161,
            column: 25
          },
          end: {
            line: 161,
            column: 76
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 161,
            column: 41
          },
          end: {
            line: 161,
            column: 56
          }
        }, {
          start: {
            line: 161,
            column: 59
          },
          end: {
            line: 161,
            column: 76
          }
        }],
        line: 161
      },
      "13": {
        loc: {
          start: {
            line: 162,
            column: 23
          },
          end: {
            line: 164,
            column: 51
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 163,
            column: 14
          },
          end: {
            line: 163,
            column: 64
          }
        }, {
          start: {
            line: 164,
            column: 14
          },
          end: {
            line: 164,
            column: 51
          }
        }],
        line: 162
      },
      "14": {
        loc: {
          start: {
            line: 185,
            column: 36
          },
          end: {
            line: 185,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 185,
            column: 36
          },
          end: {
            line: 185,
            column: 39
          }
        }, {
          start: {
            line: 185,
            column: 43
          },
          end: {
            line: 185,
            column: 50
          }
        }],
        line: 185
      },
      "15": {
        loc: {
          start: {
            line: 200,
            column: 45
          },
          end: {
            line: 200,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 200,
            column: 45
          },
          end: {
            line: 200,
            column: 61
          }
        }, {
          start: {
            line: 200,
            column: 65
          },
          end: {
            line: 200,
            column: 67
          }
        }],
        line: 200
      },
      "16": {
        loc: {
          start: {
            line: 221,
            column: 47
          },
          end: {
            line: 221,
            column: 59
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 221,
            column: 57
          },
          end: {
            line: 221,
            column: 59
          }
        }],
        line: 221
      },
      "17": {
        loc: {
          start: {
            line: 222,
            column: 4
          },
          end: {
            line: 224,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 222,
            column: 4
          },
          end: {
            line: 224,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 222
      },
      "18": {
        loc: {
          start: {
            line: 222,
            column: 8
          },
          end: {
            line: 222,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 222,
            column: 8
          },
          end: {
            line: 222,
            column: 17
          }
        }, {
          start: {
            line: 222,
            column: 21
          },
          end: {
            line: 222,
            column: 49
          }
        }],
        line: 222
      },
      "19": {
        loc: {
          start: {
            line: 245,
            column: 55
          },
          end: {
            line: 245,
            column: 67
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 245,
            column: 65
          },
          end: {
            line: 245,
            column: 67
          }
        }],
        line: 245
      },
      "20": {
        loc: {
          start: {
            line: 248,
            column: 4
          },
          end: {
            line: 250,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 248,
            column: 4
          },
          end: {
            line: 250,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 248
      },
      "21": {
        loc: {
          start: {
            line: 251,
            column: 57
          },
          end: {
            line: 251,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 251,
            column: 57
          },
          end: {
            line: 251,
            column: 70
          }
        }, {
          start: {
            line: 251,
            column: 74
          },
          end: {
            line: 251,
            column: 76
          }
        }],
        line: 251
      },
      "22": {
        loc: {
          start: {
            line: 263,
            column: 61
          },
          end: {
            line: 263,
            column: 73
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 263,
            column: 71
          },
          end: {
            line: 263,
            column: 73
          }
        }],
        line: 263
      },
      "23": {
        loc: {
          start: {
            line: 264,
            column: 4
          },
          end: {
            line: 265,
            column: 18
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 264,
            column: 4
          },
          end: {
            line: 265,
            column: 18
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 264
      },
      "24": {
        loc: {
          start: {
            line: 268,
            column: 4
          },
          end: {
            line: 299,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 269,
            column: 8
          },
          end: {
            line: 274,
            column: 18
          }
        }, {
          start: {
            line: 275,
            column: 8
          },
          end: {
            line: 280,
            column: 18
          }
        }, {
          start: {
            line: 281,
            column: 8
          },
          end: {
            line: 286,
            column: 18
          }
        }, {
          start: {
            line: 287,
            column: 8
          },
          end: {
            line: 292,
            column: 18
          }
        }, {
          start: {
            line: 293,
            column: 8
          },
          end: {
            line: 298,
            column: 18
          }
        }],
        line: 268
      },
      "25": {
        loc: {
          start: {
            line: 271,
            column: 12
          },
          end: {
            line: 273,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 271,
            column: 12
          },
          end: {
            line: 273,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 271
      },
      "26": {
        loc: {
          start: {
            line: 277,
            column: 12
          },
          end: {
            line: 279,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 277,
            column: 12
          },
          end: {
            line: 279,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 277
      },
      "27": {
        loc: {
          start: {
            line: 283,
            column: 12
          },
          end: {
            line: 285,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 283,
            column: 12
          },
          end: {
            line: 285,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 283
      },
      "28": {
        loc: {
          start: {
            line: 289,
            column: 12
          },
          end: {
            line: 291,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 289,
            column: 12
          },
          end: {
            line: 291,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 289
      },
      "29": {
        loc: {
          start: {
            line: 295,
            column: 12
          },
          end: {
            line: 297,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 295,
            column: 12
          },
          end: {
            line: 297,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 295
      },
      "30": {
        loc: {
          start: {
            line: 308,
            column: 48
          },
          end: {
            line: 308,
            column: 60
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 308,
            column: 58
          },
          end: {
            line: 308,
            column: 60
          }
        }],
        line: 308
      },
      "31": {
        loc: {
          start: {
            line: 309,
            column: 4
          },
          end: {
            line: 310,
            column: 18
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 309,
            column: 4
          },
          end: {
            line: 310,
            column: 18
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 309
      },
      "32": {
        loc: {
          start: {
            line: 315,
            column: 4
          },
          end: {
            line: 318,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 315,
            column: 4
          },
          end: {
            line: 318,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 315
      },
      "33": {
        loc: {
          start: {
            line: 321,
            column: 4
          },
          end: {
            line: 324,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 321,
            column: 4
          },
          end: {
            line: 324,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 321
      },
      "34": {
        loc: {
          start: {
            line: 327,
            column: 4
          },
          end: {
            line: 330,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 327,
            column: 4
          },
          end: {
            line: 330,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 327
      },
      "35": {
        loc: {
          start: {
            line: 333,
            column: 4
          },
          end: {
            line: 336,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 333,
            column: 4
          },
          end: {
            line: 336,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 333
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0, 0, 0, 0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0],
      "23": [0, 0],
      "24": [0, 0, 0, 0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/peterkrzyzek/Development/clickup-mcp-server/src/utils/markdown-styling.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/peterkrzyzek/Development/clickup-mcp-server/src/utils/markdown-styling.ts"],
      sourcesContent: ["/**\n * Simple Markdown Styling Processor\n * Provides enhanced display formatting for markdown content with visual styling\n */\n\nexport interface MarkdownStyleOptions {\n  useColors?: boolean;\n  useEmojis?: boolean;\n  indentSize?: number;\n  maxWidth?: number;\n}\n\nconst DEFAULT_OPTIONS: MarkdownStyleOptions = {\n  useColors: true,\n  useEmojis: true,\n  indentSize: 2,\n  maxWidth: 80\n};\n\n// ANSI color codes for terminal styling\nconst COLORS = {\n  reset: '\\x1b[0m',\n  bright: '\\x1b[1m',\n  dim: '\\x1b[2m',\n  italic: '\\x1b[3m',\n  underline: '\\x1b[4m',\n  \n  // Text colors\n  black: '\\x1b[30m',\n  red: '\\x1b[31m',\n  green: '\\x1b[32m',\n  yellow: '\\x1b[33m',\n  blue: '\\x1b[34m',\n  magenta: '\\x1b[35m',\n  cyan: '\\x1b[36m',\n  white: '\\x1b[37m',\n  \n  // Background colors\n  bgBlack: '\\x1b[40m',\n  bgRed: '\\x1b[41m',\n  bgGreen: '\\x1b[42m',\n  bgYellow: '\\x1b[43m',\n  bgBlue: '\\x1b[44m',\n  bgMagenta: '\\x1b[45m',\n  bgCyan: '\\x1b[46m',\n  bgWhite: '\\x1b[47m'\n};\n\n// Emoji mappings for enhanced visual display\nconst EMOJI_MAP = {\n  h1: '\uD83D\uDD25',\n  h2: '\u26A1',\n  h3: '\uD83D\uDCAB',\n  h4: '\u2728',\n  h5: '\uD83C\uDF1F',\n  h6: '\u2B50',\n  bold: '\uD83D\uDCAA',\n  italic: '\u2728',\n  code: '\uD83D\uDCBB',\n  link: '\uD83D\uDD17',\n  image: '\uD83D\uDDBC\uFE0F',\n  list: '\uD83D\uDCCB',\n  quote: '\uD83D\uDCAC',\n  check: '\u2705',\n  uncheck: '\u2610',\n  warning: '\u26A0\uFE0F',\n  info: '\uD83D\uDCA1',\n  success: '\uD83C\uDF89',\n  error: '\u274C'\n};\n\n/**\n * Apply color styling to text\n */\nfunction colorize(text: string, color: string, options: MarkdownStyleOptions): string {\n  if (!options.useColors) return text;\n  return `${color}${text}${COLORS.reset}`;\n}\n\n/**\n * Add emoji prefix to text\n */\nfunction addEmoji(text: string, emoji: string, options: MarkdownStyleOptions): string {\n  if (!options.useEmojis) return text;\n  return `${emoji} ${text}`;\n}\n\n/**\n * Process headers with styling\n */\nfunction processHeaders(content: string, options: MarkdownStyleOptions): string {\n  return content.replace(/^(#{1,6})\\s+(.+)$/gm, (match, hashes, text) => {\n    const level = hashes.length;\n    const emoji = EMOJI_MAP[`h${level}` as keyof typeof EMOJI_MAP];\n    \n    let styled = text;\n    \n    switch (level) {\n      case 1:\n        styled = colorize(text.toUpperCase(), COLORS.bright + COLORS.red, options);\n        break;\n      case 2:\n        styled = colorize(text, COLORS.bright + COLORS.blue, options);\n        break;\n      case 3:\n        styled = colorize(text, COLORS.bright + COLORS.green, options);\n        break;\n      case 4:\n        styled = colorize(text, COLORS.bright + COLORS.yellow, options);\n        break;\n      case 5:\n        styled = colorize(text, COLORS.bright + COLORS.magenta, options);\n        break;\n      case 6:\n        styled = colorize(text, COLORS.bright + COLORS.cyan, options);\n        break;\n    }\n    \n    const result = addEmoji(styled, emoji, options);\n    return `\\n${result}\\n${'='.repeat(Math.min(text.length, options.maxWidth || 80))}\\n`;\n  });\n}\n\n/**\n * Process bold and italic text\n */\nfunction processEmphasis(content: string, options: MarkdownStyleOptions): string {\n  // Bold text\n  content = content.replace(/\\*\\*([^*]+)\\*\\*/g, (match, text) => {\n    const styled = colorize(text, COLORS.bright, options);\n    return options.useEmojis ? `\uD83D\uDCAA ${styled}` : styled;\n  });\n  \n  // Italic text\n  content = content.replace(/\\*([^*]+)\\*/g, (match, text) => {\n    const styled = colorize(text, COLORS.italic, options);\n    return options.useEmojis ? `\u2728 ${styled}` : styled;\n  });\n  \n  return content;\n}\n\n/**\n * Process code blocks and inline code\n */\nfunction processCode(content: string, options: MarkdownStyleOptions): string {\n  // Code blocks\n  content = content.replace(/```(\\w+)?\\n([\\s\\S]*?)```/g, (match, lang, code) => {\n    const langLabel = lang ? ` (${lang})` : '';\n    const header = colorize(`CODE${langLabel}`, COLORS.bgBlue + COLORS.white, options);\n    const styledCode = colorize(code.trim(), COLORS.dim + COLORS.cyan, options);\n    const border = '\u2500'.repeat(Math.min(60, options.maxWidth || 80));\n    \n    return `\\n${addEmoji(header, EMOJI_MAP.code, options)}\\n${border}\\n${styledCode}\\n${border}\\n`;\n  });\n  \n  // Inline code\n  content = content.replace(/`([^`]+)`/g, (match, code) => {\n    const styled = colorize(code, COLORS.bgBlack + COLORS.yellow, options);\n    return options.useEmojis ? `\uD83D\uDCBB ${styled}` : styled;\n  });\n  \n  return content;\n}\n\n/**\n * Process lists\n */\nfunction processLists(content: string, options: MarkdownStyleOptions): string {\n  const indent = ' '.repeat(options.indentSize || 2);\n  \n  // Unordered lists\n  content = content.replace(/^(\\s*)[-*+]\\s+(.+)$/gm, (match, spaces, text) => {\n    const bullet = options.useEmojis ? '\uD83D\uDCCB' : '\u2022';\n    const styled = colorize(text, COLORS.white, options);\n    return `${spaces}${bullet} ${styled}`;\n  });\n  \n  // Ordered lists\n  content = content.replace(/^(\\s*)(\\d+)\\.\\s+(.+)$/gm, (match, spaces, num, text) => {\n    const bullet = options.useEmojis ? `${num}\uFE0F\u20E3` : `${num}.`;\n    const styled = colorize(text, COLORS.white, options);\n    return `${spaces}${bullet} ${styled}`;\n  });\n  \n  // Checkboxes\n  content = content.replace(/^(\\s*)- \\[([x ])\\]\\s+(.+)$/gm, (match, spaces, check, text) => {\n    const checkbox = check === 'x' ? EMOJI_MAP.check : EMOJI_MAP.uncheck;\n    const styled = check === 'x' \n      ? colorize(text, COLORS.dim + COLORS.green, options)\n      : colorize(text, COLORS.white, options);\n    return `${spaces}${checkbox} ${styled}`;\n  });\n  \n  return content;\n}\n\n/**\n * Process blockquotes\n */\nfunction processBlockquotes(content: string, options: MarkdownStyleOptions): string {\n  return content.replace(/^>\\s+(.+)$/gm, (match, text) => {\n    const styled = colorize(text, COLORS.italic + COLORS.cyan, options);\n    const quote = addEmoji(styled, EMOJI_MAP.quote, options);\n    return `\u2502 ${quote}`;\n  });\n}\n\n/**\n * Process links and images\n */\nfunction processLinks(content: string, options: MarkdownStyleOptions): string {\n  // Images\n  content = content.replace(/!\\[([^\\]]*)\\]\\(([^)]+)\\)/g, (match, alt, url) => {\n    const styled = colorize(`[${alt || 'Image'}]`, COLORS.bright + COLORS.magenta, options);\n    return addEmoji(`${styled} (${url})`, EMOJI_MAP.image, options);\n  });\n  \n  // Links\n  content = content.replace(/\\[([^\\]]+)\\]\\(([^)]+)\\)/g, (match, text, url) => {\n    const styled = colorize(text, COLORS.underline + COLORS.blue, options);\n    return addEmoji(`${styled} (${url})`, EMOJI_MAP.link, options);\n  });\n  \n  return content;\n}\n\n/**\n * Process horizontal rules\n */\nfunction processHorizontalRules(content: string, options: MarkdownStyleOptions): string {\n  return content.replace(/^---+$/gm, () => {\n    const rule = '\u2550'.repeat(Math.min(60, options.maxWidth || 80));\n    return colorize(rule, COLORS.dim + COLORS.white, options);\n  });\n}\n\n/**\n * Add visual separators and spacing\n */\nfunction addVisualEnhancements(content: string, options: MarkdownStyleOptions): string {\n  // Add spacing around sections\n  content = content.replace(/\\n(#{1,6})/g, '\\n\\n$1');\n  content = content.replace(/(#{1,6}[^\\n]+)\\n/g, '$1\\n\\n');\n  \n  // Clean up excessive newlines\n  content = content.replace(/\\n{3,}/g, '\\n\\n');\n  \n  return content.trim();\n}\n\n/**\n * Main function to apply simple markdown styling\n * @param markdown The markdown content to style\n * @param options Styling options\n * @returns Styled markdown content with visual enhancements\n */\nexport function applyMarkdownStyling(markdown: string, options: MarkdownStyleOptions = {}): string {\n  if (!markdown || typeof markdown !== 'string') {\n    return '';\n  }\n  \n  const opts = { ...DEFAULT_OPTIONS, ...options };\n  \n  let styled = markdown;\n  \n  // Apply styling in order\n  styled = processHeaders(styled, opts);\n  styled = processCode(styled, opts);\n  styled = processEmphasis(styled, opts);\n  styled = processLists(styled, opts);\n  styled = processBlockquotes(styled, opts);\n  styled = processLinks(styled, opts);\n  styled = processHorizontalRules(styled, opts);\n  styled = addVisualEnhancements(styled, opts);\n  \n  return styled;\n}\n\n/**\n * Create a styled preview of markdown content\n * @param markdown The markdown content\n * @param title Optional title for the preview\n * @param options Styling options\n * @returns Formatted preview with title and borders\n */\nexport function createMarkdownPreview(\n  markdown: string, \n  title?: string, \n  options: MarkdownStyleOptions = {}\n): string {\n  const opts = { ...DEFAULT_OPTIONS, ...options };\n  const styled = applyMarkdownStyling(markdown, opts);\n  \n  if (!title) {\n    return styled;\n  }\n  \n  const border = '\u2550'.repeat(Math.min(title.length + 4, opts.maxWidth || 80));\n  const styledTitle = colorize(title.toUpperCase(), COLORS.bright + COLORS.white, opts);\n  const titleWithEmoji = addEmoji(styledTitle, '\uD83D\uDCC4', opts);\n  \n  return `${border}\\n  ${titleWithEmoji}\\n${border}\\n\\n${styled}\\n\\n${border}`;\n}\n\n/**\n * Extract and style markdown sections\n * @param markdown The markdown content\n * @param sectionType The type of section to extract ('headers', 'code', 'lists', etc.)\n * @param options Styling options\n * @returns Styled sections\n */\nexport function extractStyledSections(\n  markdown: string, \n  sectionType: 'headers' | 'code' | 'lists' | 'quotes' | 'links',\n  options: MarkdownStyleOptions = {}\n): string[] {\n  if (!markdown) return [];\n  \n  const opts = { ...DEFAULT_OPTIONS, ...options };\n  const sections: string[] = [];\n  \n  switch (sectionType) {\n    case 'headers':\n      const headerMatches = markdown.match(/^#{1,6}\\s+.+$/gm);\n      if (headerMatches) {\n        sections.push(...headerMatches.map(h => processHeaders(h, opts)));\n      }\n      break;\n      \n    case 'code':\n      const codeMatches = markdown.match(/```[\\s\\S]*?```|`[^`]+`/g);\n      if (codeMatches) {\n        sections.push(...codeMatches.map(c => processCode(c, opts)));\n      }\n      break;\n      \n    case 'lists':\n      const listMatches = markdown.match(/^(\\s*)[-*+]\\s+.+$|^(\\s*)\\d+\\.\\s+.+$/gm);\n      if (listMatches) {\n        sections.push(...listMatches.map(l => processLists(l, opts)));\n      }\n      break;\n      \n    case 'quotes':\n      const quoteMatches = markdown.match(/^>\\s+.+$/gm);\n      if (quoteMatches) {\n        sections.push(...quoteMatches.map(q => processBlockquotes(q, opts)));\n      }\n      break;\n      \n    case 'links':\n      const linkMatches = markdown.match(/\\[([^\\]]+)\\]\\(([^)]+)\\)|!\\[([^\\]]*)\\]\\(([^)]+)\\)/g);\n      if (linkMatches) {\n        sections.push(...linkMatches.map(l => processLinks(l, opts)));\n      }\n      break;\n  }\n  \n  return sections;\n}\n\n/**\n * Create a markdown summary with key information highlighted\n * @param markdown The markdown content\n * @param options Styling options\n * @returns Styled summary\n */\nexport function createMarkdownSummary(markdown: string, options: MarkdownStyleOptions = {}): string {\n  if (!markdown) return '';\n  \n  const opts = { ...DEFAULT_OPTIONS, ...options };\n  const summary: string[] = [];\n  \n  // Extract headers\n  const headers = extractStyledSections(markdown, 'headers', opts);\n  if (headers.length > 0) {\n    summary.push(colorize('\uD83D\uDCCB SECTIONS:', COLORS.bright + COLORS.blue, opts));\n    summary.push(...headers.slice(0, 5)); // Limit to first 5 headers\n  }\n  \n  // Extract code blocks\n  const codeBlocks = extractStyledSections(markdown, 'code', opts);\n  if (codeBlocks.length > 0) {\n    summary.push(colorize('\uD83D\uDCBB CODE BLOCKS:', COLORS.bright + COLORS.green, opts));\n    summary.push(`${codeBlocks.length} code block(s) found`);\n  }\n  \n  // Extract lists\n  const lists = extractStyledSections(markdown, 'lists', opts);\n  if (lists.length > 0) {\n    summary.push(colorize('\uD83D\uDCDD LISTS:', COLORS.bright + COLORS.yellow, opts));\n    summary.push(`${lists.length} list item(s) found`);\n  }\n  \n  // Extract links\n  const links = extractStyledSections(markdown, 'links', opts);\n  if (links.length > 0) {\n    summary.push(colorize('\uD83D\uDD17 LINKS:', COLORS.bright + COLORS.cyan, opts));\n    summary.push(`${links.length} link(s) found`);\n  }\n  \n  return summary.join('\\n');\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ce151fb72c5fa243c2b42a99886fc90c451c9a62"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_135cn0mbll = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_135cn0mbll();
/**
 * Simple Markdown Styling Processor
 * Provides enhanced display formatting for markdown content with visual styling
 */
const DEFAULT_OPTIONS =
/* istanbul ignore next */
(cov_135cn0mbll().s[0]++, {
  useColors: true,
  useEmojis: true,
  indentSize: 2,
  maxWidth: 80
});
// ANSI color codes for terminal styling
const COLORS =
/* istanbul ignore next */
(cov_135cn0mbll().s[1]++, {
  reset: '\x1b[0m',
  bright: '\x1b[1m',
  dim: '\x1b[2m',
  italic: '\x1b[3m',
  underline: '\x1b[4m',
  // Text colors
  black: '\x1b[30m',
  red: '\x1b[31m',
  green: '\x1b[32m',
  yellow: '\x1b[33m',
  blue: '\x1b[34m',
  magenta: '\x1b[35m',
  cyan: '\x1b[36m',
  white: '\x1b[37m',
  // Background colors
  bgBlack: '\x1b[40m',
  bgRed: '\x1b[41m',
  bgGreen: '\x1b[42m',
  bgYellow: '\x1b[43m',
  bgBlue: '\x1b[44m',
  bgMagenta: '\x1b[45m',
  bgCyan: '\x1b[46m',
  bgWhite: '\x1b[47m'
});
// Emoji mappings for enhanced visual display
const EMOJI_MAP =
/* istanbul ignore next */
(cov_135cn0mbll().s[2]++, {
  h1: '🔥',
  h2: '⚡',
  h3: '💫',
  h4: '✨',
  h5: '🌟',
  h6: '⭐',
  bold: '💪',
  italic: '✨',
  code: '💻',
  link: '🔗',
  image: '🖼️',
  list: '📋',
  quote: '💬',
  check: '✅',
  uncheck: '☐',
  warning: '⚠️',
  info: '💡',
  success: '🎉',
  error: '❌'
});
/**
 * Apply color styling to text
 */
function colorize(text, color, options) {
  /* istanbul ignore next */
  cov_135cn0mbll().f[0]++;
  cov_135cn0mbll().s[3]++;
  if (!options.useColors) {
    /* istanbul ignore next */
    cov_135cn0mbll().b[0][0]++;
    cov_135cn0mbll().s[4]++;
    return text;
  } else
  /* istanbul ignore next */
  {
    cov_135cn0mbll().b[0][1]++;
  }
  cov_135cn0mbll().s[5]++;
  return `${color}${text}${COLORS.reset}`;
}
/**
 * Add emoji prefix to text
 */
function addEmoji(text, emoji, options) {
  /* istanbul ignore next */
  cov_135cn0mbll().f[1]++;
  cov_135cn0mbll().s[6]++;
  if (!options.useEmojis) {
    /* istanbul ignore next */
    cov_135cn0mbll().b[1][0]++;
    cov_135cn0mbll().s[7]++;
    return text;
  } else
  /* istanbul ignore next */
  {
    cov_135cn0mbll().b[1][1]++;
  }
  cov_135cn0mbll().s[8]++;
  return `${emoji} ${text}`;
}
/**
 * Process headers with styling
 */
function processHeaders(content, options) {
  /* istanbul ignore next */
  cov_135cn0mbll().f[2]++;
  cov_135cn0mbll().s[9]++;
  return content.replace(/^(#{1,6})\s+(.+)$/gm, (match, hashes, text) => {
    /* istanbul ignore next */
    cov_135cn0mbll().f[3]++;
    const level =
    /* istanbul ignore next */
    (cov_135cn0mbll().s[10]++, hashes.length);
    const emoji =
    /* istanbul ignore next */
    (cov_135cn0mbll().s[11]++, EMOJI_MAP[`h${level}`]);
    let styled =
    /* istanbul ignore next */
    (cov_135cn0mbll().s[12]++, text);
    /* istanbul ignore next */
    cov_135cn0mbll().s[13]++;
    switch (level) {
      case 1:
        /* istanbul ignore next */
        cov_135cn0mbll().b[2][0]++;
        cov_135cn0mbll().s[14]++;
        styled = colorize(text.toUpperCase(), COLORS.bright + COLORS.red, options);
        /* istanbul ignore next */
        cov_135cn0mbll().s[15]++;
        break;
      case 2:
        /* istanbul ignore next */
        cov_135cn0mbll().b[2][1]++;
        cov_135cn0mbll().s[16]++;
        styled = colorize(text, COLORS.bright + COLORS.blue, options);
        /* istanbul ignore next */
        cov_135cn0mbll().s[17]++;
        break;
      case 3:
        /* istanbul ignore next */
        cov_135cn0mbll().b[2][2]++;
        cov_135cn0mbll().s[18]++;
        styled = colorize(text, COLORS.bright + COLORS.green, options);
        /* istanbul ignore next */
        cov_135cn0mbll().s[19]++;
        break;
      case 4:
        /* istanbul ignore next */
        cov_135cn0mbll().b[2][3]++;
        cov_135cn0mbll().s[20]++;
        styled = colorize(text, COLORS.bright + COLORS.yellow, options);
        /* istanbul ignore next */
        cov_135cn0mbll().s[21]++;
        break;
      case 5:
        /* istanbul ignore next */
        cov_135cn0mbll().b[2][4]++;
        cov_135cn0mbll().s[22]++;
        styled = colorize(text, COLORS.bright + COLORS.magenta, options);
        /* istanbul ignore next */
        cov_135cn0mbll().s[23]++;
        break;
      case 6:
        /* istanbul ignore next */
        cov_135cn0mbll().b[2][5]++;
        cov_135cn0mbll().s[24]++;
        styled = colorize(text, COLORS.bright + COLORS.cyan, options);
        /* istanbul ignore next */
        cov_135cn0mbll().s[25]++;
        break;
    }
    const result =
    /* istanbul ignore next */
    (cov_135cn0mbll().s[26]++, addEmoji(styled, emoji, options));
    /* istanbul ignore next */
    cov_135cn0mbll().s[27]++;
    return `\n${result}\n${'='.repeat(Math.min(text.length,
    /* istanbul ignore next */
    (cov_135cn0mbll().b[3][0]++, options.maxWidth) ||
    /* istanbul ignore next */
    (cov_135cn0mbll().b[3][1]++, 80)))}\n`;
  });
}
/**
 * Process bold and italic text
 */
function processEmphasis(content, options) {
  /* istanbul ignore next */
  cov_135cn0mbll().f[4]++;
  cov_135cn0mbll().s[28]++;
  // Bold text
  content = content.replace(/\*\*([^*]+)\*\*/g, (match, text) => {
    /* istanbul ignore next */
    cov_135cn0mbll().f[5]++;
    const styled =
    /* istanbul ignore next */
    (cov_135cn0mbll().s[29]++, colorize(text, COLORS.bright, options));
    /* istanbul ignore next */
    cov_135cn0mbll().s[30]++;
    return options.useEmojis ?
    /* istanbul ignore next */
    (cov_135cn0mbll().b[4][0]++, `💪 ${styled}`) :
    /* istanbul ignore next */
    (cov_135cn0mbll().b[4][1]++, styled);
  });
  // Italic text
  /* istanbul ignore next */
  cov_135cn0mbll().s[31]++;
  content = content.replace(/\*([^*]+)\*/g, (match, text) => {
    /* istanbul ignore next */
    cov_135cn0mbll().f[6]++;
    const styled =
    /* istanbul ignore next */
    (cov_135cn0mbll().s[32]++, colorize(text, COLORS.italic, options));
    /* istanbul ignore next */
    cov_135cn0mbll().s[33]++;
    return options.useEmojis ?
    /* istanbul ignore next */
    (cov_135cn0mbll().b[5][0]++, `✨ ${styled}`) :
    /* istanbul ignore next */
    (cov_135cn0mbll().b[5][1]++, styled);
  });
  /* istanbul ignore next */
  cov_135cn0mbll().s[34]++;
  return content;
}
/**
 * Process code blocks and inline code
 */
function processCode(content, options) {
  /* istanbul ignore next */
  cov_135cn0mbll().f[7]++;
  cov_135cn0mbll().s[35]++;
  // Code blocks
  content = content.replace(/```(\w+)?\n([\s\S]*?)```/g, (match, lang, code) => {
    /* istanbul ignore next */
    cov_135cn0mbll().f[8]++;
    const langLabel =
    /* istanbul ignore next */
    (cov_135cn0mbll().s[36]++, lang ?
    /* istanbul ignore next */
    (cov_135cn0mbll().b[6][0]++, ` (${lang})`) :
    /* istanbul ignore next */
    (cov_135cn0mbll().b[6][1]++, ''));
    const header =
    /* istanbul ignore next */
    (cov_135cn0mbll().s[37]++, colorize(`CODE${langLabel}`, COLORS.bgBlue + COLORS.white, options));
    const styledCode =
    /* istanbul ignore next */
    (cov_135cn0mbll().s[38]++, colorize(code.trim(), COLORS.dim + COLORS.cyan, options));
    const border =
    /* istanbul ignore next */
    (cov_135cn0mbll().s[39]++, '─'.repeat(Math.min(60,
    /* istanbul ignore next */
    (cov_135cn0mbll().b[7][0]++, options.maxWidth) ||
    /* istanbul ignore next */
    (cov_135cn0mbll().b[7][1]++, 80))));
    /* istanbul ignore next */
    cov_135cn0mbll().s[40]++;
    return `\n${addEmoji(header, EMOJI_MAP.code, options)}\n${border}\n${styledCode}\n${border}\n`;
  });
  // Inline code
  /* istanbul ignore next */
  cov_135cn0mbll().s[41]++;
  content = content.replace(/`([^`]+)`/g, (match, code) => {
    /* istanbul ignore next */
    cov_135cn0mbll().f[9]++;
    const styled =
    /* istanbul ignore next */
    (cov_135cn0mbll().s[42]++, colorize(code, COLORS.bgBlack + COLORS.yellow, options));
    /* istanbul ignore next */
    cov_135cn0mbll().s[43]++;
    return options.useEmojis ?
    /* istanbul ignore next */
    (cov_135cn0mbll().b[8][0]++, `💻 ${styled}`) :
    /* istanbul ignore next */
    (cov_135cn0mbll().b[8][1]++, styled);
  });
  /* istanbul ignore next */
  cov_135cn0mbll().s[44]++;
  return content;
}
/**
 * Process lists
 */
function processLists(content, options) {
  /* istanbul ignore next */
  cov_135cn0mbll().f[10]++;
  const indent =
  /* istanbul ignore next */
  (cov_135cn0mbll().s[45]++, ' '.repeat(
  /* istanbul ignore next */
  (cov_135cn0mbll().b[9][0]++, options.indentSize) ||
  /* istanbul ignore next */
  (cov_135cn0mbll().b[9][1]++, 2)));
  // Unordered lists
  /* istanbul ignore next */
  cov_135cn0mbll().s[46]++;
  content = content.replace(/^(\s*)[-*+]\s+(.+)$/gm, (match, spaces, text) => {
    /* istanbul ignore next */
    cov_135cn0mbll().f[11]++;
    const bullet =
    /* istanbul ignore next */
    (cov_135cn0mbll().s[47]++, options.useEmojis ?
    /* istanbul ignore next */
    (cov_135cn0mbll().b[10][0]++, '📋') :
    /* istanbul ignore next */
    (cov_135cn0mbll().b[10][1]++, '•'));
    const styled =
    /* istanbul ignore next */
    (cov_135cn0mbll().s[48]++, colorize(text, COLORS.white, options));
    /* istanbul ignore next */
    cov_135cn0mbll().s[49]++;
    return `${spaces}${bullet} ${styled}`;
  });
  // Ordered lists
  /* istanbul ignore next */
  cov_135cn0mbll().s[50]++;
  content = content.replace(/^(\s*)(\d+)\.\s+(.+)$/gm, (match, spaces, num, text) => {
    /* istanbul ignore next */
    cov_135cn0mbll().f[12]++;
    const bullet =
    /* istanbul ignore next */
    (cov_135cn0mbll().s[51]++, options.useEmojis ?
    /* istanbul ignore next */
    (cov_135cn0mbll().b[11][0]++, `${num}️⃣`) :
    /* istanbul ignore next */
    (cov_135cn0mbll().b[11][1]++, `${num}.`));
    const styled =
    /* istanbul ignore next */
    (cov_135cn0mbll().s[52]++, colorize(text, COLORS.white, options));
    /* istanbul ignore next */
    cov_135cn0mbll().s[53]++;
    return `${spaces}${bullet} ${styled}`;
  });
  // Checkboxes
  /* istanbul ignore next */
  cov_135cn0mbll().s[54]++;
  content = content.replace(/^(\s*)- \[([x ])\]\s+(.+)$/gm, (match, spaces, check, text) => {
    /* istanbul ignore next */
    cov_135cn0mbll().f[13]++;
    const checkbox =
    /* istanbul ignore next */
    (cov_135cn0mbll().s[55]++, check === 'x' ?
    /* istanbul ignore next */
    (cov_135cn0mbll().b[12][0]++, EMOJI_MAP.check) :
    /* istanbul ignore next */
    (cov_135cn0mbll().b[12][1]++, EMOJI_MAP.uncheck));
    const styled =
    /* istanbul ignore next */
    (cov_135cn0mbll().s[56]++, check === 'x' ?
    /* istanbul ignore next */
    (cov_135cn0mbll().b[13][0]++, colorize(text, COLORS.dim + COLORS.green, options)) :
    /* istanbul ignore next */
    (cov_135cn0mbll().b[13][1]++, colorize(text, COLORS.white, options)));
    /* istanbul ignore next */
    cov_135cn0mbll().s[57]++;
    return `${spaces}${checkbox} ${styled}`;
  });
  /* istanbul ignore next */
  cov_135cn0mbll().s[58]++;
  return content;
}
/**
 * Process blockquotes
 */
function processBlockquotes(content, options) {
  /* istanbul ignore next */
  cov_135cn0mbll().f[14]++;
  cov_135cn0mbll().s[59]++;
  return content.replace(/^>\s+(.+)$/gm, (match, text) => {
    /* istanbul ignore next */
    cov_135cn0mbll().f[15]++;
    const styled =
    /* istanbul ignore next */
    (cov_135cn0mbll().s[60]++, colorize(text, COLORS.italic + COLORS.cyan, options));
    const quote =
    /* istanbul ignore next */
    (cov_135cn0mbll().s[61]++, addEmoji(styled, EMOJI_MAP.quote, options));
    /* istanbul ignore next */
    cov_135cn0mbll().s[62]++;
    return `│ ${quote}`;
  });
}
/**
 * Process links and images
 */
function processLinks(content, options) {
  /* istanbul ignore next */
  cov_135cn0mbll().f[16]++;
  cov_135cn0mbll().s[63]++;
  // Images
  content = content.replace(/!\[([^\]]*)\]\(([^)]+)\)/g, (match, alt, url) => {
    /* istanbul ignore next */
    cov_135cn0mbll().f[17]++;
    const styled =
    /* istanbul ignore next */
    (cov_135cn0mbll().s[64]++, colorize(`[${
    /* istanbul ignore next */
    (cov_135cn0mbll().b[14][0]++, alt) ||
    /* istanbul ignore next */
    (cov_135cn0mbll().b[14][1]++, 'Image')}]`, COLORS.bright + COLORS.magenta, options));
    /* istanbul ignore next */
    cov_135cn0mbll().s[65]++;
    return addEmoji(`${styled} (${url})`, EMOJI_MAP.image, options);
  });
  // Links
  /* istanbul ignore next */
  cov_135cn0mbll().s[66]++;
  content = content.replace(/\[([^\]]+)\]\(([^)]+)\)/g, (match, text, url) => {
    /* istanbul ignore next */
    cov_135cn0mbll().f[18]++;
    const styled =
    /* istanbul ignore next */
    (cov_135cn0mbll().s[67]++, colorize(text, COLORS.underline + COLORS.blue, options));
    /* istanbul ignore next */
    cov_135cn0mbll().s[68]++;
    return addEmoji(`${styled} (${url})`, EMOJI_MAP.link, options);
  });
  /* istanbul ignore next */
  cov_135cn0mbll().s[69]++;
  return content;
}
/**
 * Process horizontal rules
 */
function processHorizontalRules(content, options) {
  /* istanbul ignore next */
  cov_135cn0mbll().f[19]++;
  cov_135cn0mbll().s[70]++;
  return content.replace(/^---+$/gm, () => {
    /* istanbul ignore next */
    cov_135cn0mbll().f[20]++;
    const rule =
    /* istanbul ignore next */
    (cov_135cn0mbll().s[71]++, '═'.repeat(Math.min(60,
    /* istanbul ignore next */
    (cov_135cn0mbll().b[15][0]++, options.maxWidth) ||
    /* istanbul ignore next */
    (cov_135cn0mbll().b[15][1]++, 80))));
    /* istanbul ignore next */
    cov_135cn0mbll().s[72]++;
    return colorize(rule, COLORS.dim + COLORS.white, options);
  });
}
/**
 * Add visual separators and spacing
 */
function addVisualEnhancements(content, options) {
  /* istanbul ignore next */
  cov_135cn0mbll().f[21]++;
  cov_135cn0mbll().s[73]++;
  // Add spacing around sections
  content = content.replace(/\n(#{1,6})/g, '\n\n$1');
  /* istanbul ignore next */
  cov_135cn0mbll().s[74]++;
  content = content.replace(/(#{1,6}[^\n]+)\n/g, '$1\n\n');
  // Clean up excessive newlines
  /* istanbul ignore next */
  cov_135cn0mbll().s[75]++;
  content = content.replace(/\n{3,}/g, '\n\n');
  /* istanbul ignore next */
  cov_135cn0mbll().s[76]++;
  return content.trim();
}
/**
 * Main function to apply simple markdown styling
 * @param markdown The markdown content to style
 * @param options Styling options
 * @returns Styled markdown content with visual enhancements
 */
export function applyMarkdownStyling(markdown, options =
/* istanbul ignore next */
(cov_135cn0mbll().b[16][0]++, {})) {
  /* istanbul ignore next */
  cov_135cn0mbll().f[22]++;
  cov_135cn0mbll().s[77]++;
  if (
  /* istanbul ignore next */
  (cov_135cn0mbll().b[18][0]++, !markdown) ||
  /* istanbul ignore next */
  (cov_135cn0mbll().b[18][1]++, typeof markdown !== 'string')) {
    /* istanbul ignore next */
    cov_135cn0mbll().b[17][0]++;
    cov_135cn0mbll().s[78]++;
    return '';
  } else
  /* istanbul ignore next */
  {
    cov_135cn0mbll().b[17][1]++;
  }
  const opts =
  /* istanbul ignore next */
  (cov_135cn0mbll().s[79]++, {
    ...DEFAULT_OPTIONS,
    ...options
  });
  let styled =
  /* istanbul ignore next */
  (cov_135cn0mbll().s[80]++, markdown);
  // Apply styling in order
  /* istanbul ignore next */
  cov_135cn0mbll().s[81]++;
  styled = processHeaders(styled, opts);
  /* istanbul ignore next */
  cov_135cn0mbll().s[82]++;
  styled = processCode(styled, opts);
  /* istanbul ignore next */
  cov_135cn0mbll().s[83]++;
  styled = processEmphasis(styled, opts);
  /* istanbul ignore next */
  cov_135cn0mbll().s[84]++;
  styled = processLists(styled, opts);
  /* istanbul ignore next */
  cov_135cn0mbll().s[85]++;
  styled = processBlockquotes(styled, opts);
  /* istanbul ignore next */
  cov_135cn0mbll().s[86]++;
  styled = processLinks(styled, opts);
  /* istanbul ignore next */
  cov_135cn0mbll().s[87]++;
  styled = processHorizontalRules(styled, opts);
  /* istanbul ignore next */
  cov_135cn0mbll().s[88]++;
  styled = addVisualEnhancements(styled, opts);
  /* istanbul ignore next */
  cov_135cn0mbll().s[89]++;
  return styled;
}
/**
 * Create a styled preview of markdown content
 * @param markdown The markdown content
 * @param title Optional title for the preview
 * @param options Styling options
 * @returns Formatted preview with title and borders
 */
export function createMarkdownPreview(markdown, title, options =
/* istanbul ignore next */
(cov_135cn0mbll().b[19][0]++, {})) {
  /* istanbul ignore next */
  cov_135cn0mbll().f[23]++;
  const opts =
  /* istanbul ignore next */
  (cov_135cn0mbll().s[90]++, {
    ...DEFAULT_OPTIONS,
    ...options
  });
  const styled =
  /* istanbul ignore next */
  (cov_135cn0mbll().s[91]++, applyMarkdownStyling(markdown, opts));
  /* istanbul ignore next */
  cov_135cn0mbll().s[92]++;
  if (!title) {
    /* istanbul ignore next */
    cov_135cn0mbll().b[20][0]++;
    cov_135cn0mbll().s[93]++;
    return styled;
  } else
  /* istanbul ignore next */
  {
    cov_135cn0mbll().b[20][1]++;
  }
  const border =
  /* istanbul ignore next */
  (cov_135cn0mbll().s[94]++, '═'.repeat(Math.min(title.length + 4,
  /* istanbul ignore next */
  (cov_135cn0mbll().b[21][0]++, opts.maxWidth) ||
  /* istanbul ignore next */
  (cov_135cn0mbll().b[21][1]++, 80))));
  const styledTitle =
  /* istanbul ignore next */
  (cov_135cn0mbll().s[95]++, colorize(title.toUpperCase(), COLORS.bright + COLORS.white, opts));
  const titleWithEmoji =
  /* istanbul ignore next */
  (cov_135cn0mbll().s[96]++, addEmoji(styledTitle, '📄', opts));
  /* istanbul ignore next */
  cov_135cn0mbll().s[97]++;
  return `${border}\n  ${titleWithEmoji}\n${border}\n\n${styled}\n\n${border}`;
}
/**
 * Extract and style markdown sections
 * @param markdown The markdown content
 * @param sectionType The type of section to extract ('headers', 'code', 'lists', etc.)
 * @param options Styling options
 * @returns Styled sections
 */
export function extractStyledSections(markdown, sectionType, options =
/* istanbul ignore next */
(cov_135cn0mbll().b[22][0]++, {})) {
  /* istanbul ignore next */
  cov_135cn0mbll().f[24]++;
  cov_135cn0mbll().s[98]++;
  if (!markdown) {
    /* istanbul ignore next */
    cov_135cn0mbll().b[23][0]++;
    cov_135cn0mbll().s[99]++;
    return [];
  } else
  /* istanbul ignore next */
  {
    cov_135cn0mbll().b[23][1]++;
  }
  const opts =
  /* istanbul ignore next */
  (cov_135cn0mbll().s[100]++, {
    ...DEFAULT_OPTIONS,
    ...options
  });
  const sections =
  /* istanbul ignore next */
  (cov_135cn0mbll().s[101]++, []);
  /* istanbul ignore next */
  cov_135cn0mbll().s[102]++;
  switch (sectionType) {
    case 'headers':
      /* istanbul ignore next */
      cov_135cn0mbll().b[24][0]++;
      const headerMatches =
      /* istanbul ignore next */
      (cov_135cn0mbll().s[103]++, markdown.match(/^#{1,6}\s+.+$/gm));
      /* istanbul ignore next */
      cov_135cn0mbll().s[104]++;
      if (headerMatches) {
        /* istanbul ignore next */
        cov_135cn0mbll().b[25][0]++;
        cov_135cn0mbll().s[105]++;
        sections.push(...headerMatches.map(h => {
          /* istanbul ignore next */
          cov_135cn0mbll().f[25]++;
          cov_135cn0mbll().s[106]++;
          return processHeaders(h, opts);
        }));
      } else
      /* istanbul ignore next */
      {
        cov_135cn0mbll().b[25][1]++;
      }
      cov_135cn0mbll().s[107]++;
      break;
    case 'code':
      /* istanbul ignore next */
      cov_135cn0mbll().b[24][1]++;
      const codeMatches =
      /* istanbul ignore next */
      (cov_135cn0mbll().s[108]++, markdown.match(/```[\s\S]*?```|`[^`]+`/g));
      /* istanbul ignore next */
      cov_135cn0mbll().s[109]++;
      if (codeMatches) {
        /* istanbul ignore next */
        cov_135cn0mbll().b[26][0]++;
        cov_135cn0mbll().s[110]++;
        sections.push(...codeMatches.map(c => {
          /* istanbul ignore next */
          cov_135cn0mbll().f[26]++;
          cov_135cn0mbll().s[111]++;
          return processCode(c, opts);
        }));
      } else
      /* istanbul ignore next */
      {
        cov_135cn0mbll().b[26][1]++;
      }
      cov_135cn0mbll().s[112]++;
      break;
    case 'lists':
      /* istanbul ignore next */
      cov_135cn0mbll().b[24][2]++;
      const listMatches =
      /* istanbul ignore next */
      (cov_135cn0mbll().s[113]++, markdown.match(/^(\s*)[-*+]\s+.+$|^(\s*)\d+\.\s+.+$/gm));
      /* istanbul ignore next */
      cov_135cn0mbll().s[114]++;
      if (listMatches) {
        /* istanbul ignore next */
        cov_135cn0mbll().b[27][0]++;
        cov_135cn0mbll().s[115]++;
        sections.push(...listMatches.map(l => {
          /* istanbul ignore next */
          cov_135cn0mbll().f[27]++;
          cov_135cn0mbll().s[116]++;
          return processLists(l, opts);
        }));
      } else
      /* istanbul ignore next */
      {
        cov_135cn0mbll().b[27][1]++;
      }
      cov_135cn0mbll().s[117]++;
      break;
    case 'quotes':
      /* istanbul ignore next */
      cov_135cn0mbll().b[24][3]++;
      const quoteMatches =
      /* istanbul ignore next */
      (cov_135cn0mbll().s[118]++, markdown.match(/^>\s+.+$/gm));
      /* istanbul ignore next */
      cov_135cn0mbll().s[119]++;
      if (quoteMatches) {
        /* istanbul ignore next */
        cov_135cn0mbll().b[28][0]++;
        cov_135cn0mbll().s[120]++;
        sections.push(...quoteMatches.map(q => {
          /* istanbul ignore next */
          cov_135cn0mbll().f[28]++;
          cov_135cn0mbll().s[121]++;
          return processBlockquotes(q, opts);
        }));
      } else
      /* istanbul ignore next */
      {
        cov_135cn0mbll().b[28][1]++;
      }
      cov_135cn0mbll().s[122]++;
      break;
    case 'links':
      /* istanbul ignore next */
      cov_135cn0mbll().b[24][4]++;
      const linkMatches =
      /* istanbul ignore next */
      (cov_135cn0mbll().s[123]++, markdown.match(/\[([^\]]+)\]\(([^)]+)\)|!\[([^\]]*)\]\(([^)]+)\)/g));
      /* istanbul ignore next */
      cov_135cn0mbll().s[124]++;
      if (linkMatches) {
        /* istanbul ignore next */
        cov_135cn0mbll().b[29][0]++;
        cov_135cn0mbll().s[125]++;
        sections.push(...linkMatches.map(l => {
          /* istanbul ignore next */
          cov_135cn0mbll().f[29]++;
          cov_135cn0mbll().s[126]++;
          return processLinks(l, opts);
        }));
      } else
      /* istanbul ignore next */
      {
        cov_135cn0mbll().b[29][1]++;
      }
      cov_135cn0mbll().s[127]++;
      break;
  }
  /* istanbul ignore next */
  cov_135cn0mbll().s[128]++;
  return sections;
}
/**
 * Create a markdown summary with key information highlighted
 * @param markdown The markdown content
 * @param options Styling options
 * @returns Styled summary
 */
export function createMarkdownSummary(markdown, options =
/* istanbul ignore next */
(cov_135cn0mbll().b[30][0]++, {})) {
  /* istanbul ignore next */
  cov_135cn0mbll().f[30]++;
  cov_135cn0mbll().s[129]++;
  if (!markdown) {
    /* istanbul ignore next */
    cov_135cn0mbll().b[31][0]++;
    cov_135cn0mbll().s[130]++;
    return '';
  } else
  /* istanbul ignore next */
  {
    cov_135cn0mbll().b[31][1]++;
  }
  const opts =
  /* istanbul ignore next */
  (cov_135cn0mbll().s[131]++, {
    ...DEFAULT_OPTIONS,
    ...options
  });
  const summary =
  /* istanbul ignore next */
  (cov_135cn0mbll().s[132]++, []);
  // Extract headers
  const headers =
  /* istanbul ignore next */
  (cov_135cn0mbll().s[133]++, extractStyledSections(markdown, 'headers', opts));
  /* istanbul ignore next */
  cov_135cn0mbll().s[134]++;
  if (headers.length > 0) {
    /* istanbul ignore next */
    cov_135cn0mbll().b[32][0]++;
    cov_135cn0mbll().s[135]++;
    summary.push(colorize('📋 SECTIONS:', COLORS.bright + COLORS.blue, opts));
    /* istanbul ignore next */
    cov_135cn0mbll().s[136]++;
    summary.push(...headers.slice(0, 5)); // Limit to first 5 headers
  } else
  /* istanbul ignore next */
  {
    cov_135cn0mbll().b[32][1]++;
  }
  // Extract code blocks
  const codeBlocks =
  /* istanbul ignore next */
  (cov_135cn0mbll().s[137]++, extractStyledSections(markdown, 'code', opts));
  /* istanbul ignore next */
  cov_135cn0mbll().s[138]++;
  if (codeBlocks.length > 0) {
    /* istanbul ignore next */
    cov_135cn0mbll().b[33][0]++;
    cov_135cn0mbll().s[139]++;
    summary.push(colorize('💻 CODE BLOCKS:', COLORS.bright + COLORS.green, opts));
    /* istanbul ignore next */
    cov_135cn0mbll().s[140]++;
    summary.push(`${codeBlocks.length} code block(s) found`);
  } else
  /* istanbul ignore next */
  {
    cov_135cn0mbll().b[33][1]++;
  }
  // Extract lists
  const lists =
  /* istanbul ignore next */
  (cov_135cn0mbll().s[141]++, extractStyledSections(markdown, 'lists', opts));
  /* istanbul ignore next */
  cov_135cn0mbll().s[142]++;
  if (lists.length > 0) {
    /* istanbul ignore next */
    cov_135cn0mbll().b[34][0]++;
    cov_135cn0mbll().s[143]++;
    summary.push(colorize('📝 LISTS:', COLORS.bright + COLORS.yellow, opts));
    /* istanbul ignore next */
    cov_135cn0mbll().s[144]++;
    summary.push(`${lists.length} list item(s) found`);
  } else
  /* istanbul ignore next */
  {
    cov_135cn0mbll().b[34][1]++;
  }
  // Extract links
  const links =
  /* istanbul ignore next */
  (cov_135cn0mbll().s[145]++, extractStyledSections(markdown, 'links', opts));
  /* istanbul ignore next */
  cov_135cn0mbll().s[146]++;
  if (links.length > 0) {
    /* istanbul ignore next */
    cov_135cn0mbll().b[35][0]++;
    cov_135cn0mbll().s[147]++;
    summary.push(colorize('🔗 LINKS:', COLORS.bright + COLORS.cyan, opts));
    /* istanbul ignore next */
    cov_135cn0mbll().s[148]++;
    summary.push(`${links.length} link(s) found`);
  } else
  /* istanbul ignore next */
  {
    cov_135cn0mbll().b[35][1]++;
  }
  cov_135cn0mbll().s[149]++;
  return summary.join('\n');
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMTM1Y24wbWJsbCIsImFjdHVhbENvdmVyYWdlIiwiREVGQVVMVF9PUFRJT05TIiwicyIsInVzZUNvbG9ycyIsInVzZUVtb2ppcyIsImluZGVudFNpemUiLCJtYXhXaWR0aCIsIkNPTE9SUyIsInJlc2V0IiwiYnJpZ2h0IiwiZGltIiwiaXRhbGljIiwidW5kZXJsaW5lIiwiYmxhY2siLCJyZWQiLCJncmVlbiIsInllbGxvdyIsImJsdWUiLCJtYWdlbnRhIiwiY3lhbiIsIndoaXRlIiwiYmdCbGFjayIsImJnUmVkIiwiYmdHcmVlbiIsImJnWWVsbG93IiwiYmdCbHVlIiwiYmdNYWdlbnRhIiwiYmdDeWFuIiwiYmdXaGl0ZSIsIkVNT0pJX01BUCIsImgxIiwiaDIiLCJoMyIsImg0IiwiaDUiLCJoNiIsImJvbGQiLCJjb2RlIiwibGluayIsImltYWdlIiwibGlzdCIsInF1b3RlIiwiY2hlY2siLCJ1bmNoZWNrIiwid2FybmluZyIsImluZm8iLCJzdWNjZXNzIiwiZXJyb3IiLCJjb2xvcml6ZSIsInRleHQiLCJjb2xvciIsIm9wdGlvbnMiLCJmIiwiYiIsImFkZEVtb2ppIiwiZW1vamkiLCJwcm9jZXNzSGVhZGVycyIsImNvbnRlbnQiLCJyZXBsYWNlIiwibWF0Y2giLCJoYXNoZXMiLCJsZXZlbCIsImxlbmd0aCIsInN0eWxlZCIsInRvVXBwZXJDYXNlIiwicmVzdWx0IiwicmVwZWF0IiwiTWF0aCIsIm1pbiIsInByb2Nlc3NFbXBoYXNpcyIsInByb2Nlc3NDb2RlIiwibGFuZyIsImxhbmdMYWJlbCIsImhlYWRlciIsInN0eWxlZENvZGUiLCJ0cmltIiwiYm9yZGVyIiwicHJvY2Vzc0xpc3RzIiwiaW5kZW50Iiwic3BhY2VzIiwiYnVsbGV0IiwibnVtIiwiY2hlY2tib3giLCJwcm9jZXNzQmxvY2txdW90ZXMiLCJwcm9jZXNzTGlua3MiLCJhbHQiLCJ1cmwiLCJwcm9jZXNzSG9yaXpvbnRhbFJ1bGVzIiwicnVsZSIsImFkZFZpc3VhbEVuaGFuY2VtZW50cyIsImFwcGx5TWFya2Rvd25TdHlsaW5nIiwibWFya2Rvd24iLCJvcHRzIiwiY3JlYXRlTWFya2Rvd25QcmV2aWV3IiwidGl0bGUiLCJzdHlsZWRUaXRsZSIsInRpdGxlV2l0aEVtb2ppIiwiZXh0cmFjdFN0eWxlZFNlY3Rpb25zIiwic2VjdGlvblR5cGUiLCJzZWN0aW9ucyIsImhlYWRlck1hdGNoZXMiLCJwdXNoIiwibWFwIiwiaCIsImNvZGVNYXRjaGVzIiwiYyIsImxpc3RNYXRjaGVzIiwibCIsInF1b3RlTWF0Y2hlcyIsInEiLCJsaW5rTWF0Y2hlcyIsImNyZWF0ZU1hcmtkb3duU3VtbWFyeSIsInN1bW1hcnkiLCJoZWFkZXJzIiwic2xpY2UiLCJjb2RlQmxvY2tzIiwibGlzdHMiLCJsaW5rcyIsImpvaW4iXSwic291cmNlcyI6WyIvVXNlcnMvcGV0ZXJrcnp5emVrL0RldmVsb3BtZW50L2NsaWNrdXAtbWNwLXNlcnZlci9zcmMvdXRpbHMvbWFya2Rvd24tc3R5bGluZy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFNpbXBsZSBNYXJrZG93biBTdHlsaW5nIFByb2Nlc3NvclxuICogUHJvdmlkZXMgZW5oYW5jZWQgZGlzcGxheSBmb3JtYXR0aW5nIGZvciBtYXJrZG93biBjb250ZW50IHdpdGggdmlzdWFsIHN0eWxpbmdcbiAqL1xuXG5leHBvcnQgaW50ZXJmYWNlIE1hcmtkb3duU3R5bGVPcHRpb25zIHtcbiAgdXNlQ29sb3JzPzogYm9vbGVhbjtcbiAgdXNlRW1vamlzPzogYm9vbGVhbjtcbiAgaW5kZW50U2l6ZT86IG51bWJlcjtcbiAgbWF4V2lkdGg/OiBudW1iZXI7XG59XG5cbmNvbnN0IERFRkFVTFRfT1BUSU9OUzogTWFya2Rvd25TdHlsZU9wdGlvbnMgPSB7XG4gIHVzZUNvbG9yczogdHJ1ZSxcbiAgdXNlRW1vamlzOiB0cnVlLFxuICBpbmRlbnRTaXplOiAyLFxuICBtYXhXaWR0aDogODBcbn07XG5cbi8vIEFOU0kgY29sb3IgY29kZXMgZm9yIHRlcm1pbmFsIHN0eWxpbmdcbmNvbnN0IENPTE9SUyA9IHtcbiAgcmVzZXQ6ICdcXHgxYlswbScsXG4gIGJyaWdodDogJ1xceDFiWzFtJyxcbiAgZGltOiAnXFx4MWJbMm0nLFxuICBpdGFsaWM6ICdcXHgxYlszbScsXG4gIHVuZGVybGluZTogJ1xceDFiWzRtJyxcbiAgXG4gIC8vIFRleHQgY29sb3JzXG4gIGJsYWNrOiAnXFx4MWJbMzBtJyxcbiAgcmVkOiAnXFx4MWJbMzFtJyxcbiAgZ3JlZW46ICdcXHgxYlszMm0nLFxuICB5ZWxsb3c6ICdcXHgxYlszM20nLFxuICBibHVlOiAnXFx4MWJbMzRtJyxcbiAgbWFnZW50YTogJ1xceDFiWzM1bScsXG4gIGN5YW46ICdcXHgxYlszNm0nLFxuICB3aGl0ZTogJ1xceDFiWzM3bScsXG4gIFxuICAvLyBCYWNrZ3JvdW5kIGNvbG9yc1xuICBiZ0JsYWNrOiAnXFx4MWJbNDBtJyxcbiAgYmdSZWQ6ICdcXHgxYls0MW0nLFxuICBiZ0dyZWVuOiAnXFx4MWJbNDJtJyxcbiAgYmdZZWxsb3c6ICdcXHgxYls0M20nLFxuICBiZ0JsdWU6ICdcXHgxYls0NG0nLFxuICBiZ01hZ2VudGE6ICdcXHgxYls0NW0nLFxuICBiZ0N5YW46ICdcXHgxYls0Nm0nLFxuICBiZ1doaXRlOiAnXFx4MWJbNDdtJ1xufTtcblxuLy8gRW1vamkgbWFwcGluZ3MgZm9yIGVuaGFuY2VkIHZpc3VhbCBkaXNwbGF5XG5jb25zdCBFTU9KSV9NQVAgPSB7XG4gIGgxOiAn8J+UpScsXG4gIGgyOiAn4pqhJyxcbiAgaDM6ICfwn5KrJyxcbiAgaDQ6ICfinKgnLFxuICBoNTogJ/CfjJ8nLFxuICBoNjogJ+KtkCcsXG4gIGJvbGQ6ICfwn5KqJyxcbiAgaXRhbGljOiAn4pyoJyxcbiAgY29kZTogJ/CfkrsnLFxuICBsaW5rOiAn8J+UlycsXG4gIGltYWdlOiAn8J+WvO+4jycsXG4gIGxpc3Q6ICfwn5OLJyxcbiAgcXVvdGU6ICfwn5KsJyxcbiAgY2hlY2s6ICfinIUnLFxuICB1bmNoZWNrOiAn4piQJyxcbiAgd2FybmluZzogJ+KaoO+4jycsXG4gIGluZm86ICfwn5KhJyxcbiAgc3VjY2VzczogJ/CfjoknLFxuICBlcnJvcjogJ+KdjCdcbn07XG5cbi8qKlxuICogQXBwbHkgY29sb3Igc3R5bGluZyB0byB0ZXh0XG4gKi9cbmZ1bmN0aW9uIGNvbG9yaXplKHRleHQ6IHN0cmluZywgY29sb3I6IHN0cmluZywgb3B0aW9uczogTWFya2Rvd25TdHlsZU9wdGlvbnMpOiBzdHJpbmcge1xuICBpZiAoIW9wdGlvbnMudXNlQ29sb3JzKSByZXR1cm4gdGV4dDtcbiAgcmV0dXJuIGAke2NvbG9yfSR7dGV4dH0ke0NPTE9SUy5yZXNldH1gO1xufVxuXG4vKipcbiAqIEFkZCBlbW9qaSBwcmVmaXggdG8gdGV4dFxuICovXG5mdW5jdGlvbiBhZGRFbW9qaSh0ZXh0OiBzdHJpbmcsIGVtb2ppOiBzdHJpbmcsIG9wdGlvbnM6IE1hcmtkb3duU3R5bGVPcHRpb25zKTogc3RyaW5nIHtcbiAgaWYgKCFvcHRpb25zLnVzZUVtb2ppcykgcmV0dXJuIHRleHQ7XG4gIHJldHVybiBgJHtlbW9qaX0gJHt0ZXh0fWA7XG59XG5cbi8qKlxuICogUHJvY2VzcyBoZWFkZXJzIHdpdGggc3R5bGluZ1xuICovXG5mdW5jdGlvbiBwcm9jZXNzSGVhZGVycyhjb250ZW50OiBzdHJpbmcsIG9wdGlvbnM6IE1hcmtkb3duU3R5bGVPcHRpb25zKTogc3RyaW5nIHtcbiAgcmV0dXJuIGNvbnRlbnQucmVwbGFjZSgvXigjezEsNn0pXFxzKyguKykkL2dtLCAobWF0Y2gsIGhhc2hlcywgdGV4dCkgPT4ge1xuICAgIGNvbnN0IGxldmVsID0gaGFzaGVzLmxlbmd0aDtcbiAgICBjb25zdCBlbW9qaSA9IEVNT0pJX01BUFtgaCR7bGV2ZWx9YCBhcyBrZXlvZiB0eXBlb2YgRU1PSklfTUFQXTtcbiAgICBcbiAgICBsZXQgc3R5bGVkID0gdGV4dDtcbiAgICBcbiAgICBzd2l0Y2ggKGxldmVsKSB7XG4gICAgICBjYXNlIDE6XG4gICAgICAgIHN0eWxlZCA9IGNvbG9yaXplKHRleHQudG9VcHBlckNhc2UoKSwgQ09MT1JTLmJyaWdodCArIENPTE9SUy5yZWQsIG9wdGlvbnMpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgMjpcbiAgICAgICAgc3R5bGVkID0gY29sb3JpemUodGV4dCwgQ09MT1JTLmJyaWdodCArIENPTE9SUy5ibHVlLCBvcHRpb25zKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIDM6XG4gICAgICAgIHN0eWxlZCA9IGNvbG9yaXplKHRleHQsIENPTE9SUy5icmlnaHQgKyBDT0xPUlMuZ3JlZW4sIG9wdGlvbnMpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgNDpcbiAgICAgICAgc3R5bGVkID0gY29sb3JpemUodGV4dCwgQ09MT1JTLmJyaWdodCArIENPTE9SUy55ZWxsb3csIG9wdGlvbnMpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgNTpcbiAgICAgICAgc3R5bGVkID0gY29sb3JpemUodGV4dCwgQ09MT1JTLmJyaWdodCArIENPTE9SUy5tYWdlbnRhLCBvcHRpb25zKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIDY6XG4gICAgICAgIHN0eWxlZCA9IGNvbG9yaXplKHRleHQsIENPTE9SUy5icmlnaHQgKyBDT0xPUlMuY3lhbiwgb3B0aW9ucyk7XG4gICAgICAgIGJyZWFrO1xuICAgIH1cbiAgICBcbiAgICBjb25zdCByZXN1bHQgPSBhZGRFbW9qaShzdHlsZWQsIGVtb2ppLCBvcHRpb25zKTtcbiAgICByZXR1cm4gYFxcbiR7cmVzdWx0fVxcbiR7Jz0nLnJlcGVhdChNYXRoLm1pbih0ZXh0Lmxlbmd0aCwgb3B0aW9ucy5tYXhXaWR0aCB8fCA4MCkpfVxcbmA7XG4gIH0pO1xufVxuXG4vKipcbiAqIFByb2Nlc3MgYm9sZCBhbmQgaXRhbGljIHRleHRcbiAqL1xuZnVuY3Rpb24gcHJvY2Vzc0VtcGhhc2lzKGNvbnRlbnQ6IHN0cmluZywgb3B0aW9uczogTWFya2Rvd25TdHlsZU9wdGlvbnMpOiBzdHJpbmcge1xuICAvLyBCb2xkIHRleHRcbiAgY29udGVudCA9IGNvbnRlbnQucmVwbGFjZSgvXFwqXFwqKFteKl0rKVxcKlxcKi9nLCAobWF0Y2gsIHRleHQpID0+IHtcbiAgICBjb25zdCBzdHlsZWQgPSBjb2xvcml6ZSh0ZXh0LCBDT0xPUlMuYnJpZ2h0LCBvcHRpb25zKTtcbiAgICByZXR1cm4gb3B0aW9ucy51c2VFbW9qaXMgPyBg8J+SqiAke3N0eWxlZH1gIDogc3R5bGVkO1xuICB9KTtcbiAgXG4gIC8vIEl0YWxpYyB0ZXh0XG4gIGNvbnRlbnQgPSBjb250ZW50LnJlcGxhY2UoL1xcKihbXipdKylcXCovZywgKG1hdGNoLCB0ZXh0KSA9PiB7XG4gICAgY29uc3Qgc3R5bGVkID0gY29sb3JpemUodGV4dCwgQ09MT1JTLml0YWxpYywgb3B0aW9ucyk7XG4gICAgcmV0dXJuIG9wdGlvbnMudXNlRW1vamlzID8gYOKcqCAke3N0eWxlZH1gIDogc3R5bGVkO1xuICB9KTtcbiAgXG4gIHJldHVybiBjb250ZW50O1xufVxuXG4vKipcbiAqIFByb2Nlc3MgY29kZSBibG9ja3MgYW5kIGlubGluZSBjb2RlXG4gKi9cbmZ1bmN0aW9uIHByb2Nlc3NDb2RlKGNvbnRlbnQ6IHN0cmluZywgb3B0aW9uczogTWFya2Rvd25TdHlsZU9wdGlvbnMpOiBzdHJpbmcge1xuICAvLyBDb2RlIGJsb2Nrc1xuICBjb250ZW50ID0gY29udGVudC5yZXBsYWNlKC9gYGAoXFx3Kyk/XFxuKFtcXHNcXFNdKj8pYGBgL2csIChtYXRjaCwgbGFuZywgY29kZSkgPT4ge1xuICAgIGNvbnN0IGxhbmdMYWJlbCA9IGxhbmcgPyBgICgke2xhbmd9KWAgOiAnJztcbiAgICBjb25zdCBoZWFkZXIgPSBjb2xvcml6ZShgQ09ERSR7bGFuZ0xhYmVsfWAsIENPTE9SUy5iZ0JsdWUgKyBDT0xPUlMud2hpdGUsIG9wdGlvbnMpO1xuICAgIGNvbnN0IHN0eWxlZENvZGUgPSBjb2xvcml6ZShjb2RlLnRyaW0oKSwgQ09MT1JTLmRpbSArIENPTE9SUy5jeWFuLCBvcHRpb25zKTtcbiAgICBjb25zdCBib3JkZXIgPSAn4pSAJy5yZXBlYXQoTWF0aC5taW4oNjAsIG9wdGlvbnMubWF4V2lkdGggfHwgODApKTtcbiAgICBcbiAgICByZXR1cm4gYFxcbiR7YWRkRW1vamkoaGVhZGVyLCBFTU9KSV9NQVAuY29kZSwgb3B0aW9ucyl9XFxuJHtib3JkZXJ9XFxuJHtzdHlsZWRDb2RlfVxcbiR7Ym9yZGVyfVxcbmA7XG4gIH0pO1xuICBcbiAgLy8gSW5saW5lIGNvZGVcbiAgY29udGVudCA9IGNvbnRlbnQucmVwbGFjZSgvYChbXmBdKylgL2csIChtYXRjaCwgY29kZSkgPT4ge1xuICAgIGNvbnN0IHN0eWxlZCA9IGNvbG9yaXplKGNvZGUsIENPTE9SUy5iZ0JsYWNrICsgQ09MT1JTLnllbGxvdywgb3B0aW9ucyk7XG4gICAgcmV0dXJuIG9wdGlvbnMudXNlRW1vamlzID8gYPCfkrsgJHtzdHlsZWR9YCA6IHN0eWxlZDtcbiAgfSk7XG4gIFxuICByZXR1cm4gY29udGVudDtcbn1cblxuLyoqXG4gKiBQcm9jZXNzIGxpc3RzXG4gKi9cbmZ1bmN0aW9uIHByb2Nlc3NMaXN0cyhjb250ZW50OiBzdHJpbmcsIG9wdGlvbnM6IE1hcmtkb3duU3R5bGVPcHRpb25zKTogc3RyaW5nIHtcbiAgY29uc3QgaW5kZW50ID0gJyAnLnJlcGVhdChvcHRpb25zLmluZGVudFNpemUgfHwgMik7XG4gIFxuICAvLyBVbm9yZGVyZWQgbGlzdHNcbiAgY29udGVudCA9IGNvbnRlbnQucmVwbGFjZSgvXihcXHMqKVstKitdXFxzKyguKykkL2dtLCAobWF0Y2gsIHNwYWNlcywgdGV4dCkgPT4ge1xuICAgIGNvbnN0IGJ1bGxldCA9IG9wdGlvbnMudXNlRW1vamlzID8gJ/Cfk4snIDogJ+KAoic7XG4gICAgY29uc3Qgc3R5bGVkID0gY29sb3JpemUodGV4dCwgQ09MT1JTLndoaXRlLCBvcHRpb25zKTtcbiAgICByZXR1cm4gYCR7c3BhY2VzfSR7YnVsbGV0fSAke3N0eWxlZH1gO1xuICB9KTtcbiAgXG4gIC8vIE9yZGVyZWQgbGlzdHNcbiAgY29udGVudCA9IGNvbnRlbnQucmVwbGFjZSgvXihcXHMqKShcXGQrKVxcLlxccysoLispJC9nbSwgKG1hdGNoLCBzcGFjZXMsIG51bSwgdGV4dCkgPT4ge1xuICAgIGNvbnN0IGJ1bGxldCA9IG9wdGlvbnMudXNlRW1vamlzID8gYCR7bnVtfe+4j+KDo2AgOiBgJHtudW19LmA7XG4gICAgY29uc3Qgc3R5bGVkID0gY29sb3JpemUodGV4dCwgQ09MT1JTLndoaXRlLCBvcHRpb25zKTtcbiAgICByZXR1cm4gYCR7c3BhY2VzfSR7YnVsbGV0fSAke3N0eWxlZH1gO1xuICB9KTtcbiAgXG4gIC8vIENoZWNrYm94ZXNcbiAgY29udGVudCA9IGNvbnRlbnQucmVwbGFjZSgvXihcXHMqKS0gXFxbKFt4IF0pXFxdXFxzKyguKykkL2dtLCAobWF0Y2gsIHNwYWNlcywgY2hlY2ssIHRleHQpID0+IHtcbiAgICBjb25zdCBjaGVja2JveCA9IGNoZWNrID09PSAneCcgPyBFTU9KSV9NQVAuY2hlY2sgOiBFTU9KSV9NQVAudW5jaGVjaztcbiAgICBjb25zdCBzdHlsZWQgPSBjaGVjayA9PT0gJ3gnIFxuICAgICAgPyBjb2xvcml6ZSh0ZXh0LCBDT0xPUlMuZGltICsgQ09MT1JTLmdyZWVuLCBvcHRpb25zKVxuICAgICAgOiBjb2xvcml6ZSh0ZXh0LCBDT0xPUlMud2hpdGUsIG9wdGlvbnMpO1xuICAgIHJldHVybiBgJHtzcGFjZXN9JHtjaGVja2JveH0gJHtzdHlsZWR9YDtcbiAgfSk7XG4gIFxuICByZXR1cm4gY29udGVudDtcbn1cblxuLyoqXG4gKiBQcm9jZXNzIGJsb2NrcXVvdGVzXG4gKi9cbmZ1bmN0aW9uIHByb2Nlc3NCbG9ja3F1b3Rlcyhjb250ZW50OiBzdHJpbmcsIG9wdGlvbnM6IE1hcmtkb3duU3R5bGVPcHRpb25zKTogc3RyaW5nIHtcbiAgcmV0dXJuIGNvbnRlbnQucmVwbGFjZSgvXj5cXHMrKC4rKSQvZ20sIChtYXRjaCwgdGV4dCkgPT4ge1xuICAgIGNvbnN0IHN0eWxlZCA9IGNvbG9yaXplKHRleHQsIENPTE9SUy5pdGFsaWMgKyBDT0xPUlMuY3lhbiwgb3B0aW9ucyk7XG4gICAgY29uc3QgcXVvdGUgPSBhZGRFbW9qaShzdHlsZWQsIEVNT0pJX01BUC5xdW90ZSwgb3B0aW9ucyk7XG4gICAgcmV0dXJuIGDilIIgJHtxdW90ZX1gO1xuICB9KTtcbn1cblxuLyoqXG4gKiBQcm9jZXNzIGxpbmtzIGFuZCBpbWFnZXNcbiAqL1xuZnVuY3Rpb24gcHJvY2Vzc0xpbmtzKGNvbnRlbnQ6IHN0cmluZywgb3B0aW9uczogTWFya2Rvd25TdHlsZU9wdGlvbnMpOiBzdHJpbmcge1xuICAvLyBJbWFnZXNcbiAgY29udGVudCA9IGNvbnRlbnQucmVwbGFjZSgvIVxcWyhbXlxcXV0qKVxcXVxcKChbXildKylcXCkvZywgKG1hdGNoLCBhbHQsIHVybCkgPT4ge1xuICAgIGNvbnN0IHN0eWxlZCA9IGNvbG9yaXplKGBbJHthbHQgfHwgJ0ltYWdlJ31dYCwgQ09MT1JTLmJyaWdodCArIENPTE9SUy5tYWdlbnRhLCBvcHRpb25zKTtcbiAgICByZXR1cm4gYWRkRW1vamkoYCR7c3R5bGVkfSAoJHt1cmx9KWAsIEVNT0pJX01BUC5pbWFnZSwgb3B0aW9ucyk7XG4gIH0pO1xuICBcbiAgLy8gTGlua3NcbiAgY29udGVudCA9IGNvbnRlbnQucmVwbGFjZSgvXFxbKFteXFxdXSspXFxdXFwoKFteKV0rKVxcKS9nLCAobWF0Y2gsIHRleHQsIHVybCkgPT4ge1xuICAgIGNvbnN0IHN0eWxlZCA9IGNvbG9yaXplKHRleHQsIENPTE9SUy51bmRlcmxpbmUgKyBDT0xPUlMuYmx1ZSwgb3B0aW9ucyk7XG4gICAgcmV0dXJuIGFkZEVtb2ppKGAke3N0eWxlZH0gKCR7dXJsfSlgLCBFTU9KSV9NQVAubGluaywgb3B0aW9ucyk7XG4gIH0pO1xuICBcbiAgcmV0dXJuIGNvbnRlbnQ7XG59XG5cbi8qKlxuICogUHJvY2VzcyBob3Jpem9udGFsIHJ1bGVzXG4gKi9cbmZ1bmN0aW9uIHByb2Nlc3NIb3Jpem9udGFsUnVsZXMoY29udGVudDogc3RyaW5nLCBvcHRpb25zOiBNYXJrZG93blN0eWxlT3B0aW9ucyk6IHN0cmluZyB7XG4gIHJldHVybiBjb250ZW50LnJlcGxhY2UoL14tLS0rJC9nbSwgKCkgPT4ge1xuICAgIGNvbnN0IHJ1bGUgPSAn4pWQJy5yZXBlYXQoTWF0aC5taW4oNjAsIG9wdGlvbnMubWF4V2lkdGggfHwgODApKTtcbiAgICByZXR1cm4gY29sb3JpemUocnVsZSwgQ09MT1JTLmRpbSArIENPTE9SUy53aGl0ZSwgb3B0aW9ucyk7XG4gIH0pO1xufVxuXG4vKipcbiAqIEFkZCB2aXN1YWwgc2VwYXJhdG9ycyBhbmQgc3BhY2luZ1xuICovXG5mdW5jdGlvbiBhZGRWaXN1YWxFbmhhbmNlbWVudHMoY29udGVudDogc3RyaW5nLCBvcHRpb25zOiBNYXJrZG93blN0eWxlT3B0aW9ucyk6IHN0cmluZyB7XG4gIC8vIEFkZCBzcGFjaW5nIGFyb3VuZCBzZWN0aW9uc1xuICBjb250ZW50ID0gY29udGVudC5yZXBsYWNlKC9cXG4oI3sxLDZ9KS9nLCAnXFxuXFxuJDEnKTtcbiAgY29udGVudCA9IGNvbnRlbnQucmVwbGFjZSgvKCN7MSw2fVteXFxuXSspXFxuL2csICckMVxcblxcbicpO1xuICBcbiAgLy8gQ2xlYW4gdXAgZXhjZXNzaXZlIG5ld2xpbmVzXG4gIGNvbnRlbnQgPSBjb250ZW50LnJlcGxhY2UoL1xcbnszLH0vZywgJ1xcblxcbicpO1xuICBcbiAgcmV0dXJuIGNvbnRlbnQudHJpbSgpO1xufVxuXG4vKipcbiAqIE1haW4gZnVuY3Rpb24gdG8gYXBwbHkgc2ltcGxlIG1hcmtkb3duIHN0eWxpbmdcbiAqIEBwYXJhbSBtYXJrZG93biBUaGUgbWFya2Rvd24gY29udGVudCB0byBzdHlsZVxuICogQHBhcmFtIG9wdGlvbnMgU3R5bGluZyBvcHRpb25zXG4gKiBAcmV0dXJucyBTdHlsZWQgbWFya2Rvd24gY29udGVudCB3aXRoIHZpc3VhbCBlbmhhbmNlbWVudHNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFwcGx5TWFya2Rvd25TdHlsaW5nKG1hcmtkb3duOiBzdHJpbmcsIG9wdGlvbnM6IE1hcmtkb3duU3R5bGVPcHRpb25zID0ge30pOiBzdHJpbmcge1xuICBpZiAoIW1hcmtkb3duIHx8IHR5cGVvZiBtYXJrZG93biAhPT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gJyc7XG4gIH1cbiAgXG4gIGNvbnN0IG9wdHMgPSB7IC4uLkRFRkFVTFRfT1BUSU9OUywgLi4ub3B0aW9ucyB9O1xuICBcbiAgbGV0IHN0eWxlZCA9IG1hcmtkb3duO1xuICBcbiAgLy8gQXBwbHkgc3R5bGluZyBpbiBvcmRlclxuICBzdHlsZWQgPSBwcm9jZXNzSGVhZGVycyhzdHlsZWQsIG9wdHMpO1xuICBzdHlsZWQgPSBwcm9jZXNzQ29kZShzdHlsZWQsIG9wdHMpO1xuICBzdHlsZWQgPSBwcm9jZXNzRW1waGFzaXMoc3R5bGVkLCBvcHRzKTtcbiAgc3R5bGVkID0gcHJvY2Vzc0xpc3RzKHN0eWxlZCwgb3B0cyk7XG4gIHN0eWxlZCA9IHByb2Nlc3NCbG9ja3F1b3RlcyhzdHlsZWQsIG9wdHMpO1xuICBzdHlsZWQgPSBwcm9jZXNzTGlua3Moc3R5bGVkLCBvcHRzKTtcbiAgc3R5bGVkID0gcHJvY2Vzc0hvcml6b250YWxSdWxlcyhzdHlsZWQsIG9wdHMpO1xuICBzdHlsZWQgPSBhZGRWaXN1YWxFbmhhbmNlbWVudHMoc3R5bGVkLCBvcHRzKTtcbiAgXG4gIHJldHVybiBzdHlsZWQ7XG59XG5cbi8qKlxuICogQ3JlYXRlIGEgc3R5bGVkIHByZXZpZXcgb2YgbWFya2Rvd24gY29udGVudFxuICogQHBhcmFtIG1hcmtkb3duIFRoZSBtYXJrZG93biBjb250ZW50XG4gKiBAcGFyYW0gdGl0bGUgT3B0aW9uYWwgdGl0bGUgZm9yIHRoZSBwcmV2aWV3XG4gKiBAcGFyYW0gb3B0aW9ucyBTdHlsaW5nIG9wdGlvbnNcbiAqIEByZXR1cm5zIEZvcm1hdHRlZCBwcmV2aWV3IHdpdGggdGl0bGUgYW5kIGJvcmRlcnNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZU1hcmtkb3duUHJldmlldyhcbiAgbWFya2Rvd246IHN0cmluZywgXG4gIHRpdGxlPzogc3RyaW5nLCBcbiAgb3B0aW9uczogTWFya2Rvd25TdHlsZU9wdGlvbnMgPSB7fVxuKTogc3RyaW5nIHtcbiAgY29uc3Qgb3B0cyA9IHsgLi4uREVGQVVMVF9PUFRJT05TLCAuLi5vcHRpb25zIH07XG4gIGNvbnN0IHN0eWxlZCA9IGFwcGx5TWFya2Rvd25TdHlsaW5nKG1hcmtkb3duLCBvcHRzKTtcbiAgXG4gIGlmICghdGl0bGUpIHtcbiAgICByZXR1cm4gc3R5bGVkO1xuICB9XG4gIFxuICBjb25zdCBib3JkZXIgPSAn4pWQJy5yZXBlYXQoTWF0aC5taW4odGl0bGUubGVuZ3RoICsgNCwgb3B0cy5tYXhXaWR0aCB8fCA4MCkpO1xuICBjb25zdCBzdHlsZWRUaXRsZSA9IGNvbG9yaXplKHRpdGxlLnRvVXBwZXJDYXNlKCksIENPTE9SUy5icmlnaHQgKyBDT0xPUlMud2hpdGUsIG9wdHMpO1xuICBjb25zdCB0aXRsZVdpdGhFbW9qaSA9IGFkZEVtb2ppKHN0eWxlZFRpdGxlLCAn8J+ThCcsIG9wdHMpO1xuICBcbiAgcmV0dXJuIGAke2JvcmRlcn1cXG4gICR7dGl0bGVXaXRoRW1vaml9XFxuJHtib3JkZXJ9XFxuXFxuJHtzdHlsZWR9XFxuXFxuJHtib3JkZXJ9YDtcbn1cblxuLyoqXG4gKiBFeHRyYWN0IGFuZCBzdHlsZSBtYXJrZG93biBzZWN0aW9uc1xuICogQHBhcmFtIG1hcmtkb3duIFRoZSBtYXJrZG93biBjb250ZW50XG4gKiBAcGFyYW0gc2VjdGlvblR5cGUgVGhlIHR5cGUgb2Ygc2VjdGlvbiB0byBleHRyYWN0ICgnaGVhZGVycycsICdjb2RlJywgJ2xpc3RzJywgZXRjLilcbiAqIEBwYXJhbSBvcHRpb25zIFN0eWxpbmcgb3B0aW9uc1xuICogQHJldHVybnMgU3R5bGVkIHNlY3Rpb25zXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBleHRyYWN0U3R5bGVkU2VjdGlvbnMoXG4gIG1hcmtkb3duOiBzdHJpbmcsIFxuICBzZWN0aW9uVHlwZTogJ2hlYWRlcnMnIHwgJ2NvZGUnIHwgJ2xpc3RzJyB8ICdxdW90ZXMnIHwgJ2xpbmtzJyxcbiAgb3B0aW9uczogTWFya2Rvd25TdHlsZU9wdGlvbnMgPSB7fVxuKTogc3RyaW5nW10ge1xuICBpZiAoIW1hcmtkb3duKSByZXR1cm4gW107XG4gIFxuICBjb25zdCBvcHRzID0geyAuLi5ERUZBVUxUX09QVElPTlMsIC4uLm9wdGlvbnMgfTtcbiAgY29uc3Qgc2VjdGlvbnM6IHN0cmluZ1tdID0gW107XG4gIFxuICBzd2l0Y2ggKHNlY3Rpb25UeXBlKSB7XG4gICAgY2FzZSAnaGVhZGVycyc6XG4gICAgICBjb25zdCBoZWFkZXJNYXRjaGVzID0gbWFya2Rvd24ubWF0Y2goL14jezEsNn1cXHMrLiskL2dtKTtcbiAgICAgIGlmIChoZWFkZXJNYXRjaGVzKSB7XG4gICAgICAgIHNlY3Rpb25zLnB1c2goLi4uaGVhZGVyTWF0Y2hlcy5tYXAoaCA9PiBwcm9jZXNzSGVhZGVycyhoLCBvcHRzKSkpO1xuICAgICAgfVxuICAgICAgYnJlYWs7XG4gICAgICBcbiAgICBjYXNlICdjb2RlJzpcbiAgICAgIGNvbnN0IGNvZGVNYXRjaGVzID0gbWFya2Rvd24ubWF0Y2goL2BgYFtcXHNcXFNdKj9gYGB8YFteYF0rYC9nKTtcbiAgICAgIGlmIChjb2RlTWF0Y2hlcykge1xuICAgICAgICBzZWN0aW9ucy5wdXNoKC4uLmNvZGVNYXRjaGVzLm1hcChjID0+IHByb2Nlc3NDb2RlKGMsIG9wdHMpKSk7XG4gICAgICB9XG4gICAgICBicmVhaztcbiAgICAgIFxuICAgIGNhc2UgJ2xpc3RzJzpcbiAgICAgIGNvbnN0IGxpc3RNYXRjaGVzID0gbWFya2Rvd24ubWF0Y2goL14oXFxzKilbLSorXVxccysuKyR8XihcXHMqKVxcZCtcXC5cXHMrLiskL2dtKTtcbiAgICAgIGlmIChsaXN0TWF0Y2hlcykge1xuICAgICAgICBzZWN0aW9ucy5wdXNoKC4uLmxpc3RNYXRjaGVzLm1hcChsID0+IHByb2Nlc3NMaXN0cyhsLCBvcHRzKSkpO1xuICAgICAgfVxuICAgICAgYnJlYWs7XG4gICAgICBcbiAgICBjYXNlICdxdW90ZXMnOlxuICAgICAgY29uc3QgcXVvdGVNYXRjaGVzID0gbWFya2Rvd24ubWF0Y2goL14+XFxzKy4rJC9nbSk7XG4gICAgICBpZiAocXVvdGVNYXRjaGVzKSB7XG4gICAgICAgIHNlY3Rpb25zLnB1c2goLi4ucXVvdGVNYXRjaGVzLm1hcChxID0+IHByb2Nlc3NCbG9ja3F1b3RlcyhxLCBvcHRzKSkpO1xuICAgICAgfVxuICAgICAgYnJlYWs7XG4gICAgICBcbiAgICBjYXNlICdsaW5rcyc6XG4gICAgICBjb25zdCBsaW5rTWF0Y2hlcyA9IG1hcmtkb3duLm1hdGNoKC9cXFsoW15cXF1dKylcXF1cXCgoW14pXSspXFwpfCFcXFsoW15cXF1dKilcXF1cXCgoW14pXSspXFwpL2cpO1xuICAgICAgaWYgKGxpbmtNYXRjaGVzKSB7XG4gICAgICAgIHNlY3Rpb25zLnB1c2goLi4ubGlua01hdGNoZXMubWFwKGwgPT4gcHJvY2Vzc0xpbmtzKGwsIG9wdHMpKSk7XG4gICAgICB9XG4gICAgICBicmVhaztcbiAgfVxuICBcbiAgcmV0dXJuIHNlY3Rpb25zO1xufVxuXG4vKipcbiAqIENyZWF0ZSBhIG1hcmtkb3duIHN1bW1hcnkgd2l0aCBrZXkgaW5mb3JtYXRpb24gaGlnaGxpZ2h0ZWRcbiAqIEBwYXJhbSBtYXJrZG93biBUaGUgbWFya2Rvd24gY29udGVudFxuICogQHBhcmFtIG9wdGlvbnMgU3R5bGluZyBvcHRpb25zXG4gKiBAcmV0dXJucyBTdHlsZWQgc3VtbWFyeVxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlTWFya2Rvd25TdW1tYXJ5KG1hcmtkb3duOiBzdHJpbmcsIG9wdGlvbnM6IE1hcmtkb3duU3R5bGVPcHRpb25zID0ge30pOiBzdHJpbmcge1xuICBpZiAoIW1hcmtkb3duKSByZXR1cm4gJyc7XG4gIFxuICBjb25zdCBvcHRzID0geyAuLi5ERUZBVUxUX09QVElPTlMsIC4uLm9wdGlvbnMgfTtcbiAgY29uc3Qgc3VtbWFyeTogc3RyaW5nW10gPSBbXTtcbiAgXG4gIC8vIEV4dHJhY3QgaGVhZGVyc1xuICBjb25zdCBoZWFkZXJzID0gZXh0cmFjdFN0eWxlZFNlY3Rpb25zKG1hcmtkb3duLCAnaGVhZGVycycsIG9wdHMpO1xuICBpZiAoaGVhZGVycy5sZW5ndGggPiAwKSB7XG4gICAgc3VtbWFyeS5wdXNoKGNvbG9yaXplKCfwn5OLIFNFQ1RJT05TOicsIENPTE9SUy5icmlnaHQgKyBDT0xPUlMuYmx1ZSwgb3B0cykpO1xuICAgIHN1bW1hcnkucHVzaCguLi5oZWFkZXJzLnNsaWNlKDAsIDUpKTsgLy8gTGltaXQgdG8gZmlyc3QgNSBoZWFkZXJzXG4gIH1cbiAgXG4gIC8vIEV4dHJhY3QgY29kZSBibG9ja3NcbiAgY29uc3QgY29kZUJsb2NrcyA9IGV4dHJhY3RTdHlsZWRTZWN0aW9ucyhtYXJrZG93biwgJ2NvZGUnLCBvcHRzKTtcbiAgaWYgKGNvZGVCbG9ja3MubGVuZ3RoID4gMCkge1xuICAgIHN1bW1hcnkucHVzaChjb2xvcml6ZSgn8J+SuyBDT0RFIEJMT0NLUzonLCBDT0xPUlMuYnJpZ2h0ICsgQ09MT1JTLmdyZWVuLCBvcHRzKSk7XG4gICAgc3VtbWFyeS5wdXNoKGAke2NvZGVCbG9ja3MubGVuZ3RofSBjb2RlIGJsb2NrKHMpIGZvdW5kYCk7XG4gIH1cbiAgXG4gIC8vIEV4dHJhY3QgbGlzdHNcbiAgY29uc3QgbGlzdHMgPSBleHRyYWN0U3R5bGVkU2VjdGlvbnMobWFya2Rvd24sICdsaXN0cycsIG9wdHMpO1xuICBpZiAobGlzdHMubGVuZ3RoID4gMCkge1xuICAgIHN1bW1hcnkucHVzaChjb2xvcml6ZSgn8J+TnSBMSVNUUzonLCBDT0xPUlMuYnJpZ2h0ICsgQ09MT1JTLnllbGxvdywgb3B0cykpO1xuICAgIHN1bW1hcnkucHVzaChgJHtsaXN0cy5sZW5ndGh9IGxpc3QgaXRlbShzKSBmb3VuZGApO1xuICB9XG4gIFxuICAvLyBFeHRyYWN0IGxpbmtzXG4gIGNvbnN0IGxpbmtzID0gZXh0cmFjdFN0eWxlZFNlY3Rpb25zKG1hcmtkb3duLCAnbGlua3MnLCBvcHRzKTtcbiAgaWYgKGxpbmtzLmxlbmd0aCA+IDApIHtcbiAgICBzdW1tYXJ5LnB1c2goY29sb3JpemUoJ/CflJcgTElOS1M6JywgQ09MT1JTLmJyaWdodCArIENPTE9SUy5jeWFuLCBvcHRzKSk7XG4gICAgc3VtbWFyeS5wdXNoKGAke2xpbmtzLmxlbmd0aH0gbGluayhzKSBmb3VuZGApO1xuICB9XG4gIFxuICByZXR1cm4gc3VtbWFyeS5qb2luKCdcXG4nKTtcbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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