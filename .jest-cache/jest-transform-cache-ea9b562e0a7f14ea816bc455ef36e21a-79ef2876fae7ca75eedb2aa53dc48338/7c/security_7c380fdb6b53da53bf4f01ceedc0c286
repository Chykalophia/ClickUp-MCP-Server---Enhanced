fd7361091d5326937c0189ab62bdeb4e
/* istanbul ignore next */
function cov_161buh4ef6() {
  var path = "/Users/peterkrzyzek/Development/clickup-mcp-server/src/utils/security.ts";
  var hash = "6f9b9374737b851bcb65ac6e0fafb74806936adc";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/peterkrzyzek/Development/clickup-mcp-server/src/utils/security.ts",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 35
        },
        end: {
          line: 8,
          column: 1
        }
      },
      "1": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 34
        }
      },
      "2": {
        start: {
          line: 15,
          column: 20
        },
        end: {
          line: 15,
          column: 30
        }
      },
      "3": {
        start: {
          line: 16,
          column: 28
        },
        end: {
          line: 16,
          column: 49
        }
      },
      "4": {
        start: {
          line: 18,
          column: 28
        },
        end: {
          line: 18,
          column: 56
        }
      },
      "5": {
        start: {
          line: 20,
          column: 31
        },
        end: {
          line: 20,
          column: 77
        }
      },
      "6": {
        start: {
          line: 20,
          column: 58
        },
        end: {
          line: 20,
          column: 76
        }
      },
      "7": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 24,
          column: 9
        }
      },
      "8": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 25
        }
      },
      "9": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 33
        }
      },
      "10": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 47
        }
      },
      "11": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 20
        }
      },
      "12": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 36,
          column: 9
        }
      },
      "13": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 32,
          column: 38
        }
      },
      "14": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 34
        }
      },
      "15": {
        start: {
          line: 39,
          column: 27
        },
        end: {
          line: 39,
          column: 44
        }
      },
      "16": {
        start: {
          line: 43,
          column: 32
        },
        end: {
          line: 61,
          column: 1
        }
      },
      "17": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "18": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 66
        }
      },
      "19": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 49,
          column: 5
        }
      },
      "20": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 71
        }
      },
      "21": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 52,
          column: 5
        }
      },
      "22": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 78
        }
      },
      "23": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 55,
          column: 5
        }
      },
      "24": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 77
        }
      },
      "25": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 59,
          column: 5
        }
      },
      "26": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 82
        }
      },
      "27": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 60,
          column: 29
        }
      },
      "28": {
        start: {
          line: 65,
          column: 29
        },
        end: {
          line: 85,
          column: 1
        }
      },
      "29": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 73,
          column: 5
        }
      },
      "30": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 72,
          column: 20
        }
      },
      "31": {
        start: {
          line: 74,
          column: 4
        },
        end: {
          line: 76,
          column: 5
        }
      },
      "32": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 75,
          column: 40
        }
      },
      "33": {
        start: {
          line: 77,
          column: 4
        },
        end: {
          line: 83,
          column: 5
        }
      },
      "34": {
        start: {
          line: 78,
          column: 26
        },
        end: {
          line: 78,
          column: 28
        }
      },
      "35": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 81,
          column: 9
        }
      },
      "36": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 65
        }
      },
      "37": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 25
        }
      },
      "38": {
        start: {
          line: 84,
          column: 4
        },
        end: {
          line: 84,
          column: 17
        }
      },
      "39": {
        start: {
          line: 89,
          column: 40
        },
        end: {
          line: 115,
          column: 1
        }
      },
      "40": {
        start: {
          line: 90,
          column: 4
        },
        end: {
          line: 114,
          column: 5
        }
      },
      "41": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 93,
          column: 9
        }
      },
      "42": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 92,
          column: 101
        }
      },
      "43": {
        start: {
          line: 95,
          column: 34
        },
        end: {
          line: 98,
          column: 26
        }
      },
      "44": {
        start: {
          line: 100,
          column: 34
        },
        end: {
          line: 100,
          column: 67
        }
      },
      "45": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 104,
          column: 9
        }
      },
      "46": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 73
        }
      },
      "47": {
        start: {
          line: 106,
          column: 24
        },
        end: {
          line: 106,
          column: 124
        }
      },
      "48": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 107,
          column: 27
        }
      },
      "49": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 113,
          column: 10
        }
      },
      "50": {
        start: {
          line: 119,
          column: 34
        },
        end: {
          line: 181,
          column: 1
        }
      },
      "51": {
        start: {
          line: 120,
          column: 19
        },
        end: {
          line: 120,
          column: 21
        }
      },
      "52": {
        start: {
          line: 122,
          column: 4
        },
        end: {
          line: 147,
          column: 5
        }
      },
      "53": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 123,
          column: 65
        }
      },
      "54": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 129,
          column: 9
        }
      },
      "55": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 128,
          column: 69
        }
      },
      "56": {
        start: {
          line: 131,
          column: 36
        },
        end: {
          line: 134,
          column: 9
        }
      },
      "57": {
        start: {
          line: 135,
          column: 26
        },
        end: {
          line: 135,
          column: 65
        }
      },
      "58": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 138,
          column: 9
        }
      },
      "59": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 137,
          column: 70
        }
      },
      "60": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 142,
          column: 9
        }
      },
      "61": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 141,
          column: 66
        }
      },
      "62": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 146,
          column: 9
        }
      },
      "63": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 145,
          column: 56
        }
      },
      "64": {
        start: {
          line: 149,
          column: 4
        },
        end: {
          line: 166,
          column: 5
        }
      },
      "65": {
        start: {
          line: 150,
          column: 33
        },
        end: {
          line: 162,
          column: 9
        }
      },
      "66": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 165,
          column: 9
        }
      },
      "67": {
        start: {
          line: 164,
          column: 12
        },
        end: {
          line: 164,
          column: 62
        }
      },
      "68": {
        start: {
          line: 168,
          column: 4
        },
        end: {
          line: 176,
          column: 5
        }
      },
      "69": {
        start: {
          line: 169,
          column: 24
        },
        end: {
          line: 169,
          column: 41
        }
      },
      "70": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 172,
          column: 9
        }
      },
      "71": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 171,
          column: 70
        }
      },
      "72": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 175,
          column: 9
        }
      },
      "73": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 174,
          column: 45
        }
      },
      "74": {
        start: {
          line: 177,
          column: 4
        },
        end: {
          line: 180,
          column: 6
        }
      },
      "75": {
        start: {
          line: 185,
          column: 27
        },
        end: {
          line: 213,
          column: 1
        }
      },
      "76": {
        start: {
          line: 186,
          column: 4
        },
        end: {
          line: 212,
          column: 5
        }
      },
      "77": {
        start: {
          line: 187,
          column: 26
        },
        end: {
          line: 187,
          column: 38
        }
      },
      "78": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 191,
          column: 9
        }
      },
      "79": {
        start: {
          line: 190,
          column: 12
        },
        end: {
          line: 190,
          column: 85
        }
      },
      "80": {
        start: {
          line: 193,
          column: 25
        },
        end: {
          line: 193,
          column: 57
        }
      },
      "81": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 207,
          column: 9
        }
      },
      "82": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 206,
          column: 91
        }
      },
      "83": {
        start: {
          line: 208,
          column: 8
        },
        end: {
          line: 208,
          column: 33
        }
      },
      "84": {
        start: {
          line: 211,
          column: 8
        },
        end: {
          line: 211,
          column: 63
        }
      },
      "85": {
        start: {
          line: 217,
          column: 35
        },
        end: {
          line: 219,
          column: 1
        }
      },
      "86": {
        start: {
          line: 218,
          column: 4
        },
        end: {
          line: 218,
          column: 54
        }
      },
      "87": {
        start: {
          line: 223,
          column: 33
        },
        end: {
          line: 226,
          column: 1
        }
      },
      "88": {
        start: {
          line: 224,
          column: 23
        },
        end: {
          line: 224,
          column: 69
        }
      },
      "89": {
        start: {
          line: 225,
          column: 4
        },
        end: {
          line: 225,
          column: 84
        }
      },
      "90": {
        start: {
          line: 230,
          column: 35
        },
        end: {
          line: 253,
          column: 1
        }
      },
      "91": {
        start: {
          line: 231,
          column: 19
        },
        end: {
          line: 231,
          column: 21
        }
      },
      "92": {
        start: {
          line: 233,
          column: 25
        },
        end: {
          line: 233,
          column: 46
        }
      },
      "93": {
        start: {
          line: 234,
          column: 4
        },
        end: {
          line: 248,
          column: 5
        }
      },
      "94": {
        start: {
          line: 235,
          column: 22
        },
        end: {
          line: 235,
          column: 42
        }
      },
      "95": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 247,
          column: 9
        }
      },
      "96": {
        start: {
          line: 237,
          column: 12
        },
        end: {
          line: 237,
          column: 77
        }
      },
      "97": {
        start: {
          line: 241,
          column: 12
        },
        end: {
          line: 246,
          column: 13
        }
      },
      "98": {
        start: {
          line: 242,
          column: 35
        },
        end: {
          line: 242,
          column: 58
        }
      },
      "99": {
        start: {
          line: 243,
          column: 16
        },
        end: {
          line: 245,
          column: 17
        }
      },
      "100": {
        start: {
          line: 244,
          column: 20
        },
        end: {
          line: 244,
          column: 75
        }
      },
      "101": {
        start: {
          line: 249,
          column: 4
        },
        end: {
          line: 252,
          column: 6
        }
      },
      "102": {
        start: {
          line: 257,
          column: 34
        },
        end: {
          line: 266,
          column: 1
        }
      },
      "103": {
        start: {
          line: 258,
          column: 4
        },
        end: {
          line: 265,
          column: 6
        }
      },
      "104": {
        start: {
          line: 270,
          column: 32
        },
        end: {
          line: 280,
          column: 1
        }
      },
      "105": {
        start: {
          line: 271,
          column: 22
        },
        end: {
          line: 271,
          column: 46
        }
      },
      "106": {
        start: {
          line: 272,
          column: 21
        },
        end: {
          line: 277,
          column: 5
        }
      },
      "107": {
        start: {
          line: 279,
          column: 4
        },
        end: {
          line: 279,
          column: 88
        }
      },
      "108": {
        start: {
          line: 284,
          column: 37
        },
        end: {
          line: 302,
          column: 1
        }
      },
      "109": {
        start: {
          line: 285,
          column: 4
        },
        end: {
          line: 301,
          column: 5
        }
      },
      "110": {
        start: {
          line: 287,
          column: 32
        },
        end: {
          line: 287,
          column: 53
        }
      },
      "111": {
        start: {
          line: 289,
          column: 21
        },
        end: {
          line: 289,
          column: 50
        }
      },
      "112": {
        start: {
          line: 290,
          column: 8
        },
        end: {
          line: 290,
          column: 39
        }
      },
      "113": {
        start: {
          line: 293,
          column: 8
        },
        end: {
          line: 296,
          column: 9
        }
      },
      "114": {
        start: {
          line: 294,
          column: 27
        },
        end: {
          line: 294,
          column: 91
        }
      },
      "115": {
        start: {
          line: 294,
          column: 51
        },
        end: {
          line: 294,
          column: 90
        }
      },
      "116": {
        start: {
          line: 295,
          column: 12
        },
        end: {
          line: 295,
          column: 46
        }
      },
      "117": {
        start: {
          line: 297,
          column: 8
        },
        end: {
          line: 300,
          column: 10
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 11,
            column: 5
          }
        },
        loc: {
          start: {
            line: 11,
            column: 18
          },
          end: {
            line: 13,
            column: 5
          }
        },
        line: 11
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 5
          }
        },
        loc: {
          start: {
            line: 14,
            column: 27
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 20,
            column: 50
          },
          end: {
            line: 20,
            column: 51
          }
        },
        loc: {
          start: {
            line: 20,
            column: 58
          },
          end: {
            line: 20,
            column: 76
          }
        },
        line: 20
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 15
          },
          end: {
            line: 37,
            column: 5
          }
        },
        line: 30
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 43,
            column: 32
          },
          end: {
            line: 43,
            column: 33
          }
        },
        loc: {
          start: {
            line: 43,
            column: 43
          },
          end: {
            line: 61,
            column: 1
          }
        },
        line: 43
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 65,
            column: 29
          },
          end: {
            line: 65,
            column: 30
          }
        },
        loc: {
          start: {
            line: 65,
            column: 40
          },
          end: {
            line: 85,
            column: 1
          }
        },
        line: 65
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 89,
            column: 40
          },
          end: {
            line: 89,
            column: 41
          }
        },
        loc: {
          start: {
            line: 89,
            column: 72
          },
          end: {
            line: 115,
            column: 1
          }
        },
        line: 89
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 119,
            column: 34
          },
          end: {
            line: 119,
            column: 35
          }
        },
        loc: {
          start: {
            line: 119,
            column: 64
          },
          end: {
            line: 181,
            column: 1
          }
        },
        line: 119
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 185,
            column: 27
          },
          end: {
            line: 185,
            column: 28
          }
        },
        loc: {
          start: {
            line: 185,
            column: 36
          },
          end: {
            line: 213,
            column: 1
          }
        },
        line: 185
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 217,
            column: 35
          },
          end: {
            line: 217,
            column: 36
          }
        },
        loc: {
          start: {
            line: 217,
            column: 52
          },
          end: {
            line: 219,
            column: 1
          }
        },
        line: 217
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 223,
            column: 33
          },
          end: {
            line: 223,
            column: 34
          }
        },
        loc: {
          start: {
            line: 223,
            column: 49
          },
          end: {
            line: 226,
            column: 1
          }
        },
        line: 223
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 230,
            column: 35
          },
          end: {
            line: 230,
            column: 36
          }
        },
        loc: {
          start: {
            line: 230,
            column: 41
          },
          end: {
            line: 253,
            column: 1
          }
        },
        line: 230
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 257,
            column: 34
          },
          end: {
            line: 257,
            column: 35
          }
        },
        loc: {
          start: {
            line: 257,
            column: 40
          },
          end: {
            line: 266,
            column: 1
          }
        },
        line: 257
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 270,
            column: 32
          },
          end: {
            line: 270,
            column: 33
          }
        },
        loc: {
          start: {
            line: 270,
            column: 68
          },
          end: {
            line: 280,
            column: 1
          }
        },
        line: 270
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 284,
            column: 37
          },
          end: {
            line: 284,
            column: 38
          }
        },
        loc: {
          start: {
            line: 284,
            column: 57
          },
          end: {
            line: 302,
            column: 1
          }
        },
        line: 284
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 294,
            column: 44
          },
          end: {
            line: 294,
            column: 45
          }
        },
        loc: {
          start: {
            line: 294,
            column: 51
          },
          end: {
            line: 294,
            column: 90
          }
        },
        line: 294
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 18,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 18,
            column: 50
          }
        }, {
          start: {
            line: 18,
            column: 54
          },
          end: {
            line: 18,
            column: 56
          }
        }],
        line: 18
      },
      "1": {
        loc: {
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 24,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "2": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 36,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 36,
            column: 9
          }
        }, {
          start: {
            line: 34,
            column: 13
          },
          end: {
            line: 36,
            column: 9
          }
        }],
        line: 31
      },
      "3": {
        loc: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "4": {
        loc: {
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "5": {
        loc: {
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "6": {
        loc: {
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 55,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 55,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "7": {
        loc: {
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 59,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 59,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "8": {
        loc: {
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 57,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 57,
            column: 27
          }
        }, {
          start: {
            line: 57,
            column: 31
          },
          end: {
            line: 57,
            column: 51
          }
        }, {
          start: {
            line: 57,
            column: 55
          },
          end: {
            line: 57,
            column: 75
          }
        }],
        line: 57
      },
      "9": {
        loc: {
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 73,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 73,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "10": {
        loc: {
          start: {
            line: 74,
            column: 4
          },
          end: {
            line: 76,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 4
          },
          end: {
            line: 76,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "11": {
        loc: {
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 83,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 83,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      },
      "12": {
        loc: {
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 77,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 77,
            column: 13
          }
        }, {
          start: {
            line: 77,
            column: 17
          },
          end: {
            line: 77,
            column: 42
          }
        }],
        line: 77
      },
      "13": {
        loc: {
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 93,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 93,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 91
      },
      "14": {
        loc: {
          start: {
            line: 91,
            column: 12
          },
          end: {
            line: 91,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 91,
            column: 12
          },
          end: {
            line: 91,
            column: 20
          }
        }, {
          start: {
            line: 91,
            column: 24
          },
          end: {
            line: 91,
            column: 34
          }
        }, {
          start: {
            line: 91,
            column: 38
          },
          end: {
            line: 91,
            column: 45
          }
        }],
        line: 91
      },
      "15": {
        loc: {
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 104,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 104,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 102
      },
      "16": {
        loc: {
          start: {
            line: 112,
            column: 50
          },
          end: {
            line: 112,
            column: 106
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 112,
            column: 75
          },
          end: {
            line: 112,
            column: 88
          }
        }, {
          start: {
            line: 112,
            column: 91
          },
          end: {
            line: 112,
            column: 106
          }
        }],
        line: 112
      },
      "17": {
        loc: {
          start: {
            line: 122,
            column: 4
          },
          end: {
            line: 147,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 4
          },
          end: {
            line: 147,
            column: 5
          }
        }, {
          start: {
            line: 125,
            column: 9
          },
          end: {
            line: 147,
            column: 5
          }
        }],
        line: 122
      },
      "18": {
        loc: {
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 122,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 122,
            column: 17
          }
        }, {
          start: {
            line: 122,
            column: 21
          },
          end: {
            line: 122,
            column: 49
          }
        }],
        line: 122
      },
      "19": {
        loc: {
          start: {
            line: 127,
            column: 8
          },
          end: {
            line: 129,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 8
          },
          end: {
            line: 129,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 127
      },
      "20": {
        loc: {
          start: {
            line: 127,
            column: 12
          },
          end: {
            line: 127,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 127,
            column: 12
          },
          end: {
            line: 127,
            column: 35
          }
        }, {
          start: {
            line: 127,
            column: 39
          },
          end: {
            line: 127,
            column: 61
          }
        }, {
          start: {
            line: 127,
            column: 65
          },
          end: {
            line: 127,
            column: 88
          }
        }],
        line: 127
      },
      "21": {
        loc: {
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 138,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 138,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 136
      },
      "22": {
        loc: {
          start: {
            line: 136,
            column: 12
          },
          end: {
            line: 136,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 136,
            column: 12
          },
          end: {
            line: 136,
            column: 21
          }
        }, {
          start: {
            line: 136,
            column: 25
          },
          end: {
            line: 136,
            column: 70
          }
        }],
        line: 136
      },
      "23": {
        loc: {
          start: {
            line: 140,
            column: 8
          },
          end: {
            line: 142,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 140,
            column: 8
          },
          end: {
            line: 142,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 140
      },
      "24": {
        loc: {
          start: {
            line: 144,
            column: 8
          },
          end: {
            line: 146,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 144,
            column: 8
          },
          end: {
            line: 146,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 144
      },
      "25": {
        loc: {
          start: {
            line: 149,
            column: 4
          },
          end: {
            line: 166,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 149,
            column: 4
          },
          end: {
            line: 166,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 149
      },
      "26": {
        loc: {
          start: {
            line: 163,
            column: 8
          },
          end: {
            line: 165,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 163,
            column: 8
          },
          end: {
            line: 165,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 163
      },
      "27": {
        loc: {
          start: {
            line: 168,
            column: 4
          },
          end: {
            line: 176,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 168,
            column: 4
          },
          end: {
            line: 176,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 168
      },
      "28": {
        loc: {
          start: {
            line: 170,
            column: 8
          },
          end: {
            line: 172,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 170,
            column: 8
          },
          end: {
            line: 172,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 170
      },
      "29": {
        loc: {
          start: {
            line: 173,
            column: 8
          },
          end: {
            line: 175,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 173,
            column: 8
          },
          end: {
            line: 175,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 173
      },
      "30": {
        loc: {
          start: {
            line: 189,
            column: 8
          },
          end: {
            line: 191,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 189,
            column: 8
          },
          end: {
            line: 191,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 189
      },
      "31": {
        loc: {
          start: {
            line: 194,
            column: 8
          },
          end: {
            line: 207,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 194,
            column: 8
          },
          end: {
            line: 207,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 194
      },
      "32": {
        loc: {
          start: {
            line: 194,
            column: 12
          },
          end: {
            line: 205,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 194,
            column: 12
          },
          end: {
            line: 194,
            column: 36
          }
        }, {
          start: {
            line: 195,
            column: 12
          },
          end: {
            line: 195,
            column: 36
          }
        }, {
          start: {
            line: 196,
            column: 12
          },
          end: {
            line: 196,
            column: 30
          }
        }, {
          start: {
            line: 197,
            column: 12
          },
          end: {
            line: 197,
            column: 43
          }
        }, {
          start: {
            line: 198,
            column: 12
          },
          end: {
            line: 198,
            column: 38
          }
        }, {
          start: {
            line: 199,
            column: 12
          },
          end: {
            line: 199,
            column: 42
          }
        }, {
          start: {
            line: 200,
            column: 12
          },
          end: {
            line: 200,
            column: 42
          }
        }, {
          start: {
            line: 201,
            column: 12
          },
          end: {
            line: 201,
            column: 42
          }
        }, {
          start: {
            line: 202,
            column: 12
          },
          end: {
            line: 202,
            column: 42
          }
        }, {
          start: {
            line: 203,
            column: 12
          },
          end: {
            line: 203,
            column: 40
          }
        }, {
          start: {
            line: 204,
            column: 12
          },
          end: {
            line: 204,
            column: 42
          }
        }, {
          start: {
            line: 205,
            column: 12
          },
          end: {
            line: 205,
            column: 42
          }
        }],
        line: 194
      },
      "33": {
        loc: {
          start: {
            line: 217,
            column: 36
          },
          end: {
            line: 217,
            column: 47
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 217,
            column: 45
          },
          end: {
            line: 217,
            column: 47
          }
        }],
        line: 217
      },
      "34": {
        loc: {
          start: {
            line: 224,
            column: 23
          },
          end: {
            line: 224,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 224,
            column: 23
          },
          end: {
            line: 224,
            column: 27
          }
        }, {
          start: {
            line: 224,
            column: 31
          },
          end: {
            line: 224,
            column: 69
          }
        }],
        line: 224
      },
      "35": {
        loc: {
          start: {
            line: 236,
            column: 8
          },
          end: {
            line: 247,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 236,
            column: 8
          },
          end: {
            line: 247,
            column: 9
          }
        }, {
          start: {
            line: 239,
            column: 13
          },
          end: {
            line: 247,
            column: 9
          }
        }],
        line: 236
      },
      "36": {
        loc: {
          start: {
            line: 241,
            column: 12
          },
          end: {
            line: 246,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 241,
            column: 12
          },
          end: {
            line: 246,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 241
      },
      "37": {
        loc: {
          start: {
            line: 243,
            column: 16
          },
          end: {
            line: 245,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 243,
            column: 16
          },
          end: {
            line: 245,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 243
      },
      "38": {
        loc: {
          start: {
            line: 270,
            column: 49
          },
          end: {
            line: 270,
            column: 63
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 270,
            column: 57
          },
          end: {
            line: 270,
            column: 63
          }
        }],
        line: 270
      },
      "39": {
        loc: {
          start: {
            line: 293,
            column: 8
          },
          end: {
            line: 296,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 293,
            column: 8
          },
          end: {
            line: 296,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 293
      },
      "40": {
        loc: {
          start: {
            line: 299,
            column: 42
          },
          end: {
            line: 299,
            column: 98
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 299,
            column: 67
          },
          end: {
            line: 299,
            column: 80
          }
        }, {
          start: {
            line: 299,
            column: 83
          },
          end: {
            line: 299,
            column: 98
          }
        }],
        line: 299
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      "33": [0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0],
      "39": [0, 0],
      "40": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/peterkrzyzek/Development/clickup-mcp-server/src/utils/security.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/peterkrzyzek/Development/clickup-mcp-server/src/utils/security.ts"],
      sourcesContent: ["import crypto from 'crypto';\nimport { z } from 'zod';\n\n/**\n * Security utilities for the ClickUp MCP Server\n */\n\n// Rate limiting configuration\nexport interface RateLimitConfig {\n  windowMs: number;\n  maxRequests: number;\n}\n\n// Default rate limits\nexport const DEFAULT_RATE_LIMITS: Record<string, RateLimitConfig> = {\n  webhook: { windowMs: 60000, maxRequests: 100 }, // 100 requests per minute\n  api: { windowMs: 60000, maxRequests: 1000 }, // 1000 requests per minute\n  upload: { windowMs: 60000, maxRequests: 10 } // 10 uploads per minute\n};\n\n// Rate limiter implementation\nclass RateLimiter {\n  private requests: Map<string, number[]> = new Map();\n\n  isAllowed(key: string, config: RateLimitConfig): boolean {\n    const now = Date.now();\n    const windowStart = now - config.windowMs;\n    \n    // Get existing requests for this key\n    const keyRequests = this.requests.get(key) || [];\n    \n    // Filter out old requests\n    const recentRequests = keyRequests.filter(time => time > windowStart);\n    \n    // Check if under limit\n    if (recentRequests.length >= config.maxRequests) {\n      return false;\n    }\n    \n    // Add current request\n    recentRequests.push(now);\n    this.requests.set(key, recentRequests);\n    \n    return true;\n  }\n\n  reset(key?: string): void {\n    if (key) {\n      this.requests.delete(key);\n    } else {\n      this.requests.clear();\n    }\n  }\n}\n\nexport const rateLimiter = new RateLimiter();\n\n/**\n * Validate and sanitize API token\n */\nexport const validateApiToken = (token: string): { isValid: boolean; error?: string } => {\n  if (!token) {\n    return { isValid: false, error: 'API token is required' };\n  }\n\n  if (typeof token !== 'string') {\n    return { isValid: false, error: 'API token must be a string' };\n  }\n\n  if (token.length < 10) {\n    return { isValid: false, error: 'API token appears to be too short' };\n  }\n\n  if (token.length > 200) {\n    return { isValid: false, error: 'API token appears to be too long' };\n  }\n\n  // Check for suspicious patterns\n  if (token.includes(' ') || token.includes('\\n') || token.includes('\\t')) {\n    return { isValid: false, error: 'API token contains invalid characters' };\n  }\n\n  return { isValid: true };\n};\n\n/**\n * Sanitize user input to prevent injection attacks\n */\nexport const sanitizeInput = (input: any): any => {\n  if (typeof input === 'string') {\n    // Remove potentially dangerous characters\n    return input\n      .replace(/[<>]/g, '') // Remove HTML tags\n      .replace(/javascript:/gi, '') // Remove javascript: protocol\n      .replace(/on\\w+=/gi, '') // Remove event handlers\n      .trim();\n  }\n\n  if (Array.isArray(input)) {\n    return input.map(sanitizeInput);\n  }\n\n  if (input && typeof input === 'object') {\n    const sanitized: any = {};\n    for (const [key, value] of Object.entries(input)) {\n      sanitized[sanitizeInput(key)] = sanitizeInput(value);\n    }\n    return sanitized;\n  }\n\n  return input;\n};\n\n/**\n * Validate webhook signature with timing-safe comparison\n */\nexport const validateWebhookSignature = (\n  payload: string,\n  signature: string,\n  secret: string\n): { isValid: boolean; error?: string } => {\n  try {\n    if (!payload || !signature || !secret) {\n      return { isValid: false, error: 'Missing required parameters for signature validation' };\n    }\n\n    // Generate expected signature\n    const expectedSignature = crypto\n      .createHmac('sha256', secret)\n      .update(payload, 'utf8')\n      .digest('hex');\n\n    // Extract signature from header (remove 'sha256=' prefix if present)\n    const receivedSignature = signature.replace(/^sha256=/, '');\n\n    // Validate signature format\n    if (!/^[a-f0-9]{64}$/i.test(receivedSignature)) {\n      return { isValid: false, error: 'Invalid signature format' };\n    }\n\n    // Timing-safe comparison\n    const isValid = crypto.timingSafeEqual(\n      Buffer.from(expectedSignature, 'hex'),\n      Buffer.from(receivedSignature, 'hex')\n    );\n\n    return { isValid };\n  } catch (error) {\n    return { \n      isValid: false, \n      error: `Signature validation error: ${error instanceof Error ? error.message : 'Unknown error'}` \n    };\n  }\n};\n\n/**\n * Validate file upload security\n */\nexport const validateFileUpload = (\n  filename: string,\n  mimetype?: string,\n  size?: number\n): { isValid: boolean; errors: string[] } => {\n  const errors: string[] = [];\n\n  // Validate filename\n  if (!filename || typeof filename !== 'string') {\n    errors.push('Filename is required and must be a string');\n  } else {\n    // Check for path traversal attempts\n    if (filename.includes('..') || filename.includes('/') || filename.includes('\\\\')) {\n      errors.push('Filename contains invalid path characters');\n    }\n\n    // Check for dangerous extensions\n    const dangerousExtensions = [\n      '.exe', '.bat', '.cmd', '.com', '.pif', '.scr', '.vbs', '.js', '.jar',\n      '.php', '.asp', '.aspx', '.jsp', '.sh', '.ps1', '.py', '.rb'\n    ];\n    \n    const extension = filename.toLowerCase().split('.').pop();\n    if (extension && dangerousExtensions.includes(`.${extension}`)) {\n      errors.push('File type not allowed for security reasons');\n    }\n\n    // Check filename length\n    if (filename.length > 255) {\n      errors.push('Filename too long (max 255 characters)');\n    }\n\n    // Check for null bytes\n    if (filename.includes('\\0')) {\n      errors.push('Filename contains null bytes');\n    }\n  }\n\n  // Validate mimetype if provided\n  if (mimetype) {\n    const allowedMimetypes = [\n      // Images\n      'image/jpeg', 'image/png', 'image/gif', 'image/webp', 'image/svg+xml',\n      // Documents\n      'application/pdf', 'text/plain', 'text/csv',\n      'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n      'application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n      'application/vnd.ms-powerpoint', 'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n      // Archives\n      'application/zip', 'application/x-rar-compressed', 'application/x-7z-compressed',\n      // Media\n      'video/mp4', 'video/webm', 'audio/mp3', 'audio/wav', 'audio/ogg'\n    ];\n\n    if (!allowedMimetypes.includes(mimetype)) {\n      errors.push(`Mimetype '${mimetype}' not allowed`);\n    }\n  }\n\n  // Validate file size if provided (max 100MB)\n  if (size !== undefined) {\n    const maxSize = 100 * 1024 * 1024; // 100MB\n    if (size > maxSize) {\n      errors.push(`File size too large (max ${maxSize} bytes)`);\n    }\n    if (size < 0) {\n      errors.push('Invalid file size');\n    }\n  }\n\n  return {\n    isValid: errors.length === 0,\n    errors\n  };\n};\n\n/**\n * Validate URL for security\n */\nexport const validateUrl = (url: string): { isValid: boolean; error?: string } => {\n  try {\n    const parsedUrl = new URL(url);\n    \n    // Only allow HTTP and HTTPS\n    if (!['http:', 'https:'].includes(parsedUrl.protocol)) {\n      return { isValid: false, error: 'Only HTTP and HTTPS URLs are allowed' };\n    }\n\n    // Block localhost and private IPs for security\n    const hostname = parsedUrl.hostname.toLowerCase();\n    if (\n      hostname === 'localhost' ||\n      hostname === '127.0.0.1' ||\n      hostname === '::1' ||\n      hostname.startsWith('192.168.') ||\n      hostname.startsWith('10.') ||\n      hostname.startsWith('172.16.') ||\n      hostname.startsWith('172.17.') ||\n      hostname.startsWith('172.18.') ||\n      hostname.startsWith('172.19.') ||\n      hostname.startsWith('172.2') ||\n      hostname.startsWith('172.30.') ||\n      hostname.startsWith('172.31.')\n    ) {\n      return { isValid: false, error: 'Private and localhost URLs are not allowed' };\n    }\n\n    return { isValid: true };\n  } catch (error) {\n    return { isValid: false, error: 'Invalid URL format' };\n  }\n};\n\n/**\n * Generate secure random string\n */\nexport const generateSecureToken = (length: number = 32): string => {\n  return crypto.randomBytes(length).toString('hex');\n};\n\n/**\n * Hash sensitive data\n */\nexport const hashSensitiveData = (data: string, salt?: string): string => {\n  const actualSalt = salt || crypto.randomBytes(16).toString('hex');\n  return crypto.pbkdf2Sync(data, actualSalt, 10000, 64, 'sha512').toString('hex');\n};\n\n/**\n * Validate environment variables\n */\nexport const validateEnvironment = (): { isValid: boolean; errors: string[] } => {\n  const errors: string[] = [];\n\n  // Check required environment variables\n  const requiredVars = ['CLICKUP_API_TOKEN'];\n  \n  for (const varName of requiredVars) {\n    const value = process.env[varName];\n    if (!value) {\n      errors.push(`Missing required environment variable: ${varName}`);\n    } else {\n      // Validate API token format\n      if (varName === 'CLICKUP_API_TOKEN') {\n        const validation = validateApiToken(value);\n        if (!validation.isValid) {\n          errors.push(`Invalid ${varName}: ${validation.error}`);\n        }\n      }\n    }\n  }\n\n  return {\n    isValid: errors.length === 0,\n    errors\n  };\n};\n\n/**\n * Security headers for HTTP responses\n */\nexport const getSecurityHeaders = (): Record<string, string> => {\n  return {\n    'X-Content-Type-Options': 'nosniff',\n    'X-Frame-Options': 'DENY',\n    'X-XSS-Protection': '1; mode=block',\n    'Strict-Transport-Security': 'max-age=31536000; includeSubDomains',\n    'Content-Security-Policy': \"default-src 'self'\",\n    'Referrer-Policy': 'strict-origin-when-cross-origin'\n  };\n};\n\n/**\n * Log security events\n */\nexport const logSecurityEvent = (\n  event: string,\n  details: Record<string, any>,\n  level: 'info' | 'warn' | 'error' = 'info'\n): void => {\n  const timestamp = new Date().toISOString();\n  const logEntry = {\n    timestamp,\n    event,\n    level,\n    details: sanitizeInput(details)\n  };\n\n  // In production, this should go to a proper logging system\n  console.error(`[SECURITY ${level.toUpperCase()}] ${timestamp}: ${event}`, logEntry);\n};\n\n/**\n * Validate MCP tool parameters\n */\nexport const validateMcpParameters = (\n  schema: z.ZodSchema,\n  params: any\n): { isValid: boolean; data?: any; errors?: string[] } => {\n  try {\n    // Sanitize input first\n    const sanitizedParams = sanitizeInput(params);\n    \n    // Validate with schema\n    const data = schema.parse(sanitizedParams);\n    \n    return { isValid: true, data };\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      const errors = error.errors.map(err => `${err.path.join('.')}: ${err.message}`);\n      return { isValid: false, errors };\n    }\n    \n    return { \n      isValid: false, \n      errors: [`Validation error: ${error instanceof Error ? error.message : 'Unknown error'}`] \n    };\n  }\n};\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6f9b9374737b851bcb65ac6e0fafb74806936adc"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_161buh4ef6 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_161buh4ef6();
import crypto from 'crypto';
import { z } from 'zod';
// Default rate limits
export const DEFAULT_RATE_LIMITS =
/* istanbul ignore next */
(cov_161buh4ef6().s[0]++, {
  webhook: {
    windowMs: 60000,
    maxRequests: 100
  },
  // 100 requests per minute
  api: {
    windowMs: 60000,
    maxRequests: 1000
  },
  // 1000 requests per minute
  upload: {
    windowMs: 60000,
    maxRequests: 10
  } // 10 uploads per minute
});
// Rate limiter implementation
class RateLimiter {
  constructor() {
    /* istanbul ignore next */
    cov_161buh4ef6().f[0]++;
    cov_161buh4ef6().s[1]++;
    this.requests = new Map();
  }
  isAllowed(key, config) {
    /* istanbul ignore next */
    cov_161buh4ef6().f[1]++;
    const now =
    /* istanbul ignore next */
    (cov_161buh4ef6().s[2]++, Date.now());
    const windowStart =
    /* istanbul ignore next */
    (cov_161buh4ef6().s[3]++, now - config.windowMs);
    // Get existing requests for this key
    const keyRequests =
    /* istanbul ignore next */
    (cov_161buh4ef6().s[4]++,
    /* istanbul ignore next */
    (cov_161buh4ef6().b[0][0]++, this.requests.get(key)) ||
    /* istanbul ignore next */
    (cov_161buh4ef6().b[0][1]++, []));
    // Filter out old requests
    const recentRequests =
    /* istanbul ignore next */
    (cov_161buh4ef6().s[5]++, keyRequests.filter(time => {
      /* istanbul ignore next */
      cov_161buh4ef6().f[2]++;
      cov_161buh4ef6().s[6]++;
      return time > windowStart;
    }));
    // Check if under limit
    /* istanbul ignore next */
    cov_161buh4ef6().s[7]++;
    if (recentRequests.length >= config.maxRequests) {
      /* istanbul ignore next */
      cov_161buh4ef6().b[1][0]++;
      cov_161buh4ef6().s[8]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_161buh4ef6().b[1][1]++;
    }
    // Add current request
    cov_161buh4ef6().s[9]++;
    recentRequests.push(now);
    /* istanbul ignore next */
    cov_161buh4ef6().s[10]++;
    this.requests.set(key, recentRequests);
    /* istanbul ignore next */
    cov_161buh4ef6().s[11]++;
    return true;
  }
  reset(key) {
    /* istanbul ignore next */
    cov_161buh4ef6().f[3]++;
    cov_161buh4ef6().s[12]++;
    if (key) {
      /* istanbul ignore next */
      cov_161buh4ef6().b[2][0]++;
      cov_161buh4ef6().s[13]++;
      this.requests.delete(key);
    } else {
      /* istanbul ignore next */
      cov_161buh4ef6().b[2][1]++;
      cov_161buh4ef6().s[14]++;
      this.requests.clear();
    }
  }
}
export const rateLimiter =
/* istanbul ignore next */
(cov_161buh4ef6().s[15]++, new RateLimiter());
/**
 * Validate and sanitize API token
 */
/* istanbul ignore next */
cov_161buh4ef6().s[16]++;
export const validateApiToken = token => {
  /* istanbul ignore next */
  cov_161buh4ef6().f[4]++;
  cov_161buh4ef6().s[17]++;
  if (!token) {
    /* istanbul ignore next */
    cov_161buh4ef6().b[3][0]++;
    cov_161buh4ef6().s[18]++;
    return {
      isValid: false,
      error: 'API token is required'
    };
  } else
  /* istanbul ignore next */
  {
    cov_161buh4ef6().b[3][1]++;
  }
  cov_161buh4ef6().s[19]++;
  if (typeof token !== 'string') {
    /* istanbul ignore next */
    cov_161buh4ef6().b[4][0]++;
    cov_161buh4ef6().s[20]++;
    return {
      isValid: false,
      error: 'API token must be a string'
    };
  } else
  /* istanbul ignore next */
  {
    cov_161buh4ef6().b[4][1]++;
  }
  cov_161buh4ef6().s[21]++;
  if (token.length < 10) {
    /* istanbul ignore next */
    cov_161buh4ef6().b[5][0]++;
    cov_161buh4ef6().s[22]++;
    return {
      isValid: false,
      error: 'API token appears to be too short'
    };
  } else
  /* istanbul ignore next */
  {
    cov_161buh4ef6().b[5][1]++;
  }
  cov_161buh4ef6().s[23]++;
  if (token.length > 200) {
    /* istanbul ignore next */
    cov_161buh4ef6().b[6][0]++;
    cov_161buh4ef6().s[24]++;
    return {
      isValid: false,
      error: 'API token appears to be too long'
    };
  } else
  /* istanbul ignore next */
  {
    cov_161buh4ef6().b[6][1]++;
  }
  // Check for suspicious patterns
  cov_161buh4ef6().s[25]++;
  if (
  /* istanbul ignore next */
  (cov_161buh4ef6().b[8][0]++, token.includes(' ')) ||
  /* istanbul ignore next */
  (cov_161buh4ef6().b[8][1]++, token.includes('\n')) ||
  /* istanbul ignore next */
  (cov_161buh4ef6().b[8][2]++, token.includes('\t'))) {
    /* istanbul ignore next */
    cov_161buh4ef6().b[7][0]++;
    cov_161buh4ef6().s[26]++;
    return {
      isValid: false,
      error: 'API token contains invalid characters'
    };
  } else
  /* istanbul ignore next */
  {
    cov_161buh4ef6().b[7][1]++;
  }
  cov_161buh4ef6().s[27]++;
  return {
    isValid: true
  };
};
/**
 * Sanitize user input to prevent injection attacks
 */
/* istanbul ignore next */
cov_161buh4ef6().s[28]++;
export const sanitizeInput = input => {
  /* istanbul ignore next */
  cov_161buh4ef6().f[5]++;
  cov_161buh4ef6().s[29]++;
  if (typeof input === 'string') {
    /* istanbul ignore next */
    cov_161buh4ef6().b[9][0]++;
    cov_161buh4ef6().s[30]++;
    // Remove potentially dangerous characters
    return input.replace(/[<>]/g, '') // Remove HTML tags
    .replace(/javascript:/gi, '') // Remove javascript: protocol
    .replace(/on\w+=/gi, '') // Remove event handlers
    .trim();
  } else
  /* istanbul ignore next */
  {
    cov_161buh4ef6().b[9][1]++;
  }
  cov_161buh4ef6().s[31]++;
  if (Array.isArray(input)) {
    /* istanbul ignore next */
    cov_161buh4ef6().b[10][0]++;
    cov_161buh4ef6().s[32]++;
    return input.map(sanitizeInput);
  } else
  /* istanbul ignore next */
  {
    cov_161buh4ef6().b[10][1]++;
  }
  cov_161buh4ef6().s[33]++;
  if (
  /* istanbul ignore next */
  (cov_161buh4ef6().b[12][0]++, input) &&
  /* istanbul ignore next */
  (cov_161buh4ef6().b[12][1]++, typeof input === 'object')) {
    /* istanbul ignore next */
    cov_161buh4ef6().b[11][0]++;
    const sanitized =
    /* istanbul ignore next */
    (cov_161buh4ef6().s[34]++, {});
    /* istanbul ignore next */
    cov_161buh4ef6().s[35]++;
    for (const [key, value] of Object.entries(input)) {
      /* istanbul ignore next */
      cov_161buh4ef6().s[36]++;
      sanitized[sanitizeInput(key)] = sanitizeInput(value);
    }
    /* istanbul ignore next */
    cov_161buh4ef6().s[37]++;
    return sanitized;
  } else
  /* istanbul ignore next */
  {
    cov_161buh4ef6().b[11][1]++;
  }
  cov_161buh4ef6().s[38]++;
  return input;
};
/**
 * Validate webhook signature with timing-safe comparison
 */
/* istanbul ignore next */
cov_161buh4ef6().s[39]++;
export const validateWebhookSignature = (payload, signature, secret) => {
  /* istanbul ignore next */
  cov_161buh4ef6().f[6]++;
  cov_161buh4ef6().s[40]++;
  try {
    /* istanbul ignore next */
    cov_161buh4ef6().s[41]++;
    if (
    /* istanbul ignore next */
    (cov_161buh4ef6().b[14][0]++, !payload) ||
    /* istanbul ignore next */
    (cov_161buh4ef6().b[14][1]++, !signature) ||
    /* istanbul ignore next */
    (cov_161buh4ef6().b[14][2]++, !secret)) {
      /* istanbul ignore next */
      cov_161buh4ef6().b[13][0]++;
      cov_161buh4ef6().s[42]++;
      return {
        isValid: false,
        error: 'Missing required parameters for signature validation'
      };
    } else
    /* istanbul ignore next */
    {
      cov_161buh4ef6().b[13][1]++;
    }
    // Generate expected signature
    const expectedSignature =
    /* istanbul ignore next */
    (cov_161buh4ef6().s[43]++, crypto.createHmac('sha256', secret).update(payload, 'utf8').digest('hex'));
    // Extract signature from header (remove 'sha256=' prefix if present)
    const receivedSignature =
    /* istanbul ignore next */
    (cov_161buh4ef6().s[44]++, signature.replace(/^sha256=/, ''));
    // Validate signature format
    /* istanbul ignore next */
    cov_161buh4ef6().s[45]++;
    if (!/^[a-f0-9]{64}$/i.test(receivedSignature)) {
      /* istanbul ignore next */
      cov_161buh4ef6().b[15][0]++;
      cov_161buh4ef6().s[46]++;
      return {
        isValid: false,
        error: 'Invalid signature format'
      };
    } else
    /* istanbul ignore next */
    {
      cov_161buh4ef6().b[15][1]++;
    }
    // Timing-safe comparison
    const isValid =
    /* istanbul ignore next */
    (cov_161buh4ef6().s[47]++, crypto.timingSafeEqual(Buffer.from(expectedSignature, 'hex'), Buffer.from(receivedSignature, 'hex')));
    /* istanbul ignore next */
    cov_161buh4ef6().s[48]++;
    return {
      isValid
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_161buh4ef6().s[49]++;
    return {
      isValid: false,
      error: `Signature validation error: ${error instanceof Error ?
      /* istanbul ignore next */
      (cov_161buh4ef6().b[16][0]++, error.message) :
      /* istanbul ignore next */
      (cov_161buh4ef6().b[16][1]++, 'Unknown error')}`
    };
  }
};
/**
 * Validate file upload security
 */
/* istanbul ignore next */
cov_161buh4ef6().s[50]++;
export const validateFileUpload = (filename, mimetype, size) => {
  /* istanbul ignore next */
  cov_161buh4ef6().f[7]++;
  const errors =
  /* istanbul ignore next */
  (cov_161buh4ef6().s[51]++, []);
  // Validate filename
  /* istanbul ignore next */
  cov_161buh4ef6().s[52]++;
  if (
  /* istanbul ignore next */
  (cov_161buh4ef6().b[18][0]++, !filename) ||
  /* istanbul ignore next */
  (cov_161buh4ef6().b[18][1]++, typeof filename !== 'string')) {
    /* istanbul ignore next */
    cov_161buh4ef6().b[17][0]++;
    cov_161buh4ef6().s[53]++;
    errors.push('Filename is required and must be a string');
  } else {
    /* istanbul ignore next */
    cov_161buh4ef6().b[17][1]++;
    cov_161buh4ef6().s[54]++;
    // Check for path traversal attempts
    if (
    /* istanbul ignore next */
    (cov_161buh4ef6().b[20][0]++, filename.includes('..')) ||
    /* istanbul ignore next */
    (cov_161buh4ef6().b[20][1]++, filename.includes('/')) ||
    /* istanbul ignore next */
    (cov_161buh4ef6().b[20][2]++, filename.includes('\\'))) {
      /* istanbul ignore next */
      cov_161buh4ef6().b[19][0]++;
      cov_161buh4ef6().s[55]++;
      errors.push('Filename contains invalid path characters');
    } else
    /* istanbul ignore next */
    {
      cov_161buh4ef6().b[19][1]++;
    }
    // Check for dangerous extensions
    const dangerousExtensions =
    /* istanbul ignore next */
    (cov_161buh4ef6().s[56]++, ['.exe', '.bat', '.cmd', '.com', '.pif', '.scr', '.vbs', '.js', '.jar', '.php', '.asp', '.aspx', '.jsp', '.sh', '.ps1', '.py', '.rb']);
    const extension =
    /* istanbul ignore next */
    (cov_161buh4ef6().s[57]++, filename.toLowerCase().split('.').pop());
    /* istanbul ignore next */
    cov_161buh4ef6().s[58]++;
    if (
    /* istanbul ignore next */
    (cov_161buh4ef6().b[22][0]++, extension) &&
    /* istanbul ignore next */
    (cov_161buh4ef6().b[22][1]++, dangerousExtensions.includes(`.${extension}`))) {
      /* istanbul ignore next */
      cov_161buh4ef6().b[21][0]++;
      cov_161buh4ef6().s[59]++;
      errors.push('File type not allowed for security reasons');
    } else
    /* istanbul ignore next */
    {
      cov_161buh4ef6().b[21][1]++;
    }
    // Check filename length
    cov_161buh4ef6().s[60]++;
    if (filename.length > 255) {
      /* istanbul ignore next */
      cov_161buh4ef6().b[23][0]++;
      cov_161buh4ef6().s[61]++;
      errors.push('Filename too long (max 255 characters)');
    } else
    /* istanbul ignore next */
    {
      cov_161buh4ef6().b[23][1]++;
    }
    // Check for null bytes
    cov_161buh4ef6().s[62]++;
    if (filename.includes('\0')) {
      /* istanbul ignore next */
      cov_161buh4ef6().b[24][0]++;
      cov_161buh4ef6().s[63]++;
      errors.push('Filename contains null bytes');
    } else
    /* istanbul ignore next */
    {
      cov_161buh4ef6().b[24][1]++;
    }
  }
  // Validate mimetype if provided
  /* istanbul ignore next */
  cov_161buh4ef6().s[64]++;
  if (mimetype) {
    /* istanbul ignore next */
    cov_161buh4ef6().b[25][0]++;
    const allowedMimetypes =
    /* istanbul ignore next */
    (cov_161buh4ef6().s[65]++, [
    // Images
    'image/jpeg', 'image/png', 'image/gif', 'image/webp', 'image/svg+xml',
    // Documents
    'application/pdf', 'text/plain', 'text/csv', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'application/vnd.ms-powerpoint', 'application/vnd.openxmlformats-officedocument.presentationml.presentation',
    // Archives
    'application/zip', 'application/x-rar-compressed', 'application/x-7z-compressed',
    // Media
    'video/mp4', 'video/webm', 'audio/mp3', 'audio/wav', 'audio/ogg']);
    /* istanbul ignore next */
    cov_161buh4ef6().s[66]++;
    if (!allowedMimetypes.includes(mimetype)) {
      /* istanbul ignore next */
      cov_161buh4ef6().b[26][0]++;
      cov_161buh4ef6().s[67]++;
      errors.push(`Mimetype '${mimetype}' not allowed`);
    } else
    /* istanbul ignore next */
    {
      cov_161buh4ef6().b[26][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_161buh4ef6().b[25][1]++;
  }
  // Validate file size if provided (max 100MB)
  cov_161buh4ef6().s[68]++;
  if (size !== undefined) {
    /* istanbul ignore next */
    cov_161buh4ef6().b[27][0]++;
    const maxSize =
    /* istanbul ignore next */
    (cov_161buh4ef6().s[69]++, 100 * 1024 * 1024); // 100MB
    /* istanbul ignore next */
    cov_161buh4ef6().s[70]++;
    if (size > maxSize) {
      /* istanbul ignore next */
      cov_161buh4ef6().b[28][0]++;
      cov_161buh4ef6().s[71]++;
      errors.push(`File size too large (max ${maxSize} bytes)`);
    } else
    /* istanbul ignore next */
    {
      cov_161buh4ef6().b[28][1]++;
    }
    cov_161buh4ef6().s[72]++;
    if (size < 0) {
      /* istanbul ignore next */
      cov_161buh4ef6().b[29][0]++;
      cov_161buh4ef6().s[73]++;
      errors.push('Invalid file size');
    } else
    /* istanbul ignore next */
    {
      cov_161buh4ef6().b[29][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_161buh4ef6().b[27][1]++;
  }
  cov_161buh4ef6().s[74]++;
  return {
    isValid: errors.length === 0,
    errors
  };
};
/**
 * Validate URL for security
 */
/* istanbul ignore next */
cov_161buh4ef6().s[75]++;
export const validateUrl = url => {
  /* istanbul ignore next */
  cov_161buh4ef6().f[8]++;
  cov_161buh4ef6().s[76]++;
  try {
    const parsedUrl =
    /* istanbul ignore next */
    (cov_161buh4ef6().s[77]++, new URL(url));
    // Only allow HTTP and HTTPS
    /* istanbul ignore next */
    cov_161buh4ef6().s[78]++;
    if (!['http:', 'https:'].includes(parsedUrl.protocol)) {
      /* istanbul ignore next */
      cov_161buh4ef6().b[30][0]++;
      cov_161buh4ef6().s[79]++;
      return {
        isValid: false,
        error: 'Only HTTP and HTTPS URLs are allowed'
      };
    } else
    /* istanbul ignore next */
    {
      cov_161buh4ef6().b[30][1]++;
    }
    // Block localhost and private IPs for security
    const hostname =
    /* istanbul ignore next */
    (cov_161buh4ef6().s[80]++, parsedUrl.hostname.toLowerCase());
    /* istanbul ignore next */
    cov_161buh4ef6().s[81]++;
    if (
    /* istanbul ignore next */
    (cov_161buh4ef6().b[32][0]++, hostname === 'localhost') ||
    /* istanbul ignore next */
    (cov_161buh4ef6().b[32][1]++, hostname === '127.0.0.1') ||
    /* istanbul ignore next */
    (cov_161buh4ef6().b[32][2]++, hostname === '::1') ||
    /* istanbul ignore next */
    (cov_161buh4ef6().b[32][3]++, hostname.startsWith('192.168.')) ||
    /* istanbul ignore next */
    (cov_161buh4ef6().b[32][4]++, hostname.startsWith('10.')) ||
    /* istanbul ignore next */
    (cov_161buh4ef6().b[32][5]++, hostname.startsWith('172.16.')) ||
    /* istanbul ignore next */
    (cov_161buh4ef6().b[32][6]++, hostname.startsWith('172.17.')) ||
    /* istanbul ignore next */
    (cov_161buh4ef6().b[32][7]++, hostname.startsWith('172.18.')) ||
    /* istanbul ignore next */
    (cov_161buh4ef6().b[32][8]++, hostname.startsWith('172.19.')) ||
    /* istanbul ignore next */
    (cov_161buh4ef6().b[32][9]++, hostname.startsWith('172.2')) ||
    /* istanbul ignore next */
    (cov_161buh4ef6().b[32][10]++, hostname.startsWith('172.30.')) ||
    /* istanbul ignore next */
    (cov_161buh4ef6().b[32][11]++, hostname.startsWith('172.31.'))) {
      /* istanbul ignore next */
      cov_161buh4ef6().b[31][0]++;
      cov_161buh4ef6().s[82]++;
      return {
        isValid: false,
        error: 'Private and localhost URLs are not allowed'
      };
    } else
    /* istanbul ignore next */
    {
      cov_161buh4ef6().b[31][1]++;
    }
    cov_161buh4ef6().s[83]++;
    return {
      isValid: true
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_161buh4ef6().s[84]++;
    return {
      isValid: false,
      error: 'Invalid URL format'
    };
  }
};
/**
 * Generate secure random string
 */
/* istanbul ignore next */
cov_161buh4ef6().s[85]++;
export const generateSecureToken = (length =
/* istanbul ignore next */
(cov_161buh4ef6().b[33][0]++, 32)) => {
  /* istanbul ignore next */
  cov_161buh4ef6().f[9]++;
  cov_161buh4ef6().s[86]++;
  return crypto.randomBytes(length).toString('hex');
};
/**
 * Hash sensitive data
 */
/* istanbul ignore next */
cov_161buh4ef6().s[87]++;
export const hashSensitiveData = (data, salt) => {
  /* istanbul ignore next */
  cov_161buh4ef6().f[10]++;
  const actualSalt =
  /* istanbul ignore next */
  (cov_161buh4ef6().s[88]++,
  /* istanbul ignore next */
  (cov_161buh4ef6().b[34][0]++, salt) ||
  /* istanbul ignore next */
  (cov_161buh4ef6().b[34][1]++, crypto.randomBytes(16).toString('hex')));
  /* istanbul ignore next */
  cov_161buh4ef6().s[89]++;
  return crypto.pbkdf2Sync(data, actualSalt, 10000, 64, 'sha512').toString('hex');
};
/**
 * Validate environment variables
 */
/* istanbul ignore next */
cov_161buh4ef6().s[90]++;
export const validateEnvironment = () => {
  /* istanbul ignore next */
  cov_161buh4ef6().f[11]++;
  const errors =
  /* istanbul ignore next */
  (cov_161buh4ef6().s[91]++, []);
  // Check required environment variables
  const requiredVars =
  /* istanbul ignore next */
  (cov_161buh4ef6().s[92]++, ['CLICKUP_API_TOKEN']);
  /* istanbul ignore next */
  cov_161buh4ef6().s[93]++;
  for (const varName of requiredVars) {
    const value =
    /* istanbul ignore next */
    (cov_161buh4ef6().s[94]++, process.env[varName]);
    /* istanbul ignore next */
    cov_161buh4ef6().s[95]++;
    if (!value) {
      /* istanbul ignore next */
      cov_161buh4ef6().b[35][0]++;
      cov_161buh4ef6().s[96]++;
      errors.push(`Missing required environment variable: ${varName}`);
    } else {
      /* istanbul ignore next */
      cov_161buh4ef6().b[35][1]++;
      cov_161buh4ef6().s[97]++;
      // Validate API token format
      if (varName === 'CLICKUP_API_TOKEN') {
        /* istanbul ignore next */
        cov_161buh4ef6().b[36][0]++;
        const validation =
        /* istanbul ignore next */
        (cov_161buh4ef6().s[98]++, validateApiToken(value));
        /* istanbul ignore next */
        cov_161buh4ef6().s[99]++;
        if (!validation.isValid) {
          /* istanbul ignore next */
          cov_161buh4ef6().b[37][0]++;
          cov_161buh4ef6().s[100]++;
          errors.push(`Invalid ${varName}: ${validation.error}`);
        } else
        /* istanbul ignore next */
        {
          cov_161buh4ef6().b[37][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_161buh4ef6().b[36][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_161buh4ef6().s[101]++;
  return {
    isValid: errors.length === 0,
    errors
  };
};
/**
 * Security headers for HTTP responses
 */
/* istanbul ignore next */
cov_161buh4ef6().s[102]++;
export const getSecurityHeaders = () => {
  /* istanbul ignore next */
  cov_161buh4ef6().f[12]++;
  cov_161buh4ef6().s[103]++;
  return {
    'X-Content-Type-Options': 'nosniff',
    'X-Frame-Options': 'DENY',
    'X-XSS-Protection': '1; mode=block',
    'Strict-Transport-Security': 'max-age=31536000; includeSubDomains',
    'Content-Security-Policy': "default-src 'self'",
    'Referrer-Policy': 'strict-origin-when-cross-origin'
  };
};
/**
 * Log security events
 */
/* istanbul ignore next */
cov_161buh4ef6().s[104]++;
export const logSecurityEvent = (event, details, level =
/* istanbul ignore next */
(cov_161buh4ef6().b[38][0]++, 'info')) => {
  /* istanbul ignore next */
  cov_161buh4ef6().f[13]++;
  const timestamp =
  /* istanbul ignore next */
  (cov_161buh4ef6().s[105]++, new Date().toISOString());
  const logEntry =
  /* istanbul ignore next */
  (cov_161buh4ef6().s[106]++, {
    timestamp,
    event,
    level,
    details: sanitizeInput(details)
  });
  // In production, this should go to a proper logging system
  /* istanbul ignore next */
  cov_161buh4ef6().s[107]++;
  console.error(`[SECURITY ${level.toUpperCase()}] ${timestamp}: ${event}`, logEntry);
};
/**
 * Validate MCP tool parameters
 */
/* istanbul ignore next */
cov_161buh4ef6().s[108]++;
export const validateMcpParameters = (schema, params) => {
  /* istanbul ignore next */
  cov_161buh4ef6().f[14]++;
  cov_161buh4ef6().s[109]++;
  try {
    // Sanitize input first
    const sanitizedParams =
    /* istanbul ignore next */
    (cov_161buh4ef6().s[110]++, sanitizeInput(params));
    // Validate with schema
    const data =
    /* istanbul ignore next */
    (cov_161buh4ef6().s[111]++, schema.parse(sanitizedParams));
    /* istanbul ignore next */
    cov_161buh4ef6().s[112]++;
    return {
      isValid: true,
      data
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_161buh4ef6().s[113]++;
    if (error instanceof z.ZodError) {
      /* istanbul ignore next */
      cov_161buh4ef6().b[39][0]++;
      const errors =
      /* istanbul ignore next */
      (cov_161buh4ef6().s[114]++, error.errors.map(err => {
        /* istanbul ignore next */
        cov_161buh4ef6().f[15]++;
        cov_161buh4ef6().s[115]++;
        return `${err.path.join('.')}: ${err.message}`;
      }));
      /* istanbul ignore next */
      cov_161buh4ef6().s[116]++;
      return {
        isValid: false,
        errors
      };
    } else
    /* istanbul ignore next */
    {
      cov_161buh4ef6().b[39][1]++;
    }
    cov_161buh4ef6().s[117]++;
    return {
      isValid: false,
      errors: [`Validation error: ${error instanceof Error ?
      /* istanbul ignore next */
      (cov_161buh4ef6().b[40][0]++, error.message) :
      /* istanbul ignore next */
      (cov_161buh4ef6().b[40][1]++, 'Unknown error')}`]
    };
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,