{"file":"/Users/peterkrzyzek/Development/clickup-mcp-server/src/tests/setup.ts","mappings":"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","names":[],"sources":["/Users/peterkrzyzek/Development/clickup-mcp-server/src/tests/setup.ts"],"sourcesContent":["import { jest } from '@jest/globals';\n\n// Global test setup\nbeforeAll(() => {\n  // Set test environment variables\n  process.env.NODE_ENV = 'test';\n  process.env.CLICKUP_API_TOKEN = 'pk_test_token_1234567890abcdef';\n  \n  // Mock console methods to reduce noise in tests\n  jest.spyOn(console, 'error').mockImplementation(() => {});\n  jest.spyOn(console, 'warn').mockImplementation(() => {});\n  jest.spyOn(console, 'debug').mockImplementation(() => {});\n  \n  // Set up global test timeout\n  jest.setTimeout(30000);\n});\n\nafterAll(() => {\n  // Restore console methods\n  jest.restoreAllMocks();\n  \n  // Clean up environment\n  delete process.env.CLICKUP_API_TOKEN;\n});\n\nbeforeEach(() => {\n  // Clear all mocks before each test\n  jest.clearAllMocks();\n});\n\nafterEach(() => {\n  // Clean up after each test\n  jest.clearAllTimers();\n});\n\n// Global test utilities\nglobal.testUtils = {\n  // Create mock ClickUp API response\n  createMockApiResponse: (data: any, status = 200) => ({\n    data,\n    status,\n    statusText: 'OK',\n    headers: {},\n    config: {}\n  }),\n  \n  // Create mock error response\n  createMockErrorResponse: (status: number, message: string) => ({\n    response: {\n      status,\n      data: { err: message },\n      headers: {}\n    }\n  }),\n  \n  // Wait for async operations\n  waitFor: (ms: number) => new Promise(resolve => setTimeout(resolve, ms)),\n  \n  // Generate test data\n  generateTestData: {\n    workspace: (overrides = {}) => ({\n      id: '123',\n      name: 'Test Workspace',\n      color: '#7b68ee',\n      avatar: null,\n      members: [],\n      ...overrides\n    }),\n    \n    task: (overrides = {}) => ({\n      id: 'task123',\n      name: 'Test Task',\n      description: 'Test task description',\n      status: {\n        status: 'Open',\n        color: '#d3d3d3',\n        type: 'open'\n      },\n      orderindex: '1.00000000000000000000000000000000',\n      date_created: '1234567890000',\n      date_updated: '1234567890000',\n      date_closed: null,\n      creator: {\n        id: 456,\n        username: 'testuser',\n        color: '#7b68ee',\n        email: 'test@example.com'\n      },\n      assignees: [],\n      watchers: [],\n      checklists: [],\n      tags: [],\n      parent: null,\n      priority: null,\n      due_date: null,\n      start_date: null,\n      points: null,\n      time_estimate: null,\n      custom_fields: [],\n      dependencies: [],\n      linked_tasks: [],\n      team_id: '123',\n      url: 'https://app.clickup.com/t/task123',\n      permission_level: 'create',\n      ...overrides\n    }),\n    \n    webhook: (overrides = {}) => ({\n      id: 'webhook123',\n      webhook: {\n        id: 'webhook123',\n        userid: 456,\n        team_id: 123,\n        endpoint: 'https://example.com/webhook',\n        client_id: 'client123',\n        events: ['taskCreated', 'taskUpdated'],\n        task_events: ['taskCreated', 'taskUpdated'],\n        list_events: [],\n        folder_events: [],\n        space_events: [],\n        goal_events: [],\n        status: 'active',\n        date_created: '2023-01-01T00:00:00.000Z',\n        date_updated: '2023-01-01T00:00:00.000Z',\n        ...overrides\n      }\n    }),\n    \n    webhookPayload: (overrides = {}) => ({\n      id: 90110164070264,\n      hist_id: \"4697736615798917760\",\n      date: 1755803061841,\n      version: {\n        object_type: \"comment\",\n        object_id: \"90110164070264\",\n        workspace_id: 14168111,\n        operation: \"c\",\n        data: {\n          context: {\n            root_parent_type: 1,\n            is_chat: false,\n            audit_context: {\n              userid: 38366580,\n              current_time: 1755803061674,\n              route: \"*\"\n            },\n            originating_service: \"publicapi\"\n          },\n          relationships: [\n            {\n              type: \"comment-author\",\n              object_type: \"user\",\n              object_id: 38366580,\n              workspace_id: \"14168111\"\n            },\n            {\n              type: \"comment-parent\",\n              object_type: \"task\",\n              object_id: \"868f9p6ad\",\n              workspace_id: \"14168111\"\n            }\n          ],\n          changes: [\n            {\n              field: \"date_created\",\n              after: 1755803061841\n            }\n          ]\n        },\n        master_id: 13,\n        version: 1755803061879000,\n        deleted: false,\n        traceparent: \"6041334444293036127\",\n        date_created: 1755803061879,\n        date_updated: 1755803061879,\n        event_publish_time: 1755803061900\n      },\n      ...overrides\n    })\n  }\n};\n\n// Type declarations for global utilities\ndeclare global {\n  var testUtils: {\n    createMockApiResponse: (data: any, status?: number) => any;\n    createMockErrorResponse: (status: number, message: string) => any;\n    waitFor: (ms: number) => Promise<void>;\n    generateTestData: {\n      workspace: (overrides?: any) => any;\n      task: (overrides?: any) => any;\n      webhook: (overrides?: any) => any;\n      webhookPayload: (overrides?: any) => any;\n    };\n  };\n}\n"],"version":3}