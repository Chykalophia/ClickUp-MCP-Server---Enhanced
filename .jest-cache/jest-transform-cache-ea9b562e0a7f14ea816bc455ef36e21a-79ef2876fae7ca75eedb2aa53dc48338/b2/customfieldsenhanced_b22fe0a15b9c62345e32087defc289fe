1f95068ba7f8b9168a5a3f5e9a169181
/* istanbul ignore next */
function cov_hnisn3x4m() {
  var path = "/Users/peterkrzyzek/Development/clickup-mcp-server/src/clickup-client/custom-fields-enhanced.ts";
  var hash = "3691fe292434f4ea252a289e0c11c02d9ddd42fc";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/peterkrzyzek/Development/clickup-mcp-server/src/clickup-client/custom-fields-enhanced.ts",
    statementMap: {
      "0": {
        start: {
          line: 7,
          column: 8
        },
        end: {
          line: 7,
          column: 29
        }
      },
      "1": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 60
        }
      },
      "2": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 15,
          column: 10
        }
      },
      "3": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 35,
          column: 9
        }
      },
      "4": {
        start: {
          line: 25,
          column: 24
        },
        end: {
          line: 25,
          column: 77
        }
      },
      "5": {
        start: {
          line: 26,
          column: 29
        },
        end: {
          line: 29,
          column: 14
        }
      },
      "6": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 30,
          column: 46
        }
      },
      "7": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 33,
          column: 70
        }
      },
      "8": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 34,
          column: 92
        }
      },
      "9": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 52,
          column: 9
        }
      },
      "10": {
        start: {
          line: 42,
          column: 24
        },
        end: {
          line: 42,
          column: 81
        }
      },
      "11": {
        start: {
          line: 43,
          column: 29
        },
        end: {
          line: 46,
          column: 14
        }
      },
      "12": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 47,
          column: 46
        }
      },
      "13": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 50,
          column: 72
        }
      },
      "14": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 51,
          column: 96
        }
      },
      "15": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 69,
          column: 9
        }
      },
      "16": {
        start: {
          line: 59,
          column: 24
        },
        end: {
          line: 59,
          column: 79
        }
      },
      "17": {
        start: {
          line: 60,
          column: 29
        },
        end: {
          line: 63,
          column: 14
        }
      },
      "18": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 64,
          column: 46
        }
      },
      "19": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 67,
          column: 71
        }
      },
      "20": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 94
        }
      },
      "21": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 85,
          column: 9
        }
      },
      "22": {
        start: {
          line: 76,
          column: 24
        },
        end: {
          line: 76,
          column: 77
        }
      },
      "23": {
        start: {
          line: 77,
          column: 29
        },
        end: {
          line: 79,
          column: 14
        }
      },
      "24": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 33
        }
      },
      "25": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 70
        }
      },
      "26": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 93
        }
      },
      "27": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 101,
          column: 9
        }
      },
      "28": {
        start: {
          line: 92,
          column: 24
        },
        end: {
          line: 92,
          column: 81
        }
      },
      "29": {
        start: {
          line: 93,
          column: 29
        },
        end: {
          line: 95,
          column: 14
        }
      },
      "30": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 96,
          column: 33
        }
      },
      "31": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 99,
          column: 72
        }
      },
      "32": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 100,
          column: 97
        }
      },
      "33": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 117,
          column: 9
        }
      },
      "34": {
        start: {
          line: 108,
          column: 24
        },
        end: {
          line: 108,
          column: 79
        }
      },
      "35": {
        start: {
          line: 109,
          column: 29
        },
        end: {
          line: 111,
          column: 14
        }
      },
      "36": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 112,
          column: 33
        }
      },
      "37": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 115,
          column: 71
        }
      },
      "38": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 116,
          column: 95
        }
      },
      "39": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 133,
          column: 9
        }
      },
      "40": {
        start: {
          line: 124,
          column: 24
        },
        end: {
          line: 124,
          column: 73
        }
      },
      "41": {
        start: {
          line: 125,
          column: 29
        },
        end: {
          line: 127,
          column: 14
        }
      },
      "42": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 128,
          column: 33
        }
      },
      "43": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 131,
          column: 65
        }
      },
      "44": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 132,
          column: 86
        }
      },
      "45": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 148,
          column: 9
        }
      },
      "46": {
        start: {
          line: 140,
          column: 24
        },
        end: {
          line: 140,
          column: 73
        }
      },
      "47": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 143,
          column: 15
        }
      },
      "48": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 146,
          column: 65
        }
      },
      "49": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 147,
          column: 86
        }
      },
      "50": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 166,
          column: 9
        }
      },
      "51": {
        start: {
          line: 158,
          column: 24
        },
        end: {
          line: 158,
          column: 88
        }
      },
      "52": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 161,
          column: 15
        }
      },
      "53": {
        start: {
          line: 164,
          column: 12
        },
        end: {
          line: 164,
          column: 70
        }
      },
      "54": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 165,
          column: 115
        }
      },
      "55": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 181,
          column: 9
        }
      },
      "56": {
        start: {
          line: 173,
          column: 24
        },
        end: {
          line: 173,
          column: 88
        }
      },
      "57": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 176,
          column: 15
        }
      },
      "58": {
        start: {
          line: 179,
          column: 12
        },
        end: {
          line: 179,
          column: 71
        }
      },
      "59": {
        start: {
          line: 180,
          column: 12
        },
        end: {
          line: 180,
          column: 118
        }
      },
      "60": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 209,
          column: 9
        }
      },
      "61": {
        start: {
          line: 189,
          column: 28
        },
        end: {
          line: 189,
          column: 75
        }
      },
      "62": {
        start: {
          line: 190,
          column: 29
        },
        end: {
          line: 192,
          column: 14
        }
      },
      "63": {
        start: {
          line: 193,
          column: 25
        },
        end: {
          line: 193,
          column: 38
        }
      },
      "64": {
        start: {
          line: 194,
          column: 32
        },
        end: {
          line: 194,
          column: 89
        }
      },
      "65": {
        start: {
          line: 194,
          column: 68
        },
        end: {
          line: 194,
          column: 88
        }
      },
      "66": {
        start: {
          line: 195,
          column: 12
        },
        end: {
          line: 197,
          column: 13
        }
      },
      "67": {
        start: {
          line: 196,
          column: 16
        },
        end: {
          line: 196,
          column: 87
        }
      },
      "68": {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 204,
          column: 14
        }
      },
      "69": {
        start: {
          line: 207,
          column: 12
        },
        end: {
          line: 207,
          column: 70
        }
      },
      "70": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 208,
          column: 115
        }
      },
      "71": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 234,
          column: 9
        }
      },
      "72": {
        start: {
          line: 216,
          column: 28
        },
        end: {
          line: 216,
          column: 75
        }
      },
      "73": {
        start: {
          line: 217,
          column: 29
        },
        end: {
          line: 219,
          column: 14
        }
      },
      "74": {
        start: {
          line: 220,
          column: 25
        },
        end: {
          line: 220,
          column: 38
        }
      },
      "75": {
        start: {
          line: 221,
          column: 12
        },
        end: {
          line: 229,
          column: 22
        }
      },
      "76": {
        start: {
          line: 221,
          column: 55
        },
        end: {
          line: 229,
          column: 13
        }
      },
      "77": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 232,
          column: 76
        }
      },
      "78": {
        start: {
          line: 233,
          column: 12
        },
        end: {
          line: 233,
          column: 98
        }
      },
      "79": {
        start: {
          line: 240,
          column: 8
        },
        end: {
          line: 267,
          column: 9
        }
      },
      "80": {
        start: {
          line: 241,
          column: 28
        },
        end: {
          line: 241,
          column: 30
        }
      },
      "81": {
        start: {
          line: 244,
          column: 12
        },
        end: {
          line: 261,
          column: 13
        }
      },
      "82": {
        start: {
          line: 245,
          column: 16
        },
        end: {
          line: 260,
          column: 17
        }
      },
      "83": {
        start: {
          line: 246,
          column: 20
        },
        end: {
          line: 246,
          column: 76
        }
      },
      "84": {
        start: {
          line: 247,
          column: 20
        },
        end: {
          line: 251,
          column: 23
        }
      },
      "85": {
        start: {
          line: 254,
          column: 20
        },
        end: {
          line: 259,
          column: 23
        }
      },
      "86": {
        start: {
          line: 262,
          column: 12
        },
        end: {
          line: 262,
          column: 27
        }
      },
      "87": {
        start: {
          line: 265,
          column: 12
        },
        end: {
          line: 265,
          column: 76
        }
      },
      "88": {
        start: {
          line: 266,
          column: 12
        },
        end: {
          line: 266,
          column: 103
        }
      },
      "89": {
        start: {
          line: 276,
          column: 8
        },
        end: {
          line: 310,
          column: 9
        }
      },
      "90": {
        start: {
          line: 279,
          column: 16
        },
        end: {
          line: 279,
          column: 49
        }
      },
      "91": {
        start: {
          line: 282,
          column: 16
        },
        end: {
          line: 282,
          column: 66
        }
      },
      "92": {
        start: {
          line: 284,
          column: 16
        },
        end: {
          line: 284,
          column: 62
        }
      },
      "93": {
        start: {
          line: 286,
          column: 16
        },
        end: {
          line: 286,
          column: 50
        }
      },
      "94": {
        start: {
          line: 288,
          column: 16
        },
        end: {
          line: 288,
          column: 75
        }
      },
      "95": {
        start: {
          line: 290,
          column: 16
        },
        end: {
          line: 290,
          column: 77
        }
      },
      "96": {
        start: {
          line: 292,
          column: 16
        },
        end: {
          line: 292,
          column: 69
        }
      },
      "97": {
        start: {
          line: 294,
          column: 16
        },
        end: {
          line: 294,
          column: 82
        }
      },
      "98": {
        start: {
          line: 294,
          column: 64
        },
        end: {
          line: 294,
          column: 80
        }
      },
      "99": {
        start: {
          line: 296,
          column: 16
        },
        end: {
          line: 296,
          column: 120
        }
      },
      "100": {
        start: {
          line: 296,
          column: 64
        },
        end: {
          line: 296,
          column: 118
        }
      },
      "101": {
        start: {
          line: 296,
          column: 105
        },
        end: {
          line: 296,
          column: 117
        }
      },
      "102": {
        start: {
          line: 298,
          column: 16
        },
        end: {
          line: 299,
          column: 74
        }
      },
      "103": {
        start: {
          line: 301,
          column: 49
        },
        end: {
          line: 301,
          column: 66
        }
      },
      "104": {
        start: {
          line: 302,
          column: 16
        },
        end: {
          line: 302,
          column: 83
        }
      },
      "105": {
        start: {
          line: 304,
          column: 16
        },
        end: {
          line: 306,
          column: 17
        }
      },
      "106": {
        start: {
          line: 305,
          column: 20
        },
        end: {
          line: 305,
          column: 91
        }
      },
      "107": {
        start: {
          line: 305,
          column: 68
        },
        end: {
          line: 305,
          column: 89
        }
      },
      "108": {
        start: {
          line: 307,
          column: 16
        },
        end: {
          line: 307,
          column: 49
        }
      },
      "109": {
        start: {
          line: 309,
          column: 16
        },
        end: {
          line: 309,
          column: 28
        }
      },
      "110": {
        start: {
          line: 316,
          column: 8
        },
        end: {
          line: 370,
          column: 9
        }
      },
      "111": {
        start: {
          line: 319,
          column: 16
        },
        end: {
          line: 322,
          column: 18
        }
      },
      "112": {
        start: {
          line: 324,
          column: 16
        },
        end: {
          line: 327,
          column: 18
        }
      },
      "113": {
        start: {
          line: 329,
          column: 16
        },
        end: {
          line: 333,
          column: 18
        }
      },
      "114": {
        start: {
          line: 335,
          column: 16
        },
        end: {
          line: 337,
          column: 18
        }
      },
      "115": {
        start: {
          line: 340,
          column: 16
        },
        end: {
          line: 342,
          column: 18
        }
      },
      "116": {
        start: {
          line: 344,
          column: 16
        },
        end: {
          line: 346,
          column: 18
        }
      },
      "117": {
        start: {
          line: 350,
          column: 16
        },
        end: {
          line: 352,
          column: 18
        }
      },
      "118": {
        start: {
          line: 354,
          column: 16
        },
        end: {
          line: 357,
          column: 18
        }
      },
      "119": {
        start: {
          line: 359,
          column: 16
        },
        end: {
          line: 363,
          column: 18
        }
      },
      "120": {
        start: {
          line: 365,
          column: 16
        },
        end: {
          line: 367,
          column: 18
        }
      },
      "121": {
        start: {
          line: 369,
          column: 16
        },
        end: {
          line: 369,
          column: 26
        }
      },
      "122": {
        start: {
          line: 376,
          column: 8
        },
        end: {
          line: 382,
          column: 9
        }
      },
      "123": {
        start: {
          line: 377,
          column: 12
        },
        end: {
          line: 377,
          column: 28
        }
      },
      "124": {
        start: {
          line: 378,
          column: 12
        },
        end: {
          line: 378,
          column: 24
        }
      },
      "125": {
        start: {
          line: 381,
          column: 12
        },
        end: {
          line: 381,
          column: 25
        }
      },
      "126": {
        start: {
          line: 385,
          column: 27
        },
        end: {
          line: 385,
          column: 55
        }
      },
      "127": {
        start: {
          line: 386,
          column: 8
        },
        end: {
          line: 386,
          column: 38
        }
      },
      "128": {
        start: {
          line: 389,
          column: 8
        },
        end: {
          line: 408,
          column: 9
        }
      },
      "129": {
        start: {
          line: 390,
          column: 27
        },
        end: {
          line: 390,
          column: 49
        }
      },
      "130": {
        start: {
          line: 391,
          column: 28
        },
        end: {
          line: 391,
          column: 74
        }
      },
      "131": {
        start: {
          line: 392,
          column: 12
        },
        end: {
          line: 407,
          column: 13
        }
      },
      "132": {
        start: {
          line: 394,
          column: 20
        },
        end: {
          line: 394,
          column: 81
        }
      },
      "133": {
        start: {
          line: 396,
          column: 20
        },
        end: {
          line: 396,
          column: 92
        }
      },
      "134": {
        start: {
          line: 398,
          column: 20
        },
        end: {
          line: 398,
          column: 99
        }
      },
      "135": {
        start: {
          line: 400,
          column: 20
        },
        end: {
          line: 400,
          column: 84
        }
      },
      "136": {
        start: {
          line: 402,
          column: 20
        },
        end: {
          line: 402,
          column: 93
        }
      },
      "137": {
        start: {
          line: 404,
          column: 20
        },
        end: {
          line: 404,
          column: 84
        }
      },
      "138": {
        start: {
          line: 406,
          column: 20
        },
        end: {
          line: 406,
          column: 63
        }
      },
      "139": {
        start: {
          line: 409,
          column: 8
        },
        end: {
          line: 409,
          column: 76
        }
      },
      "140": {
        start: {
          line: 412,
          column: 48
        },
        end: {
          line: 414,
          column: 1
        }
      },
      "141": {
        start: {
          line: 413,
          column: 4
        },
        end: {
          line: 413,
          column: 50
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 6,
            column: 4
          },
          end: {
            line: 6,
            column: 5
          }
        },
        loc: {
          start: {
            line: 6,
            column: 24
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 5
          }
        },
        loc: {
          start: {
            line: 10,
            column: 17
          },
          end: {
            line: 16,
            column: 5
          }
        },
        line: 10
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        },
        loc: {
          start: {
            line: 23,
            column: 46
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 23
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        loc: {
          start: {
            line: 40,
            column: 50
          },
          end: {
            line: 53,
            column: 5
          }
        },
        line: 40
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        },
        loc: {
          start: {
            line: 57,
            column: 48
          },
          end: {
            line: 70,
            column: 5
          }
        },
        line: 57
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 74,
            column: 4
          },
          end: {
            line: 74,
            column: 5
          }
        },
        loc: {
          start: {
            line: 74,
            column: 48
          },
          end: {
            line: 86,
            column: 5
          }
        },
        line: 74
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 90,
            column: 4
          },
          end: {
            line: 90,
            column: 5
          }
        },
        loc: {
          start: {
            line: 90,
            column: 52
          },
          end: {
            line: 102,
            column: 5
          }
        },
        line: 90
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 106,
            column: 4
          },
          end: {
            line: 106,
            column: 5
          }
        },
        loc: {
          start: {
            line: 106,
            column: 50
          },
          end: {
            line: 118,
            column: 5
          }
        },
        line: 106
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 122,
            column: 4
          },
          end: {
            line: 122,
            column: 5
          }
        },
        loc: {
          start: {
            line: 122,
            column: 45
          },
          end: {
            line: 134,
            column: 5
          }
        },
        line: 122
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 138,
            column: 4
          },
          end: {
            line: 138,
            column: 5
          }
        },
        loc: {
          start: {
            line: 138,
            column: 37
          },
          end: {
            line: 149,
            column: 5
          }
        },
        line: 138
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 156,
            column: 4
          },
          end: {
            line: 156,
            column: 5
          }
        },
        loc: {
          start: {
            line: 156,
            column: 54
          },
          end: {
            line: 167,
            column: 5
          }
        },
        line: 156
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 171,
            column: 4
          },
          end: {
            line: 171,
            column: 5
          }
        },
        loc: {
          start: {
            line: 171,
            column: 50
          },
          end: {
            line: 182,
            column: 5
          }
        },
        line: 171
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 186,
            column: 4
          },
          end: {
            line: 186,
            column: 5
          }
        },
        loc: {
          start: {
            line: 186,
            column: 47
          },
          end: {
            line: 210,
            column: 5
          }
        },
        line: 186
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 194,
            column: 57
          },
          end: {
            line: 194,
            column: 58
          }
        },
        loc: {
          start: {
            line: 194,
            column: 68
          },
          end: {
            line: 194,
            column: 88
          }
        },
        line: 194
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 214,
            column: 4
          },
          end: {
            line: 214,
            column: 5
          }
        },
        loc: {
          start: {
            line: 214,
            column: 43
          },
          end: {
            line: 235,
            column: 5
          }
        },
        line: 214
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 221,
            column: 43
          },
          end: {
            line: 221,
            column: 44
          }
        },
        loc: {
          start: {
            line: 221,
            column: 55
          },
          end: {
            line: 229,
            column: 13
          }
        },
        line: 221
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 239,
            column: 4
          },
          end: {
            line: 239,
            column: 5
          }
        },
        loc: {
          start: {
            line: 239,
            column: 56
          },
          end: {
            line: 268,
            column: 5
          }
        },
        line: 239
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 275,
            column: 4
          },
          end: {
            line: 275,
            column: 5
          }
        },
        loc: {
          start: {
            line: 275,
            column: 37
          },
          end: {
            line: 311,
            column: 5
          }
        },
        line: 275
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 294,
            column: 55
          },
          end: {
            line: 294,
            column: 56
          }
        },
        loc: {
          start: {
            line: 294,
            column: 64
          },
          end: {
            line: 294,
            column: 80
          }
        },
        line: 294
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 296,
            column: 59
          },
          end: {
            line: 296,
            column: 60
          }
        },
        loc: {
          start: {
            line: 296,
            column: 64
          },
          end: {
            line: 296,
            column: 118
          }
        },
        line: 296
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 296,
            column: 96
          },
          end: {
            line: 296,
            column: 97
          }
        },
        loc: {
          start: {
            line: 296,
            column: 105
          },
          end: {
            line: 296,
            column: 117
          }
        },
        line: 296
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 305,
            column: 63
          },
          end: {
            line: 305,
            column: 64
          }
        },
        loc: {
          start: {
            line: 305,
            column: 68
          },
          end: {
            line: 305,
            column: 89
          }
        },
        line: 305
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 315,
            column: 4
          },
          end: {
            line: 315,
            column: 5
          }
        },
        loc: {
          start: {
            line: 315,
            column: 31
          },
          end: {
            line: 371,
            column: 5
          }
        },
        line: 315
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 375,
            column: 4
          },
          end: {
            line: 375,
            column: 5
          }
        },
        loc: {
          start: {
            line: 375,
            column: 23
          },
          end: {
            line: 383,
            column: 5
          }
        },
        line: 375
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 384,
            column: 4
          },
          end: {
            line: 384,
            column: 5
          }
        },
        loc: {
          start: {
            line: 384,
            column: 24
          },
          end: {
            line: 387,
            column: 5
          }
        },
        line: 384
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 388,
            column: 4
          },
          end: {
            line: 388,
            column: 5
          }
        },
        loc: {
          start: {
            line: 388,
            column: 32
          },
          end: {
            line: 410,
            column: 5
          }
        },
        line: 388
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 412,
            column: 48
          },
          end: {
            line: 412,
            column: 49
          }
        },
        loc: {
          start: {
            line: 412,
            column: 60
          },
          end: {
            line: 414,
            column: 1
          }
        },
        line: 412
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 8,
            column: 24
          },
          end: {
            line: 8,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 24
          },
          end: {
            line: 8,
            column: 53
          }
        }, {
          start: {
            line: 8,
            column: 57
          },
          end: {
            line: 8,
            column: 59
          }
        }],
        line: 8
      },
      "1": {
        loc: {
          start: {
            line: 30,
            column: 19
          },
          end: {
            line: 30,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 19
          },
          end: {
            line: 30,
            column: 39
          }
        }, {
          start: {
            line: 30,
            column: 43
          },
          end: {
            line: 30,
            column: 45
          }
        }],
        line: 30
      },
      "2": {
        loc: {
          start: {
            line: 47,
            column: 19
          },
          end: {
            line: 47,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 19
          },
          end: {
            line: 47,
            column: 39
          }
        }, {
          start: {
            line: 47,
            column: 43
          },
          end: {
            line: 47,
            column: 45
          }
        }],
        line: 47
      },
      "3": {
        loc: {
          start: {
            line: 64,
            column: 19
          },
          end: {
            line: 64,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 64,
            column: 19
          },
          end: {
            line: 64,
            column: 39
          }
        }, {
          start: {
            line: 64,
            column: 43
          },
          end: {
            line: 64,
            column: 45
          }
        }],
        line: 64
      },
      "4": {
        loc: {
          start: {
            line: 195,
            column: 12
          },
          end: {
            line: 197,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 195,
            column: 12
          },
          end: {
            line: 197,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 195
      },
      "5": {
        loc: {
          start: {
            line: 221,
            column: 19
          },
          end: {
            line: 229,
            column: 21
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 221,
            column: 19
          },
          end: {
            line: 229,
            column: 15
          }
        }, {
          start: {
            line: 229,
            column: 19
          },
          end: {
            line: 229,
            column: 21
          }
        }],
        line: 221
      },
      "6": {
        loc: {
          start: {
            line: 276,
            column: 8
          },
          end: {
            line: 310,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 277,
            column: 12
          },
          end: {
            line: 277,
            column: 24
          }
        }, {
          start: {
            line: 278,
            column: 12
          },
          end: {
            line: 279,
            column: 49
          }
        }, {
          start: {
            line: 280,
            column: 12
          },
          end: {
            line: 280,
            column: 26
          }
        }, {
          start: {
            line: 281,
            column: 12
          },
          end: {
            line: 282,
            column: 66
          }
        }, {
          start: {
            line: 283,
            column: 12
          },
          end: {
            line: 284,
            column: 62
          }
        }, {
          start: {
            line: 285,
            column: 12
          },
          end: {
            line: 286,
            column: 50
          }
        }, {
          start: {
            line: 287,
            column: 12
          },
          end: {
            line: 288,
            column: 75
          }
        }, {
          start: {
            line: 289,
            column: 12
          },
          end: {
            line: 290,
            column: 77
          }
        }, {
          start: {
            line: 291,
            column: 12
          },
          end: {
            line: 292,
            column: 69
          }
        }, {
          start: {
            line: 293,
            column: 12
          },
          end: {
            line: 294,
            column: 82
          }
        }, {
          start: {
            line: 295,
            column: 12
          },
          end: {
            line: 296,
            column: 120
          }
        }, {
          start: {
            line: 297,
            column: 12
          },
          end: {
            line: 299,
            column: 74
          }
        }, {
          start: {
            line: 300,
            column: 12
          },
          end: {
            line: 302,
            column: 83
          }
        }, {
          start: {
            line: 303,
            column: 12
          },
          end: {
            line: 307,
            column: 49
          }
        }, {
          start: {
            line: 308,
            column: 12
          },
          end: {
            line: 309,
            column: 28
          }
        }],
        line: 276
      },
      "7": {
        loc: {
          start: {
            line: 282,
            column: 23
          },
          end: {
            line: 282,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 282,
            column: 23
          },
          end: {
            line: 282,
            column: 48
          }
        }, {
          start: {
            line: 282,
            column: 52
          },
          end: {
            line: 282,
            column: 65
          }
        }],
        line: 282
      },
      "8": {
        loc: {
          start: {
            line: 284,
            column: 23
          },
          end: {
            line: 284,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 284,
            column: 23
          },
          end: {
            line: 284,
            column: 48
          }
        }, {
          start: {
            line: 284,
            column: 52
          },
          end: {
            line: 284,
            column: 61
          }
        }],
        line: 284
      },
      "9": {
        loc: {
          start: {
            line: 288,
            column: 23
          },
          end: {
            line: 288,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 288,
            column: 23
          },
          end: {
            line: 288,
            column: 48
          }
        }, {
          start: {
            line: 288,
            column: 52
          },
          end: {
            line: 288,
            column: 74
          }
        }],
        line: 288
      },
      "10": {
        loc: {
          start: {
            line: 290,
            column: 23
          },
          end: {
            line: 290,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 290,
            column: 23
          },
          end: {
            line: 290,
            column: 48
          }
        }, {
          start: {
            line: 290,
            column: 52
          },
          end: {
            line: 290,
            column: 76
          }
        }],
        line: 290
      },
      "11": {
        loc: {
          start: {
            line: 292,
            column: 23
          },
          end: {
            line: 292,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 292,
            column: 23
          },
          end: {
            line: 292,
            column: 48
          }
        }, {
          start: {
            line: 292,
            column: 52
          },
          end: {
            line: 292,
            column: 68
          }
        }],
        line: 292
      },
      "12": {
        loc: {
          start: {
            line: 296,
            column: 23
          },
          end: {
            line: 296,
            column: 119
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 296,
            column: 23
          },
          end: {
            line: 296,
            column: 43
          }
        }, {
          start: {
            line: 296,
            column: 47
          },
          end: {
            line: 296,
            column: 119
          }
        }],
        line: 296
      },
      "13": {
        loc: {
          start: {
            line: 298,
            column: 23
          },
          end: {
            line: 299,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 298,
            column: 23
          },
          end: {
            line: 298,
            column: 48
          }
        }, {
          start: {
            line: 299,
            column: 20
          },
          end: {
            line: 299,
            column: 30
          }
        }, {
          start: {
            line: 299,
            column: 34
          },
          end: {
            line: 299,
            column: 73
          }
        }],
        line: 298
      },
      "14": {
        loc: {
          start: {
            line: 299,
            column: 44
          },
          end: {
            line: 299,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 299,
            column: 44
          },
          end: {
            line: 299,
            column: 67
          }
        }, {
          start: {
            line: 299,
            column: 71
          },
          end: {
            line: 299,
            column: 72
          }
        }],
        line: 299
      },
      "15": {
        loc: {
          start: {
            line: 301,
            column: 24
          },
          end: {
            line: 301,
            column: 33
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 301,
            column: 32
          },
          end: {
            line: 301,
            column: 33
          }
        }],
        line: 301
      },
      "16": {
        loc: {
          start: {
            line: 301,
            column: 35
          },
          end: {
            line: 301,
            column: 44
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 301,
            column: 41
          },
          end: {
            line: 301,
            column: 44
          }
        }],
        line: 301
      },
      "17": {
        loc: {
          start: {
            line: 302,
            column: 23
          },
          end: {
            line: 302,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 302,
            column: 23
          },
          end: {
            line: 302,
            column: 48
          }
        }, {
          start: {
            line: 302,
            column: 52
          },
          end: {
            line: 302,
            column: 66
          }
        }, {
          start: {
            line: 302,
            column: 70
          },
          end: {
            line: 302,
            column: 82
          }
        }],
        line: 302
      },
      "18": {
        loc: {
          start: {
            line: 304,
            column: 16
          },
          end: {
            line: 306,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 304,
            column: 16
          },
          end: {
            line: 306,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 304
      },
      "19": {
        loc: {
          start: {
            line: 305,
            column: 27
          },
          end: {
            line: 305,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 305,
            column: 27
          },
          end: {
            line: 305,
            column: 47
          }
        }, {
          start: {
            line: 305,
            column: 51
          },
          end: {
            line: 305,
            column: 90
          }
        }],
        line: 305
      },
      "20": {
        loc: {
          start: {
            line: 316,
            column: 8
          },
          end: {
            line: 370,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 317,
            column: 12
          },
          end: {
            line: 317,
            column: 24
          }
        }, {
          start: {
            line: 318,
            column: 12
          },
          end: {
            line: 322,
            column: 18
          }
        }, {
          start: {
            line: 323,
            column: 12
          },
          end: {
            line: 327,
            column: 18
          }
        }, {
          start: {
            line: 328,
            column: 12
          },
          end: {
            line: 333,
            column: 18
          }
        }, {
          start: {
            line: 334,
            column: 12
          },
          end: {
            line: 337,
            column: 18
          }
        }, {
          start: {
            line: 338,
            column: 12
          },
          end: {
            line: 338,
            column: 29
          }
        }, {
          start: {
            line: 339,
            column: 12
          },
          end: {
            line: 342,
            column: 18
          }
        }, {
          start: {
            line: 343,
            column: 12
          },
          end: {
            line: 346,
            column: 18
          }
        }, {
          start: {
            line: 347,
            column: 12
          },
          end: {
            line: 347,
            column: 23
          }
        }, {
          start: {
            line: 348,
            column: 12
          },
          end: {
            line: 348,
            column: 25
          }
        }, {
          start: {
            line: 349,
            column: 12
          },
          end: {
            line: 352,
            column: 18
          }
        }, {
          start: {
            line: 353,
            column: 12
          },
          end: {
            line: 357,
            column: 18
          }
        }, {
          start: {
            line: 358,
            column: 12
          },
          end: {
            line: 363,
            column: 18
          }
        }, {
          start: {
            line: 364,
            column: 12
          },
          end: {
            line: 367,
            column: 18
          }
        }, {
          start: {
            line: 368,
            column: 12
          },
          end: {
            line: 369,
            column: 26
          }
        }],
        line: 316
      },
      "21": {
        loc: {
          start: {
            line: 389,
            column: 8
          },
          end: {
            line: 408,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 389,
            column: 8
          },
          end: {
            line: 408,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 389
      },
      "22": {
        loc: {
          start: {
            line: 391,
            column: 28
          },
          end: {
            line: 391,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 391,
            column: 28
          },
          end: {
            line: 391,
            column: 57
          }
        }, {
          start: {
            line: 391,
            column: 61
          },
          end: {
            line: 391,
            column: 74
          }
        }],
        line: 391
      },
      "23": {
        loc: {
          start: {
            line: 392,
            column: 12
          },
          end: {
            line: 407,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 393,
            column: 16
          },
          end: {
            line: 394,
            column: 81
          }
        }, {
          start: {
            line: 395,
            column: 16
          },
          end: {
            line: 396,
            column: 92
          }
        }, {
          start: {
            line: 397,
            column: 16
          },
          end: {
            line: 398,
            column: 99
          }
        }, {
          start: {
            line: 399,
            column: 16
          },
          end: {
            line: 400,
            column: 84
          }
        }, {
          start: {
            line: 401,
            column: 16
          },
          end: {
            line: 402,
            column: 93
          }
        }, {
          start: {
            line: 403,
            column: 16
          },
          end: {
            line: 404,
            column: 84
          }
        }, {
          start: {
            line: 405,
            column: 16
          },
          end: {
            line: 406,
            column: 63
          }
        }],
        line: 392
      },
      "24": {
        loc: {
          start: {
            line: 409,
            column: 40
          },
          end: {
            line: 409,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 409,
            column: 40
          },
          end: {
            line: 409,
            column: 53
          }
        }, {
          start: {
            line: 409,
            column: 57
          },
          end: {
            line: 409,
            column: 72
          }
        }],
        line: 409
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0],
      "17": [0, 0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0, 0, 0, 0, 0, 0],
      "24": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/peterkrzyzek/Development/clickup-mcp-server/src/clickup-client/custom-fields-enhanced.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/peterkrzyzek/Development/clickup-mcp-server/src/clickup-client/custom-fields-enhanced.ts"],
      sourcesContent: ["import { ClickUpClient } from './index.js';\nimport axios from 'axios';\n\n// ========================================\n// CUSTOM FIELD TYPE DEFINITIONS\n// ========================================\n\nexport type CustomFieldType = \n  | 'text' | 'textarea'\n  | 'number' | 'currency'\n  | 'date'\n  | 'drop_down' | 'labels'\n  | 'checkbox'\n  | 'url' | 'email' | 'phone'\n  | 'rating' | 'progress'\n  | 'task_relationship';\n\n// Base custom field interface\nexport interface BaseCustomField {\n  id: string;\n  name: string;\n  type: CustomFieldType;\n  date_created: string;\n  hide_from_guests: boolean;\n  required: boolean;\n  type_config: Record<string, any>;\n}\n\n// Text fields\nexport interface ShortTextField extends BaseCustomField {\n  type: 'text';\n  type_config: {\n    default?: string;\n    placeholder?: string;\n  };\n}\n\nexport interface LongTextField extends BaseCustomField {\n  type: 'textarea';\n  type_config: {\n    default?: string;\n    placeholder?: string;\n  };\n}\n\n// Number fields\nexport interface NumberField extends BaseCustomField {\n  type: 'number';\n  type_config: {\n    default?: number;\n    precision?: number; // 0-8 decimal places\n  };\n}\n\nexport interface CurrencyField extends BaseCustomField {\n  type: 'currency';\n  type_config: {\n    default?: number;\n    precision?: number;\n    currency_type?: string; // USD, EUR, GBP, etc.\n  };\n}\n\n// Date fields\nexport interface DateField extends BaseCustomField {\n  type: 'date';\n  type_config: {\n    default?: number; // Unix timestamp\n    include_time?: boolean;\n  };\n}\n\n// Selection fields\nexport interface DropdownOption {\n  id: string;\n  name: string;\n  color?: string;\n  orderindex: number;\n}\n\nexport interface DropdownField extends BaseCustomField {\n  type: 'drop_down';\n  type_config: {\n    default?: number; // option index\n    options: DropdownOption[];\n  };\n}\n\nexport interface LabelsField extends BaseCustomField {\n  type: 'labels';\n  type_config: {\n    options: DropdownOption[];\n  };\n}\n\n// Boolean fields\nexport interface CheckboxField extends BaseCustomField {\n  type: 'checkbox';\n  type_config: {\n    default?: boolean;\n  };\n}\n\n// Contact fields\nexport interface URLField extends BaseCustomField {\n  type: 'url';\n  type_config: {\n    default?: string;\n    placeholder?: string;\n  };\n}\n\nexport interface EmailField extends BaseCustomField {\n  type: 'email';\n  type_config: {\n    default?: string;\n    placeholder?: string;\n  };\n}\n\nexport interface PhoneField extends BaseCustomField {\n  type: 'phone';\n  type_config: {\n    default?: string;\n    placeholder?: string;\n  };\n}\n\n// Rating fields\nexport interface RatingField extends BaseCustomField {\n  type: 'rating';\n  type_config: {\n    default?: number;\n    count: number; // 1-10 stars\n  };\n}\n\n// Progress fields\nexport interface ProgressField extends BaseCustomField {\n  type: 'progress';\n  type_config: {\n    default?: number;\n    start?: number; // default: 0\n    end?: number;   // default: 100\n    unit?: string;  // %, points, etc.\n  };\n}\n\n// Relationship fields\nexport interface TaskRelationshipField extends BaseCustomField {\n  type: 'task_relationship';\n  type_config: {\n    multiple?: boolean;\n  };\n}\n\n// Union type for all custom fields\nexport type CustomField = \n  | ShortTextField | LongTextField\n  | NumberField | CurrencyField\n  | DateField\n  | DropdownField | LabelsField\n  | CheckboxField\n  | URLField | EmailField | PhoneField\n  | RatingField | ProgressField\n  | TaskRelationshipField;\n\n// ========================================\n// CUSTOM FIELD VALUE DEFINITIONS\n// ========================================\n\nexport interface BaseCustomFieldValue {\n  id: string;\n  name: string;\n  type: CustomFieldType;\n  value: any;\n}\n\nexport interface TextFieldValue extends BaseCustomFieldValue {\n  type: 'text' | 'textarea';\n  value: {\n    value: string;\n  };\n}\n\nexport interface NumberFieldValue extends BaseCustomFieldValue {\n  type: 'number' | 'currency';\n  value: {\n    value: number;\n  };\n}\n\nexport interface DateFieldValue extends BaseCustomFieldValue {\n  type: 'date';\n  value: {\n    value: number; // Unix timestamp\n  };\n}\n\nexport interface DropdownFieldValue extends BaseCustomFieldValue {\n  type: 'drop_down';\n  value: {\n    value: {\n      id: string;\n      name: string;\n      color?: string;\n    };\n  };\n}\n\nexport interface LabelsFieldValue extends BaseCustomFieldValue {\n  type: 'labels';\n  value: {\n    value: Array<{\n      id: string;\n      name: string;\n      color?: string;\n    }>;\n  };\n}\n\nexport interface CheckboxFieldValue extends BaseCustomFieldValue {\n  type: 'checkbox';\n  value: {\n    value: boolean;\n  };\n}\n\nexport interface URLFieldValue extends BaseCustomFieldValue {\n  type: 'url' | 'email' | 'phone';\n  value: {\n    value: string;\n  };\n}\n\nexport interface RatingFieldValue extends BaseCustomFieldValue {\n  type: 'rating';\n  value: {\n    value: number;\n  };\n}\n\nexport interface ProgressFieldValue extends BaseCustomFieldValue {\n  type: 'progress';\n  value: {\n    value: number;\n  };\n}\n\nexport interface TaskRelationshipFieldValue extends BaseCustomFieldValue {\n  type: 'task_relationship';\n  value: {\n    value: string | string[];\n  };\n}\n\nexport type CustomFieldValue = \n  | TextFieldValue | NumberFieldValue | DateFieldValue\n  | DropdownFieldValue | LabelsFieldValue | CheckboxFieldValue\n  | URLFieldValue | RatingFieldValue | ProgressFieldValue\n  | TaskRelationshipFieldValue;\n\n// ========================================\n// PARAMETER INTERFACES\n// ========================================\n\nexport interface CreateCustomFieldParams {\n  name: string;\n  type: CustomFieldType;\n  type_config?: Record<string, any>;\n  required?: boolean;\n  hide_from_guests?: boolean;\n}\n\nexport interface UpdateCustomFieldParams {\n  name?: string;\n  type_config?: Record<string, any>;\n  required?: boolean;\n  hide_from_guests?: boolean;\n}\n\nexport interface SetFieldValueParams {\n  value: any; // Type depends on field type\n}\n\nexport interface GetCustomFieldsParams {\n  include_deleted?: boolean;\n}\n\nexport interface CustomFieldsResponse {\n  fields: CustomField[];\n}\n\n// ========================================\n// ENHANCED CUSTOM FIELDS CLIENT\n// ========================================\n\nexport class EnhancedCustomFieldsClient {\n  private client: ClickUpClient;\n  private apiToken: string;\n\n  constructor(client: ClickUpClient) {\n    this.client = client;\n    this.apiToken = process.env.CLICKUP_API_TOKEN || '';\n  }\n\n  private getHeaders() {\n    return {\n      'Authorization': this.apiToken,\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    };\n  }\n\n  // ========================================\n  // CUSTOM FIELD MANAGEMENT\n  // ========================================\n\n  /**\n   * Get custom fields for a list\n   */\n  async getListCustomFields(listId: string, params?: GetCustomFieldsParams): Promise<CustomField[]> {\n    try {\n      const url = `https://api.clickup.com/api/v2/list/${listId}/field`;\n      const response = await axios.get(url, {\n        headers: this.getHeaders(),\n        params\n      });\n      return response.data.fields || [];\n    } catch (error) {\n      console.error('Error getting list custom fields:', error);\n      throw this.handleError(error, `Failed to get custom fields for list ${listId}`);\n    }\n  }\n\n  /**\n   * Get custom fields for a folder\n   */\n  async getFolderCustomFields(folderId: string, params?: GetCustomFieldsParams): Promise<CustomField[]> {\n    try {\n      const url = `https://api.clickup.com/api/v2/folder/${folderId}/field`;\n      const response = await axios.get(url, {\n        headers: this.getHeaders(),\n        params\n      });\n      return response.data.fields || [];\n    } catch (error) {\n      console.error('Error getting folder custom fields:', error);\n      throw this.handleError(error, `Failed to get custom fields for folder ${folderId}`);\n    }\n  }\n\n  /**\n   * Get custom fields for a space\n   */\n  async getSpaceCustomFields(spaceId: string, params?: GetCustomFieldsParams): Promise<CustomField[]> {\n    try {\n      const url = `https://api.clickup.com/api/v2/space/${spaceId}/field`;\n      const response = await axios.get(url, {\n        headers: this.getHeaders(),\n        params\n      });\n      return response.data.fields || [];\n    } catch (error) {\n      console.error('Error getting space custom fields:', error);\n      throw this.handleError(error, `Failed to get custom fields for space ${spaceId}`);\n    }\n  }\n\n  /**\n   * Create a custom field in a list\n   */\n  async createListCustomField(listId: string, params: CreateCustomFieldParams): Promise<CustomField> {\n    try {\n      const url = `https://api.clickup.com/api/v2/list/${listId}/field`;\n      const response = await axios.post(url, params, {\n        headers: this.getHeaders()\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error creating list custom field:', error);\n      throw this.handleError(error, `Failed to create custom field in list ${listId}`);\n    }\n  }\n\n  /**\n   * Create a custom field in a folder\n   */\n  async createFolderCustomField(folderId: string, params: CreateCustomFieldParams): Promise<CustomField> {\n    try {\n      const url = `https://api.clickup.com/api/v2/folder/${folderId}/field`;\n      const response = await axios.post(url, params, {\n        headers: this.getHeaders()\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error creating folder custom field:', error);\n      throw this.handleError(error, `Failed to create custom field in folder ${folderId}`);\n    }\n  }\n\n  /**\n   * Create a custom field in a space\n   */\n  async createSpaceCustomField(spaceId: string, params: CreateCustomFieldParams): Promise<CustomField> {\n    try {\n      const url = `https://api.clickup.com/api/v2/space/${spaceId}/field`;\n      const response = await axios.post(url, params, {\n        headers: this.getHeaders()\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error creating space custom field:', error);\n      throw this.handleError(error, `Failed to create custom field in space ${spaceId}`);\n    }\n  }\n\n  /**\n   * Update a custom field\n   */\n  async updateCustomField(fieldId: string, params: UpdateCustomFieldParams): Promise<CustomField> {\n    try {\n      const url = `https://api.clickup.com/api/v2/field/${fieldId}`;\n      const response = await axios.put(url, params, {\n        headers: this.getHeaders()\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error updating custom field:', error);\n      throw this.handleError(error, `Failed to update custom field ${fieldId}`);\n    }\n  }\n\n  /**\n   * Delete a custom field\n   */\n  async deleteCustomField(fieldId: string): Promise<void> {\n    try {\n      const url = `https://api.clickup.com/api/v2/field/${fieldId}`;\n      await axios.delete(url, {\n        headers: this.getHeaders()\n      });\n    } catch (error) {\n      console.error('Error deleting custom field:', error);\n      throw this.handleError(error, `Failed to delete custom field ${fieldId}`);\n    }\n  }\n\n  // ========================================\n  // CUSTOM FIELD VALUE MANAGEMENT\n  // ========================================\n\n  /**\n   * Set a custom field value on a task\n   */\n  async setCustomFieldValue(taskId: string, fieldId: string, value: any): Promise<void> {\n    try {\n      const url = `https://api.clickup.com/api/v2/task/${taskId}/field/${fieldId}`;\n      await axios.post(url, { value }, {\n        headers: this.getHeaders()\n      });\n    } catch (error) {\n      console.error('Error setting custom field value:', error);\n      throw this.handleError(error, `Failed to set custom field value for task ${taskId}, field ${fieldId}`);\n    }\n  }\n\n  /**\n   * Remove a custom field value from a task\n   */\n  async removeCustomFieldValue(taskId: string, fieldId: string): Promise<void> {\n    try {\n      const url = `https://api.clickup.com/api/v2/task/${taskId}/field/${fieldId}`;\n      await axios.delete(url, {\n        headers: this.getHeaders()\n      });\n    } catch (error) {\n      console.error('Error removing custom field value:', error);\n      throw this.handleError(error, `Failed to remove custom field value for task ${taskId}, field ${fieldId}`);\n    }\n  }\n\n  /**\n   * Get a custom field value from a task\n   */\n  async getCustomFieldValue(taskId: string, fieldId: string): Promise<any> {\n    try {\n      // Get task details which includes custom field values\n      const taskUrl = `https://api.clickup.com/api/v2/task/${taskId}`;\n      const response = await axios.get(taskUrl, {\n        headers: this.getHeaders()\n      });\n      \n      const task = response.data;\n      const customField = task.custom_fields?.find((field: any) => field.id === fieldId);\n      \n      if (!customField) {\n        throw new Error(`Custom field ${fieldId} not found on task ${taskId}`);\n      }\n      \n      return {\n        field_id: customField.id,\n        field_name: customField.name,\n        field_type: customField.type,\n        value: customField.value,\n        type_config: customField.type_config\n      };\n    } catch (error) {\n      console.error('Error getting custom field value:', error);\n      throw this.handleError(error, `Failed to get custom field value for task ${taskId}, field ${fieldId}`);\n    }\n  }\n\n  /**\n   * Get all custom field values for a task\n   */\n  async getTaskCustomFieldValues(taskId: string): Promise<any[]> {\n    try {\n      const taskUrl = `https://api.clickup.com/api/v2/task/${taskId}`;\n      const response = await axios.get(taskUrl, {\n        headers: this.getHeaders()\n      });\n      \n      const task = response.data;\n      return task.custom_fields?.map((field: any) => ({\n        field_id: field.id,\n        field_name: field.name,\n        field_type: field.type,\n        value: field.value,\n        type_config: field.type_config,\n        required: field.required,\n        hide_from_guests: field.hide_from_guests\n      })) || [];\n    } catch (error) {\n      console.error('Error getting task custom field values:', error);\n      throw this.handleError(error, `Failed to get custom field values for task ${taskId}`);\n    }\n  }\n\n  /**\n   * Bulk set multiple custom field values on a task\n   */\n  async bulkSetCustomFieldValues(taskId: string, fieldValues: Array<{field_id: string, value: any}>): Promise<any[]> {\n    try {\n      const results = [];\n      \n      // ClickUp doesn't have a native bulk API, so we'll set them individually\n      // but return consolidated results\n      for (const { field_id, value } of fieldValues) {\n        try {\n          await this.setCustomFieldValue(taskId, field_id, value);\n          results.push({\n            field_id,\n            value,\n            status: 'success'\n          });\n        } catch (error: any) {\n          results.push({\n            field_id,\n            value,\n            status: 'error',\n            error: error.message\n          });\n        }\n      }\n      \n      return results;\n    } catch (error) {\n      console.error('Error bulk setting custom field values:', error);\n      throw this.handleError(error, `Failed to bulk set custom field values for task ${taskId}`);\n    }\n  }\n\n  // ========================================\n  // VALIDATION UTILITIES\n  // ========================================\n\n  /**\n   * Validate a field value against its field type\n   */\n  validateFieldValue(field: CustomField, value: any): boolean {\n    switch (field.type) {\n      case 'text':\n      case 'textarea':\n        return typeof value === 'string';\n      \n      case 'number':\n      case 'currency':\n        return typeof value === 'number' && !isNaN(value);\n      \n      case 'date':\n        return typeof value === 'number' && value > 0;\n      \n      case 'checkbox':\n        return typeof value === 'boolean';\n      \n      case 'url':\n        return typeof value === 'string' && this.isValidURL(value);\n      \n      case 'email':\n        return typeof value === 'string' && this.isValidEmail(value);\n      \n      case 'phone':\n        return typeof value === 'string' && value.length > 0;\n      \n      case 'drop_down':\n        return field.type_config.options?.some((opt: DropdownOption) => opt.id === value);\n      \n      case 'labels':\n        return Array.isArray(value) && value.every(v => \n          field.type_config.options?.some((opt: DropdownOption) => opt.id === v)\n        );\n      \n      case 'rating':\n        return typeof value === 'number' && \n               value >= 0 && value <= (field.type_config.count || 5);\n      \n      case 'progress':\n        const { start = 0, end = 100 } = field.type_config;\n        return typeof value === 'number' && value >= start && value <= end;\n      \n      case 'task_relationship':\n        if (field.type_config.multiple) {\n          return Array.isArray(value) && value.every(v => typeof v === 'string');\n        }\n        return typeof value === 'string';\n      \n      default:\n        return true;\n    }\n  }\n\n  /**\n   * Get field type configuration template\n   */\n  getFieldTypeTemplate(type: CustomFieldType): Record<string, any> {\n    switch (type) {\n      case 'text':\n      case 'textarea':\n        return {\n          default: '',\n          placeholder: ''\n        };\n      \n      case 'number':\n        return {\n          default: 0,\n          precision: 0\n        };\n      \n      case 'currency':\n        return {\n          default: 0,\n          precision: 2,\n          currency_type: 'USD'\n        };\n      \n      case 'date':\n        return {\n          include_time: false\n        };\n      \n      case 'drop_down':\n      case 'labels':\n        return {\n          options: []\n        };\n      \n      case 'checkbox':\n        return {\n          default: false\n        };\n      \n      case 'url':\n      case 'email':\n      case 'phone':\n        return {\n          placeholder: ''\n        };\n      \n      case 'rating':\n        return {\n          count: 5,\n          default: 0\n        };\n      \n      case 'progress':\n        return {\n          start: 0,\n          end: 100,\n          unit: '%'\n        };\n      \n      case 'task_relationship':\n        return {\n          multiple: false\n        };\n      \n      default:\n        return {};\n    }\n  }\n\n  // ========================================\n  // UTILITY METHODS\n  // ========================================\n\n  private isValidURL(string: string): boolean {\n    try {\n      new URL(string);\n      return true;\n    } catch (_) {\n      return false;\n    }\n  }\n\n  private isValidEmail(email: string): boolean {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  }\n\n  private handleError(error: any, context: string): Error {\n    if (axios.isAxiosError(error)) {\n      const status = error.response?.status;\n      const message = error.response?.data?.message || error.message;\n      \n      switch (status) {\n        case 400:\n          return new Error(`${context}: Invalid request - ${message}`);\n        case 401:\n          return new Error(`${context}: Authentication failed - check API token`);\n        case 403:\n          return new Error(`${context}: Permission denied - insufficient access rights`);\n        case 404:\n          return new Error(`${context}: Resource not found - ${message}`);\n        case 429:\n          return new Error(`${context}: Rate limit exceeded - please retry later`);\n        case 500:\n          return new Error(`${context}: Server error - please try again`);\n        default:\n          return new Error(`${context}: ${message}`);\n      }\n    }\n    \n    return new Error(`${context}: ${error.message || 'Unknown error'}`);\n  }\n}\n\nexport const createEnhancedCustomFieldsClient = (client: ClickUpClient): EnhancedCustomFieldsClient => {\n  return new EnhancedCustomFieldsClient(client);\n};\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3691fe292434f4ea252a289e0c11c02d9ddd42fc"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_hnisn3x4m = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_hnisn3x4m();
import axios from 'axios';
// ========================================
// ENHANCED CUSTOM FIELDS CLIENT
// ========================================
export class EnhancedCustomFieldsClient {
  constructor(client) {
    /* istanbul ignore next */
    cov_hnisn3x4m().f[0]++;
    cov_hnisn3x4m().s[0]++;
    this.client = client;
    /* istanbul ignore next */
    cov_hnisn3x4m().s[1]++;
    this.apiToken =
    /* istanbul ignore next */
    (cov_hnisn3x4m().b[0][0]++, process.env.CLICKUP_API_TOKEN) ||
    /* istanbul ignore next */
    (cov_hnisn3x4m().b[0][1]++, '');
  }
  getHeaders() {
    /* istanbul ignore next */
    cov_hnisn3x4m().f[1]++;
    cov_hnisn3x4m().s[2]++;
    return {
      'Authorization': this.apiToken,
      'Accept': 'application/json',
      'Content-Type': 'application/json'
    };
  }
  // ========================================
  // CUSTOM FIELD MANAGEMENT
  // ========================================
  /**
   * Get custom fields for a list
   */
  async getListCustomFields(listId, params) {
    /* istanbul ignore next */
    cov_hnisn3x4m().f[2]++;
    cov_hnisn3x4m().s[3]++;
    try {
      const url =
      /* istanbul ignore next */
      (cov_hnisn3x4m().s[4]++, `https://api.clickup.com/api/v2/list/${listId}/field`);
      const response =
      /* istanbul ignore next */
      (cov_hnisn3x4m().s[5]++, await axios.get(url, {
        headers: this.getHeaders(),
        params
      }));
      /* istanbul ignore next */
      cov_hnisn3x4m().s[6]++;
      return /* istanbul ignore next */(cov_hnisn3x4m().b[1][0]++, response.data.fields) ||
      /* istanbul ignore next */
      (cov_hnisn3x4m().b[1][1]++, []);
    } catch (error) {
      /* istanbul ignore next */
      cov_hnisn3x4m().s[7]++;
      console.error('Error getting list custom fields:', error);
      /* istanbul ignore next */
      cov_hnisn3x4m().s[8]++;
      throw this.handleError(error, `Failed to get custom fields for list ${listId}`);
    }
  }
  /**
   * Get custom fields for a folder
   */
  async getFolderCustomFields(folderId, params) {
    /* istanbul ignore next */
    cov_hnisn3x4m().f[3]++;
    cov_hnisn3x4m().s[9]++;
    try {
      const url =
      /* istanbul ignore next */
      (cov_hnisn3x4m().s[10]++, `https://api.clickup.com/api/v2/folder/${folderId}/field`);
      const response =
      /* istanbul ignore next */
      (cov_hnisn3x4m().s[11]++, await axios.get(url, {
        headers: this.getHeaders(),
        params
      }));
      /* istanbul ignore next */
      cov_hnisn3x4m().s[12]++;
      return /* istanbul ignore next */(cov_hnisn3x4m().b[2][0]++, response.data.fields) ||
      /* istanbul ignore next */
      (cov_hnisn3x4m().b[2][1]++, []);
    } catch (error) {
      /* istanbul ignore next */
      cov_hnisn3x4m().s[13]++;
      console.error('Error getting folder custom fields:', error);
      /* istanbul ignore next */
      cov_hnisn3x4m().s[14]++;
      throw this.handleError(error, `Failed to get custom fields for folder ${folderId}`);
    }
  }
  /**
   * Get custom fields for a space
   */
  async getSpaceCustomFields(spaceId, params) {
    /* istanbul ignore next */
    cov_hnisn3x4m().f[4]++;
    cov_hnisn3x4m().s[15]++;
    try {
      const url =
      /* istanbul ignore next */
      (cov_hnisn3x4m().s[16]++, `https://api.clickup.com/api/v2/space/${spaceId}/field`);
      const response =
      /* istanbul ignore next */
      (cov_hnisn3x4m().s[17]++, await axios.get(url, {
        headers: this.getHeaders(),
        params
      }));
      /* istanbul ignore next */
      cov_hnisn3x4m().s[18]++;
      return /* istanbul ignore next */(cov_hnisn3x4m().b[3][0]++, response.data.fields) ||
      /* istanbul ignore next */
      (cov_hnisn3x4m().b[3][1]++, []);
    } catch (error) {
      /* istanbul ignore next */
      cov_hnisn3x4m().s[19]++;
      console.error('Error getting space custom fields:', error);
      /* istanbul ignore next */
      cov_hnisn3x4m().s[20]++;
      throw this.handleError(error, `Failed to get custom fields for space ${spaceId}`);
    }
  }
  /**
   * Create a custom field in a list
   */
  async createListCustomField(listId, params) {
    /* istanbul ignore next */
    cov_hnisn3x4m().f[5]++;
    cov_hnisn3x4m().s[21]++;
    try {
      const url =
      /* istanbul ignore next */
      (cov_hnisn3x4m().s[22]++, `https://api.clickup.com/api/v2/list/${listId}/field`);
      const response =
      /* istanbul ignore next */
      (cov_hnisn3x4m().s[23]++, await axios.post(url, params, {
        headers: this.getHeaders()
      }));
      /* istanbul ignore next */
      cov_hnisn3x4m().s[24]++;
      return response.data;
    } catch (error) {
      /* istanbul ignore next */
      cov_hnisn3x4m().s[25]++;
      console.error('Error creating list custom field:', error);
      /* istanbul ignore next */
      cov_hnisn3x4m().s[26]++;
      throw this.handleError(error, `Failed to create custom field in list ${listId}`);
    }
  }
  /**
   * Create a custom field in a folder
   */
  async createFolderCustomField(folderId, params) {
    /* istanbul ignore next */
    cov_hnisn3x4m().f[6]++;
    cov_hnisn3x4m().s[27]++;
    try {
      const url =
      /* istanbul ignore next */
      (cov_hnisn3x4m().s[28]++, `https://api.clickup.com/api/v2/folder/${folderId}/field`);
      const response =
      /* istanbul ignore next */
      (cov_hnisn3x4m().s[29]++, await axios.post(url, params, {
        headers: this.getHeaders()
      }));
      /* istanbul ignore next */
      cov_hnisn3x4m().s[30]++;
      return response.data;
    } catch (error) {
      /* istanbul ignore next */
      cov_hnisn3x4m().s[31]++;
      console.error('Error creating folder custom field:', error);
      /* istanbul ignore next */
      cov_hnisn3x4m().s[32]++;
      throw this.handleError(error, `Failed to create custom field in folder ${folderId}`);
    }
  }
  /**
   * Create a custom field in a space
   */
  async createSpaceCustomField(spaceId, params) {
    /* istanbul ignore next */
    cov_hnisn3x4m().f[7]++;
    cov_hnisn3x4m().s[33]++;
    try {
      const url =
      /* istanbul ignore next */
      (cov_hnisn3x4m().s[34]++, `https://api.clickup.com/api/v2/space/${spaceId}/field`);
      const response =
      /* istanbul ignore next */
      (cov_hnisn3x4m().s[35]++, await axios.post(url, params, {
        headers: this.getHeaders()
      }));
      /* istanbul ignore next */
      cov_hnisn3x4m().s[36]++;
      return response.data;
    } catch (error) {
      /* istanbul ignore next */
      cov_hnisn3x4m().s[37]++;
      console.error('Error creating space custom field:', error);
      /* istanbul ignore next */
      cov_hnisn3x4m().s[38]++;
      throw this.handleError(error, `Failed to create custom field in space ${spaceId}`);
    }
  }
  /**
   * Update a custom field
   */
  async updateCustomField(fieldId, params) {
    /* istanbul ignore next */
    cov_hnisn3x4m().f[8]++;
    cov_hnisn3x4m().s[39]++;
    try {
      const url =
      /* istanbul ignore next */
      (cov_hnisn3x4m().s[40]++, `https://api.clickup.com/api/v2/field/${fieldId}`);
      const response =
      /* istanbul ignore next */
      (cov_hnisn3x4m().s[41]++, await axios.put(url, params, {
        headers: this.getHeaders()
      }));
      /* istanbul ignore next */
      cov_hnisn3x4m().s[42]++;
      return response.data;
    } catch (error) {
      /* istanbul ignore next */
      cov_hnisn3x4m().s[43]++;
      console.error('Error updating custom field:', error);
      /* istanbul ignore next */
      cov_hnisn3x4m().s[44]++;
      throw this.handleError(error, `Failed to update custom field ${fieldId}`);
    }
  }
  /**
   * Delete a custom field
   */
  async deleteCustomField(fieldId) {
    /* istanbul ignore next */
    cov_hnisn3x4m().f[9]++;
    cov_hnisn3x4m().s[45]++;
    try {
      const url =
      /* istanbul ignore next */
      (cov_hnisn3x4m().s[46]++, `https://api.clickup.com/api/v2/field/${fieldId}`);
      /* istanbul ignore next */
      cov_hnisn3x4m().s[47]++;
      await axios.delete(url, {
        headers: this.getHeaders()
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_hnisn3x4m().s[48]++;
      console.error('Error deleting custom field:', error);
      /* istanbul ignore next */
      cov_hnisn3x4m().s[49]++;
      throw this.handleError(error, `Failed to delete custom field ${fieldId}`);
    }
  }
  // ========================================
  // CUSTOM FIELD VALUE MANAGEMENT
  // ========================================
  /**
   * Set a custom field value on a task
   */
  async setCustomFieldValue(taskId, fieldId, value) {
    /* istanbul ignore next */
    cov_hnisn3x4m().f[10]++;
    cov_hnisn3x4m().s[50]++;
    try {
      const url =
      /* istanbul ignore next */
      (cov_hnisn3x4m().s[51]++, `https://api.clickup.com/api/v2/task/${taskId}/field/${fieldId}`);
      /* istanbul ignore next */
      cov_hnisn3x4m().s[52]++;
      await axios.post(url, {
        value
      }, {
        headers: this.getHeaders()
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_hnisn3x4m().s[53]++;
      console.error('Error setting custom field value:', error);
      /* istanbul ignore next */
      cov_hnisn3x4m().s[54]++;
      throw this.handleError(error, `Failed to set custom field value for task ${taskId}, field ${fieldId}`);
    }
  }
  /**
   * Remove a custom field value from a task
   */
  async removeCustomFieldValue(taskId, fieldId) {
    /* istanbul ignore next */
    cov_hnisn3x4m().f[11]++;
    cov_hnisn3x4m().s[55]++;
    try {
      const url =
      /* istanbul ignore next */
      (cov_hnisn3x4m().s[56]++, `https://api.clickup.com/api/v2/task/${taskId}/field/${fieldId}`);
      /* istanbul ignore next */
      cov_hnisn3x4m().s[57]++;
      await axios.delete(url, {
        headers: this.getHeaders()
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_hnisn3x4m().s[58]++;
      console.error('Error removing custom field value:', error);
      /* istanbul ignore next */
      cov_hnisn3x4m().s[59]++;
      throw this.handleError(error, `Failed to remove custom field value for task ${taskId}, field ${fieldId}`);
    }
  }
  /**
   * Get a custom field value from a task
   */
  async getCustomFieldValue(taskId, fieldId) {
    /* istanbul ignore next */
    cov_hnisn3x4m().f[12]++;
    cov_hnisn3x4m().s[60]++;
    try {
      // Get task details which includes custom field values
      const taskUrl =
      /* istanbul ignore next */
      (cov_hnisn3x4m().s[61]++, `https://api.clickup.com/api/v2/task/${taskId}`);
      const response =
      /* istanbul ignore next */
      (cov_hnisn3x4m().s[62]++, await axios.get(taskUrl, {
        headers: this.getHeaders()
      }));
      const task =
      /* istanbul ignore next */
      (cov_hnisn3x4m().s[63]++, response.data);
      const customField =
      /* istanbul ignore next */
      (cov_hnisn3x4m().s[64]++, task.custom_fields?.find(field => {
        /* istanbul ignore next */
        cov_hnisn3x4m().f[13]++;
        cov_hnisn3x4m().s[65]++;
        return field.id === fieldId;
      }));
      /* istanbul ignore next */
      cov_hnisn3x4m().s[66]++;
      if (!customField) {
        /* istanbul ignore next */
        cov_hnisn3x4m().b[4][0]++;
        cov_hnisn3x4m().s[67]++;
        throw new Error(`Custom field ${fieldId} not found on task ${taskId}`);
      } else
      /* istanbul ignore next */
      {
        cov_hnisn3x4m().b[4][1]++;
      }
      cov_hnisn3x4m().s[68]++;
      return {
        field_id: customField.id,
        field_name: customField.name,
        field_type: customField.type,
        value: customField.value,
        type_config: customField.type_config
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_hnisn3x4m().s[69]++;
      console.error('Error getting custom field value:', error);
      /* istanbul ignore next */
      cov_hnisn3x4m().s[70]++;
      throw this.handleError(error, `Failed to get custom field value for task ${taskId}, field ${fieldId}`);
    }
  }
  /**
   * Get all custom field values for a task
   */
  async getTaskCustomFieldValues(taskId) {
    /* istanbul ignore next */
    cov_hnisn3x4m().f[14]++;
    cov_hnisn3x4m().s[71]++;
    try {
      const taskUrl =
      /* istanbul ignore next */
      (cov_hnisn3x4m().s[72]++, `https://api.clickup.com/api/v2/task/${taskId}`);
      const response =
      /* istanbul ignore next */
      (cov_hnisn3x4m().s[73]++, await axios.get(taskUrl, {
        headers: this.getHeaders()
      }));
      const task =
      /* istanbul ignore next */
      (cov_hnisn3x4m().s[74]++, response.data);
      /* istanbul ignore next */
      cov_hnisn3x4m().s[75]++;
      return /* istanbul ignore next */(cov_hnisn3x4m().b[5][0]++, task.custom_fields?.map(field => {
        /* istanbul ignore next */
        cov_hnisn3x4m().f[15]++;
        cov_hnisn3x4m().s[76]++;
        return {
          field_id: field.id,
          field_name: field.name,
          field_type: field.type,
          value: field.value,
          type_config: field.type_config,
          required: field.required,
          hide_from_guests: field.hide_from_guests
        };
      })) ||
      /* istanbul ignore next */
      (cov_hnisn3x4m().b[5][1]++, []);
    } catch (error) {
      /* istanbul ignore next */
      cov_hnisn3x4m().s[77]++;
      console.error('Error getting task custom field values:', error);
      /* istanbul ignore next */
      cov_hnisn3x4m().s[78]++;
      throw this.handleError(error, `Failed to get custom field values for task ${taskId}`);
    }
  }
  /**
   * Bulk set multiple custom field values on a task
   */
  async bulkSetCustomFieldValues(taskId, fieldValues) {
    /* istanbul ignore next */
    cov_hnisn3x4m().f[16]++;
    cov_hnisn3x4m().s[79]++;
    try {
      const results =
      /* istanbul ignore next */
      (cov_hnisn3x4m().s[80]++, []);
      // ClickUp doesn't have a native bulk API, so we'll set them individually
      // but return consolidated results
      /* istanbul ignore next */
      cov_hnisn3x4m().s[81]++;
      for (const {
        field_id,
        value
      } of fieldValues) {
        /* istanbul ignore next */
        cov_hnisn3x4m().s[82]++;
        try {
          /* istanbul ignore next */
          cov_hnisn3x4m().s[83]++;
          await this.setCustomFieldValue(taskId, field_id, value);
          /* istanbul ignore next */
          cov_hnisn3x4m().s[84]++;
          results.push({
            field_id,
            value,
            status: 'success'
          });
        } catch (error) {
          /* istanbul ignore next */
          cov_hnisn3x4m().s[85]++;
          results.push({
            field_id,
            value,
            status: 'error',
            error: error.message
          });
        }
      }
      /* istanbul ignore next */
      cov_hnisn3x4m().s[86]++;
      return results;
    } catch (error) {
      /* istanbul ignore next */
      cov_hnisn3x4m().s[87]++;
      console.error('Error bulk setting custom field values:', error);
      /* istanbul ignore next */
      cov_hnisn3x4m().s[88]++;
      throw this.handleError(error, `Failed to bulk set custom field values for task ${taskId}`);
    }
  }
  // ========================================
  // VALIDATION UTILITIES
  // ========================================
  /**
   * Validate a field value against its field type
   */
  validateFieldValue(field, value) {
    /* istanbul ignore next */
    cov_hnisn3x4m().f[17]++;
    cov_hnisn3x4m().s[89]++;
    switch (field.type) {
      case 'text':
        /* istanbul ignore next */
        cov_hnisn3x4m().b[6][0]++;
      case 'textarea':
        /* istanbul ignore next */
        cov_hnisn3x4m().b[6][1]++;
        cov_hnisn3x4m().s[90]++;
        return typeof value === 'string';
      case 'number':
        /* istanbul ignore next */
        cov_hnisn3x4m().b[6][2]++;
      case 'currency':
        /* istanbul ignore next */
        cov_hnisn3x4m().b[6][3]++;
        cov_hnisn3x4m().s[91]++;
        return /* istanbul ignore next */(cov_hnisn3x4m().b[7][0]++, typeof value === 'number') &&
        /* istanbul ignore next */
        (cov_hnisn3x4m().b[7][1]++, !isNaN(value));
      case 'date':
        /* istanbul ignore next */
        cov_hnisn3x4m().b[6][4]++;
        cov_hnisn3x4m().s[92]++;
        return /* istanbul ignore next */(cov_hnisn3x4m().b[8][0]++, typeof value === 'number') &&
        /* istanbul ignore next */
        (cov_hnisn3x4m().b[8][1]++, value > 0);
      case 'checkbox':
        /* istanbul ignore next */
        cov_hnisn3x4m().b[6][5]++;
        cov_hnisn3x4m().s[93]++;
        return typeof value === 'boolean';
      case 'url':
        /* istanbul ignore next */
        cov_hnisn3x4m().b[6][6]++;
        cov_hnisn3x4m().s[94]++;
        return /* istanbul ignore next */(cov_hnisn3x4m().b[9][0]++, typeof value === 'string') &&
        /* istanbul ignore next */
        (cov_hnisn3x4m().b[9][1]++, this.isValidURL(value));
      case 'email':
        /* istanbul ignore next */
        cov_hnisn3x4m().b[6][7]++;
        cov_hnisn3x4m().s[95]++;
        return /* istanbul ignore next */(cov_hnisn3x4m().b[10][0]++, typeof value === 'string') &&
        /* istanbul ignore next */
        (cov_hnisn3x4m().b[10][1]++, this.isValidEmail(value));
      case 'phone':
        /* istanbul ignore next */
        cov_hnisn3x4m().b[6][8]++;
        cov_hnisn3x4m().s[96]++;
        return /* istanbul ignore next */(cov_hnisn3x4m().b[11][0]++, typeof value === 'string') &&
        /* istanbul ignore next */
        (cov_hnisn3x4m().b[11][1]++, value.length > 0);
      case 'drop_down':
        /* istanbul ignore next */
        cov_hnisn3x4m().b[6][9]++;
        cov_hnisn3x4m().s[97]++;
        return field.type_config.options?.some(opt => {
          /* istanbul ignore next */
          cov_hnisn3x4m().f[18]++;
          cov_hnisn3x4m().s[98]++;
          return opt.id === value;
        });
      case 'labels':
        /* istanbul ignore next */
        cov_hnisn3x4m().b[6][10]++;
        cov_hnisn3x4m().s[99]++;
        return /* istanbul ignore next */(cov_hnisn3x4m().b[12][0]++, Array.isArray(value)) &&
        /* istanbul ignore next */
        (cov_hnisn3x4m().b[12][1]++, value.every(v => {
          /* istanbul ignore next */
          cov_hnisn3x4m().f[19]++;
          cov_hnisn3x4m().s[100]++;
          return field.type_config.options?.some(opt => {
            /* istanbul ignore next */
            cov_hnisn3x4m().f[20]++;
            cov_hnisn3x4m().s[101]++;
            return opt.id === v;
          });
        }));
      case 'rating':
        /* istanbul ignore next */
        cov_hnisn3x4m().b[6][11]++;
        cov_hnisn3x4m().s[102]++;
        return /* istanbul ignore next */(cov_hnisn3x4m().b[13][0]++, typeof value === 'number') &&
        /* istanbul ignore next */
        (cov_hnisn3x4m().b[13][1]++, value >= 0) &&
        /* istanbul ignore next */
        (cov_hnisn3x4m().b[13][2]++, value <= (
        /* istanbul ignore next */
        (cov_hnisn3x4m().b[14][0]++, field.type_config.count) ||
        /* istanbul ignore next */
        (cov_hnisn3x4m().b[14][1]++, 5)));
      case 'progress':
        /* istanbul ignore next */
        cov_hnisn3x4m().b[6][12]++;
        const {
          start =
          /* istanbul ignore next */
          (cov_hnisn3x4m().b[15][0]++, 0),
          end =
          /* istanbul ignore next */
          (cov_hnisn3x4m().b[16][0]++, 100)
        } =
        /* istanbul ignore next */
        (cov_hnisn3x4m().s[103]++, field.type_config);
        /* istanbul ignore next */
        cov_hnisn3x4m().s[104]++;
        return /* istanbul ignore next */(cov_hnisn3x4m().b[17][0]++, typeof value === 'number') &&
        /* istanbul ignore next */
        (cov_hnisn3x4m().b[17][1]++, value >= start) &&
        /* istanbul ignore next */
        (cov_hnisn3x4m().b[17][2]++, value <= end);
      case 'task_relationship':
        /* istanbul ignore next */
        cov_hnisn3x4m().b[6][13]++;
        cov_hnisn3x4m().s[105]++;
        if (field.type_config.multiple) {
          /* istanbul ignore next */
          cov_hnisn3x4m().b[18][0]++;
          cov_hnisn3x4m().s[106]++;
          return /* istanbul ignore next */(cov_hnisn3x4m().b[19][0]++, Array.isArray(value)) &&
          /* istanbul ignore next */
          (cov_hnisn3x4m().b[19][1]++, value.every(v => {
            /* istanbul ignore next */
            cov_hnisn3x4m().f[21]++;
            cov_hnisn3x4m().s[107]++;
            return typeof v === 'string';
          }));
        } else
        /* istanbul ignore next */
        {
          cov_hnisn3x4m().b[18][1]++;
        }
        cov_hnisn3x4m().s[108]++;
        return typeof value === 'string';
      default:
        /* istanbul ignore next */
        cov_hnisn3x4m().b[6][14]++;
        cov_hnisn3x4m().s[109]++;
        return true;
    }
  }
  /**
   * Get field type configuration template
   */
  getFieldTypeTemplate(type) {
    /* istanbul ignore next */
    cov_hnisn3x4m().f[22]++;
    cov_hnisn3x4m().s[110]++;
    switch (type) {
      case 'text':
        /* istanbul ignore next */
        cov_hnisn3x4m().b[20][0]++;
      case 'textarea':
        /* istanbul ignore next */
        cov_hnisn3x4m().b[20][1]++;
        cov_hnisn3x4m().s[111]++;
        return {
          default: '',
          placeholder: ''
        };
      case 'number':
        /* istanbul ignore next */
        cov_hnisn3x4m().b[20][2]++;
        cov_hnisn3x4m().s[112]++;
        return {
          default: 0,
          precision: 0
        };
      case 'currency':
        /* istanbul ignore next */
        cov_hnisn3x4m().b[20][3]++;
        cov_hnisn3x4m().s[113]++;
        return {
          default: 0,
          precision: 2,
          currency_type: 'USD'
        };
      case 'date':
        /* istanbul ignore next */
        cov_hnisn3x4m().b[20][4]++;
        cov_hnisn3x4m().s[114]++;
        return {
          include_time: false
        };
      case 'drop_down':
        /* istanbul ignore next */
        cov_hnisn3x4m().b[20][5]++;
      case 'labels':
        /* istanbul ignore next */
        cov_hnisn3x4m().b[20][6]++;
        cov_hnisn3x4m().s[115]++;
        return {
          options: []
        };
      case 'checkbox':
        /* istanbul ignore next */
        cov_hnisn3x4m().b[20][7]++;
        cov_hnisn3x4m().s[116]++;
        return {
          default: false
        };
      case 'url':
        /* istanbul ignore next */
        cov_hnisn3x4m().b[20][8]++;
      case 'email':
        /* istanbul ignore next */
        cov_hnisn3x4m().b[20][9]++;
      case 'phone':
        /* istanbul ignore next */
        cov_hnisn3x4m().b[20][10]++;
        cov_hnisn3x4m().s[117]++;
        return {
          placeholder: ''
        };
      case 'rating':
        /* istanbul ignore next */
        cov_hnisn3x4m().b[20][11]++;
        cov_hnisn3x4m().s[118]++;
        return {
          count: 5,
          default: 0
        };
      case 'progress':
        /* istanbul ignore next */
        cov_hnisn3x4m().b[20][12]++;
        cov_hnisn3x4m().s[119]++;
        return {
          start: 0,
          end: 100,
          unit: '%'
        };
      case 'task_relationship':
        /* istanbul ignore next */
        cov_hnisn3x4m().b[20][13]++;
        cov_hnisn3x4m().s[120]++;
        return {
          multiple: false
        };
      default:
        /* istanbul ignore next */
        cov_hnisn3x4m().b[20][14]++;
        cov_hnisn3x4m().s[121]++;
        return {};
    }
  }
  // ========================================
  // UTILITY METHODS
  // ========================================
  isValidURL(string) {
    /* istanbul ignore next */
    cov_hnisn3x4m().f[23]++;
    cov_hnisn3x4m().s[122]++;
    try {
      /* istanbul ignore next */
      cov_hnisn3x4m().s[123]++;
      new URL(string);
      /* istanbul ignore next */
      cov_hnisn3x4m().s[124]++;
      return true;
    } catch (_) {
      /* istanbul ignore next */
      cov_hnisn3x4m().s[125]++;
      return false;
    }
  }
  isValidEmail(email) {
    /* istanbul ignore next */
    cov_hnisn3x4m().f[24]++;
    const emailRegex =
    /* istanbul ignore next */
    (cov_hnisn3x4m().s[126]++, /^[^\s@]+@[^\s@]+\.[^\s@]+$/);
    /* istanbul ignore next */
    cov_hnisn3x4m().s[127]++;
    return emailRegex.test(email);
  }
  handleError(error, context) {
    /* istanbul ignore next */
    cov_hnisn3x4m().f[25]++;
    cov_hnisn3x4m().s[128]++;
    if (axios.isAxiosError(error)) {
      /* istanbul ignore next */
      cov_hnisn3x4m().b[21][0]++;
      const status =
      /* istanbul ignore next */
      (cov_hnisn3x4m().s[129]++, error.response?.status);
      const message =
      /* istanbul ignore next */
      (cov_hnisn3x4m().s[130]++,
      /* istanbul ignore next */
      (cov_hnisn3x4m().b[22][0]++, error.response?.data?.message) ||
      /* istanbul ignore next */
      (cov_hnisn3x4m().b[22][1]++, error.message));
      /* istanbul ignore next */
      cov_hnisn3x4m().s[131]++;
      switch (status) {
        case 400:
          /* istanbul ignore next */
          cov_hnisn3x4m().b[23][0]++;
          cov_hnisn3x4m().s[132]++;
          return new Error(`${context}: Invalid request - ${message}`);
        case 401:
          /* istanbul ignore next */
          cov_hnisn3x4m().b[23][1]++;
          cov_hnisn3x4m().s[133]++;
          return new Error(`${context}: Authentication failed - check API token`);
        case 403:
          /* istanbul ignore next */
          cov_hnisn3x4m().b[23][2]++;
          cov_hnisn3x4m().s[134]++;
          return new Error(`${context}: Permission denied - insufficient access rights`);
        case 404:
          /* istanbul ignore next */
          cov_hnisn3x4m().b[23][3]++;
          cov_hnisn3x4m().s[135]++;
          return new Error(`${context}: Resource not found - ${message}`);
        case 429:
          /* istanbul ignore next */
          cov_hnisn3x4m().b[23][4]++;
          cov_hnisn3x4m().s[136]++;
          return new Error(`${context}: Rate limit exceeded - please retry later`);
        case 500:
          /* istanbul ignore next */
          cov_hnisn3x4m().b[23][5]++;
          cov_hnisn3x4m().s[137]++;
          return new Error(`${context}: Server error - please try again`);
        default:
          /* istanbul ignore next */
          cov_hnisn3x4m().b[23][6]++;
          cov_hnisn3x4m().s[138]++;
          return new Error(`${context}: ${message}`);
      }
    } else
    /* istanbul ignore next */
    {
      cov_hnisn3x4m().b[21][1]++;
    }
    cov_hnisn3x4m().s[139]++;
    return new Error(`${context}: ${
    /* istanbul ignore next */
    (cov_hnisn3x4m().b[24][0]++, error.message) ||
    /* istanbul ignore next */
    (cov_hnisn3x4m().b[24][1]++, 'Unknown error')}`);
  }
}
/* istanbul ignore next */
cov_hnisn3x4m().s[140]++;
export const createEnhancedCustomFieldsClient = client => {
  /* istanbul ignore next */
  cov_hnisn3x4m().f[26]++;
  cov_hnisn3x4m().s[141]++;
  return new EnhancedCustomFieldsClient(client);
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,