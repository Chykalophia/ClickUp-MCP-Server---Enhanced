5c488110e455fd3af947b4cd5d0a1fd7
/* istanbul ignore next */
function cov_15rn5dk4aj() {
  var path = "/Users/peterkrzyzek/Development/clickup-mcp-server/src/schemas/views-schemas.ts";
  var hash = "5f61058d9917f2d68f423f2ff458f4b922b15e46";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/peterkrzyzek/Development/clickup-mcp-server/src/schemas/views-schemas.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 30
        },
        end: {
          line: 16,
          column: 2
        }
      },
      "1": {
        start: {
          line: 18,
          column: 32
        },
        end: {
          line: 22,
          column: 2
        }
      },
      "2": {
        start: {
          line: 24,
          column: 36
        },
        end: {
          line: 43,
          column: 2
        }
      },
      "3": {
        start: {
          line: 45,
          column: 32
        },
        end: {
          line: 50,
          column: 2
        }
      },
      "4": {
        start: {
          line: 52,
          column: 34
        },
        end: {
          line: 56,
          column: 2
        }
      },
      "5": {
        start: {
          line: 58,
          column: 33
        },
        end: {
          line: 61,
          column: 2
        }
      },
      "6": {
        start: {
          line: 63,
          column: 39
        },
        end: {
          line: 75,
          column: 2
        }
      },
      "7": {
        start: {
          line: 77,
          column: 42
        },
        end: {
          line: 82,
          column: 2
        }
      },
      "8": {
        start: {
          line: 84,
          column: 39
        },
        end: {
          line: 90,
          column: 2
        }
      },
      "9": {
        start: {
          line: 92,
          column: 39
        },
        end: {
          line: 100,
          column: 2
        }
      },
      "10": {
        start: {
          line: 102,
          column: 34
        },
        end: {
          line: 108,
          column: 2
        }
      },
      "11": {
        start: {
          line: 110,
          column: 32
        },
        end: {
          line: 121,
          column: 2
        }
      },
      "12": {
        start: {
          line: 123,
          column: 32
        },
        end: {
          line: 132,
          column: 2
        }
      },
      "13": {
        start: {
          line: 134,
          column: 36
        },
        end: {
          line: 139,
          column: 2
        }
      },
      "14": {
        start: {
          line: 141,
          column: 36
        },
        end: {
          line: 144,
          column: 2
        }
      },
      "15": {
        start: {
          line: 146,
          column: 37
        },
        end: {
          line: 149,
          column: 2
        }
      },
      "16": {
        start: {
          line: 151,
          column: 36
        },
        end: {
          line: 154,
          column: 2
        }
      },
      "17": {
        start: {
          line: 156,
          column: 40
        },
        end: {
          line: 159,
          column: 2
        }
      },
      "18": {
        start: {
          line: 161,
          column: 33
        },
        end: {
          line: 166,
          column: 2
        }
      },
      "19": {
        start: {
          line: 168,
          column: 42
        },
        end: {
          line: 170,
          column: 2
        }
      },
      "20": {
        start: {
          line: 168,
          column: 49
        },
        end: {
          line: 170,
          column: 1
        }
      },
      "21": {
        start: {
          line: 171,
          column: 45
        },
        end: {
          line: 176,
          column: 2
        }
      },
      "22": {
        start: {
          line: 171,
          column: 61
        },
        end: {
          line: 176,
          column: 1
        }
      },
      "23": {
        start: {
          line: 177,
          column: 42
        },
        end: {
          line: 183,
          column: 2
        }
      },
      "24": {
        start: {
          line: 177,
          column: 69
        },
        end: {
          line: 183,
          column: 1
        }
      },
      "25": {
        start: {
          line: 184,
          column: 42
        },
        end: {
          line: 191,
          column: 2
        }
      },
      "26": {
        start: {
          line: 184,
          column: 55
        },
        end: {
          line: 191,
          column: 1
        }
      },
      "27": {
        start: {
          line: 185,
          column: 43
        },
        end: {
          line: 189,
          column: 5
        }
      },
      "28": {
        start: {
          line: 193,
          column: 35
        },
        end: {
          line: 209,
          column: 1
        }
      },
      "29": {
        start: {
          line: 194,
          column: 4
        },
        end: {
          line: 208,
          column: 5
        }
      },
      "30": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 197,
          column: 62
        }
      },
      "31": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 200,
          column: 40
        }
      },
      "32": {
        start: {
          line: 205,
          column: 12
        },
        end: {
          line: 205,
          column: 39
        }
      },
      "33": {
        start: {
          line: 207,
          column: 12
        },
        end: {
          line: 207,
          column: 39
        }
      },
      "34": {
        start: {
          line: 210,
          column: 39
        },
        end: {
          line: 220,
          column: 1
        }
      },
      "35": {
        start: {
          line: 211,
          column: 4
        },
        end: {
          line: 219,
          column: 5
        }
      },
      "36": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 213,
          column: 34
        }
      },
      "37": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 216,
          column: 58
        }
      },
      "38": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 218,
          column: 22
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 168,
            column: 42
          },
          end: {
            line: 168,
            column: 43
          }
        },
        loc: {
          start: {
            line: 168,
            column: 49
          },
          end: {
            line: 170,
            column: 1
          }
        },
        line: 168
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 171,
            column: 45
          },
          end: {
            line: 171,
            column: 46
          }
        },
        loc: {
          start: {
            line: 171,
            column: 61
          },
          end: {
            line: 176,
            column: 1
          }
        },
        line: 171
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 177,
            column: 42
          },
          end: {
            line: 177,
            column: 43
          }
        },
        loc: {
          start: {
            line: 177,
            column: 69
          },
          end: {
            line: 183,
            column: 1
          }
        },
        line: 177
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 184,
            column: 42
          },
          end: {
            line: 184,
            column: 43
          }
        },
        loc: {
          start: {
            line: 184,
            column: 55
          },
          end: {
            line: 191,
            column: 1
          }
        },
        line: 184
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 185,
            column: 24
          },
          end: {
            line: 185,
            column: 25
          }
        },
        loc: {
          start: {
            line: 185,
            column: 43
          },
          end: {
            line: 189,
            column: 5
          }
        },
        line: 185
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 193,
            column: 35
          },
          end: {
            line: 193,
            column: 36
          }
        },
        loc: {
          start: {
            line: 193,
            column: 56
          },
          end: {
            line: 209,
            column: 1
          }
        },
        line: 193
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 210,
            column: 39
          },
          end: {
            line: 210,
            column: 40
          }
        },
        loc: {
          start: {
            line: 210,
            column: 53
          },
          end: {
            line: 220,
            column: 1
          }
        },
        line: 210
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 194,
            column: 4
          },
          end: {
            line: 208,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 195,
            column: 8
          },
          end: {
            line: 195,
            column: 23
          }
        }, {
          start: {
            line: 196,
            column: 8
          },
          end: {
            line: 197,
            column: 62
          }
        }, {
          start: {
            line: 198,
            column: 8
          },
          end: {
            line: 198,
            column: 18
          }
        }, {
          start: {
            line: 199,
            column: 8
          },
          end: {
            line: 200,
            column: 40
          }
        }, {
          start: {
            line: 201,
            column: 8
          },
          end: {
            line: 201,
            column: 24
          }
        }, {
          start: {
            line: 202,
            column: 8
          },
          end: {
            line: 202,
            column: 28
          }
        }, {
          start: {
            line: 203,
            column: 8
          },
          end: {
            line: 203,
            column: 22
          }
        }, {
          start: {
            line: 204,
            column: 8
          },
          end: {
            line: 205,
            column: 39
          }
        }, {
          start: {
            line: 206,
            column: 8
          },
          end: {
            line: 207,
            column: 39
          }
        }],
        line: 194
      },
      "1": {
        loc: {
          start: {
            line: 197,
            column: 19
          },
          end: {
            line: 197,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 197,
            column: 19
          },
          end: {
            line: 197,
            column: 39
          }
        }, {
          start: {
            line: 197,
            column: 43
          },
          end: {
            line: 197,
            column: 61
          }
        }],
        line: 197
      },
      "2": {
        loc: {
          start: {
            line: 211,
            column: 4
          },
          end: {
            line: 219,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 212,
            column: 8
          },
          end: {
            line: 213,
            column: 34
          }
        }, {
          start: {
            line: 214,
            column: 8
          },
          end: {
            line: 214,
            column: 21
          }
        }, {
          start: {
            line: 215,
            column: 8
          },
          end: {
            line: 216,
            column: 58
          }
        }, {
          start: {
            line: 217,
            column: 8
          },
          end: {
            line: 218,
            column: 22
          }
        }],
        line: 211
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0, 0, 0, 0, 0, 0, 0, 0],
      "1": [0, 0],
      "2": [0, 0, 0, 0]
    },
    inputSourceMap: {
      file: "/Users/peterkrzyzek/Development/clickup-mcp-server/src/schemas/views-schemas.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/peterkrzyzek/Development/clickup-mcp-server/src/schemas/views-schemas.ts"],
      sourcesContent: ["import { z } from 'zod';\n\n// Base view types\nexport const ViewTypeSchema = z.enum([\n  'list',\n  'board',\n  'calendar',\n  'gantt',\n  'timeline',\n  'table',\n  'form',\n  'chat',\n  'workload',\n  'activity',\n  'map',\n  'embed'\n]);\n\n// View access levels\nexport const ViewAccessSchema = z.enum([\n  'private',\n  'shared',\n  'public'\n]);\n\n// Filter operators\nexport const FilterOperatorSchema = z.enum([\n  'equals',\n  'not_equals',\n  'contains',\n  'not_contains',\n  'starts_with',\n  'ends_with',\n  'is_empty',\n  'is_not_empty',\n  'greater_than',\n  'less_than',\n  'greater_than_or_equal',\n  'less_than_or_equal',\n  'between',\n  'not_between',\n  'in',\n  'not_in',\n  'is_set',\n  'is_not_set'\n]);\n\n// View filter schema\nexport const ViewFilterSchema = z.object({\n  field: z.string(),\n  operator: FilterOperatorSchema,\n  value: z.union([z.string(), z.number(), z.array(z.string()), z.array(z.number())]).optional(),\n  values: z.array(z.union([z.string(), z.number()])).optional()\n});\n\n// View grouping schema\nexport const ViewGroupingSchema = z.object({\n  field: z.string(),\n  collapsed: z.boolean().default(false),\n  order: z.enum(['asc', 'desc']).default('asc')\n});\n\n// View sorting schema\nexport const ViewSortingSchema = z.object({\n  field: z.string(),\n  order: z.enum(['asc', 'desc']).default('asc')\n});\n\n// Board view specific settings\nexport const BoardViewSettingsSchema = z.object({\n  columns: z.array(z.object({\n    id: z.string(),\n    name: z.string(),\n    color: z.string().optional(),\n    orderindex: z.number().optional()\n  })).optional(),\n  swimlanes: z.object({\n    field: z.string(),\n    collapsed: z.boolean().default(false)\n  }).optional(),\n  card_size: z.enum(['small', 'medium', 'large']).default('medium')\n});\n\n// Calendar view specific settings\nexport const CalendarViewSettingsSchema = z.object({\n  date_field: z.string(),\n  view_mode: z.enum(['month', 'week', 'day']).default('month'),\n  show_weekends: z.boolean().default(true),\n  start_day: z.enum(['sunday', 'monday']).default('sunday')\n});\n\n// Gantt view specific settings\nexport const GanttViewSettingsSchema = z.object({\n  start_date_field: z.string(),\n  due_date_field: z.string(),\n  show_dependencies: z.boolean().default(true),\n  show_critical_path: z.boolean().default(false),\n  zoom_level: z.enum(['hours', 'days', 'weeks', 'months']).default('days')\n});\n\n// Table view specific settings\nexport const TableViewSettingsSchema = z.object({\n  columns: z.array(z.object({\n    field: z.string(),\n    width: z.number().optional(),\n    visible: z.boolean().default(true),\n    orderindex: z.number().optional()\n  })),\n  row_height: z.enum(['compact', 'comfortable', 'spacious']).default('comfortable')\n});\n\n// View settings union\nexport const ViewSettingsSchema = z.union([\n  BoardViewSettingsSchema,\n  CalendarViewSettingsSchema,\n  GanttViewSettingsSchema,\n  TableViewSettingsSchema,\n  z.object({}) // For other view types without specific settings\n]);\n\n// Create view schema\nexport const CreateViewSchema = z.object({\n  parent_id: z.string(),\n  parent_type: z.enum(['space', 'folder', 'list']),\n  name: z.string().min(1),\n  type: ViewTypeSchema,\n  access: ViewAccessSchema.default('private'),\n  filters: z.array(ViewFilterSchema).optional(),\n  grouping: z.array(ViewGroupingSchema).optional(),\n  sorting: z.array(ViewSortingSchema).optional(),\n  settings: ViewSettingsSchema.optional(),\n  description: z.string().optional()\n});\n\n// Update view schema\nexport const UpdateViewSchema = z.object({\n  view_id: z.string(),\n  name: z.string().optional(),\n  access: ViewAccessSchema.optional(),\n  filters: z.array(ViewFilterSchema).optional(),\n  grouping: z.array(ViewGroupingSchema).optional(),\n  sorting: z.array(ViewSortingSchema).optional(),\n  settings: ViewSettingsSchema.optional(),\n  description: z.string().optional()\n});\n\n// Get views filter schema\nexport const GetViewsFilterSchema = z.object({\n  parent_id: z.string(),\n  parent_type: z.enum(['space', 'folder', 'list']),\n  type: ViewTypeSchema.optional(),\n  access: ViewAccessSchema.optional()\n});\n\n// Set view filters schema\nexport const SetViewFiltersSchema = z.object({\n  view_id: z.string(),\n  filters: z.array(ViewFilterSchema)\n});\n\n// Set view grouping schema\nexport const SetViewGroupingSchema = z.object({\n  view_id: z.string(),\n  grouping: z.array(ViewGroupingSchema)\n});\n\n// Set view sorting schema\nexport const SetViewSortingSchema = z.object({\n  view_id: z.string(),\n  sorting: z.array(ViewSortingSchema)\n});\n\n// Update view settings schema\nexport const UpdateViewSettingsSchema = z.object({\n  view_id: z.string(),\n  settings: ViewSettingsSchema\n});\n\n// View sharing schema\nexport const ViewSharingSchema = z.object({\n  view_id: z.string(),\n  access: ViewAccessSchema,\n  password: z.string().optional(),\n  expires_at: z.number().optional() // Unix timestamp\n});\n\n// Type exports\nexport type ViewType = z.infer<typeof ViewTypeSchema>;\nexport type ViewAccess = z.infer<typeof ViewAccessSchema>;\nexport type FilterOperator = z.infer<typeof FilterOperatorSchema>;\nexport type ViewFilter = z.infer<typeof ViewFilterSchema>;\nexport type ViewGrouping = z.infer<typeof ViewGroupingSchema>;\nexport type ViewSorting = z.infer<typeof ViewSortingSchema>;\nexport type BoardViewSettings = z.infer<typeof BoardViewSettingsSchema>;\nexport type CalendarViewSettings = z.infer<typeof CalendarViewSettingsSchema>;\nexport type GanttViewSettings = z.infer<typeof GanttViewSettingsSchema>;\nexport type TableViewSettings = z.infer<typeof TableViewSettingsSchema>;\nexport type ViewSettings = z.infer<typeof ViewSettingsSchema>;\nexport type CreateViewRequest = z.infer<typeof CreateViewSchema>;\nexport type UpdateViewRequest = z.infer<typeof UpdateViewSchema>;\nexport type GetViewsFilter = z.infer<typeof GetViewsFilterSchema>;\nexport type SetViewFiltersRequest = z.infer<typeof SetViewFiltersSchema>;\nexport type SetViewGroupingRequest = z.infer<typeof SetViewGroupingSchema>;\nexport type SetViewSortingRequest = z.infer<typeof SetViewSortingSchema>;\nexport type UpdateViewSettingsRequest = z.infer<typeof UpdateViewSettingsSchema>;\nexport type ViewSharingRequest = z.infer<typeof ViewSharingSchema>;\n\n// Utility functions\nexport const createDefaultBoardSettings = (): BoardViewSettings => ({\n  card_size: 'medium'\n});\n\nexport const createDefaultCalendarSettings = (dateField: string): CalendarViewSettings => ({\n  date_field: dateField,\n  view_mode: 'month',\n  show_weekends: true,\n  start_day: 'sunday'\n});\n\nexport const createDefaultGanttSettings = (startField: string, dueField: string): GanttViewSettings => ({\n  start_date_field: startField,\n  due_date_field: dueField,\n  show_dependencies: true,\n  show_critical_path: false,\n  zoom_level: 'days'\n});\n\nexport const createDefaultTableSettings = (fields: string[]): TableViewSettings => ({\n  columns: fields.map((field, index) => ({\n    field,\n    visible: true,\n    orderindex: index\n  })),\n  row_height: 'comfortable'\n});\n\n// Filter validation helpers\nexport const validateFilterValue = (operator: FilterOperator, value: any): boolean => {\n  switch (operator) {\n    case 'between':\n    case 'not_between':\n      return Array.isArray(value) && value.length === 2;\n    case 'in':\n    case 'not_in':\n      return Array.isArray(value);\n    case 'is_empty':\n    case 'is_not_empty':\n    case 'is_set':\n    case 'is_not_set':\n      return value === undefined;\n    default:\n      return value !== undefined;\n  }\n};\n\nexport const getRequiredFilterFields = (viewType: ViewType): string[] => {\n  switch (viewType) {\n    case 'calendar':\n      return ['date_field'];\n    case 'gantt':\n    case 'timeline':\n      return ['start_date_field', 'due_date_field'];\n    default:\n      return [];\n  }\n};\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5f61058d9917f2d68f423f2ff458f4b922b15e46"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_15rn5dk4aj = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_15rn5dk4aj();
import { z } from 'zod';
// Base view types
export const ViewTypeSchema =
/* istanbul ignore next */
(cov_15rn5dk4aj().s[0]++, z.enum(['list', 'board', 'calendar', 'gantt', 'timeline', 'table', 'form', 'chat', 'workload', 'activity', 'map', 'embed']));
// View access levels
export const ViewAccessSchema =
/* istanbul ignore next */
(cov_15rn5dk4aj().s[1]++, z.enum(['private', 'shared', 'public']));
// Filter operators
export const FilterOperatorSchema =
/* istanbul ignore next */
(cov_15rn5dk4aj().s[2]++, z.enum(['equals', 'not_equals', 'contains', 'not_contains', 'starts_with', 'ends_with', 'is_empty', 'is_not_empty', 'greater_than', 'less_than', 'greater_than_or_equal', 'less_than_or_equal', 'between', 'not_between', 'in', 'not_in', 'is_set', 'is_not_set']));
// View filter schema
export const ViewFilterSchema =
/* istanbul ignore next */
(cov_15rn5dk4aj().s[3]++, z.object({
  field: z.string(),
  operator: FilterOperatorSchema,
  value: z.union([z.string(), z.number(), z.array(z.string()), z.array(z.number())]).optional(),
  values: z.array(z.union([z.string(), z.number()])).optional()
}));
// View grouping schema
export const ViewGroupingSchema =
/* istanbul ignore next */
(cov_15rn5dk4aj().s[4]++, z.object({
  field: z.string(),
  collapsed: z.boolean().default(false),
  order: z.enum(['asc', 'desc']).default('asc')
}));
// View sorting schema
export const ViewSortingSchema =
/* istanbul ignore next */
(cov_15rn5dk4aj().s[5]++, z.object({
  field: z.string(),
  order: z.enum(['asc', 'desc']).default('asc')
}));
// Board view specific settings
export const BoardViewSettingsSchema =
/* istanbul ignore next */
(cov_15rn5dk4aj().s[6]++, z.object({
  columns: z.array(z.object({
    id: z.string(),
    name: z.string(),
    color: z.string().optional(),
    orderindex: z.number().optional()
  })).optional(),
  swimlanes: z.object({
    field: z.string(),
    collapsed: z.boolean().default(false)
  }).optional(),
  card_size: z.enum(['small', 'medium', 'large']).default('medium')
}));
// Calendar view specific settings
export const CalendarViewSettingsSchema =
/* istanbul ignore next */
(cov_15rn5dk4aj().s[7]++, z.object({
  date_field: z.string(),
  view_mode: z.enum(['month', 'week', 'day']).default('month'),
  show_weekends: z.boolean().default(true),
  start_day: z.enum(['sunday', 'monday']).default('sunday')
}));
// Gantt view specific settings
export const GanttViewSettingsSchema =
/* istanbul ignore next */
(cov_15rn5dk4aj().s[8]++, z.object({
  start_date_field: z.string(),
  due_date_field: z.string(),
  show_dependencies: z.boolean().default(true),
  show_critical_path: z.boolean().default(false),
  zoom_level: z.enum(['hours', 'days', 'weeks', 'months']).default('days')
}));
// Table view specific settings
export const TableViewSettingsSchema =
/* istanbul ignore next */
(cov_15rn5dk4aj().s[9]++, z.object({
  columns: z.array(z.object({
    field: z.string(),
    width: z.number().optional(),
    visible: z.boolean().default(true),
    orderindex: z.number().optional()
  })),
  row_height: z.enum(['compact', 'comfortable', 'spacious']).default('comfortable')
}));
// View settings union
export const ViewSettingsSchema =
/* istanbul ignore next */
(cov_15rn5dk4aj().s[10]++, z.union([BoardViewSettingsSchema, CalendarViewSettingsSchema, GanttViewSettingsSchema, TableViewSettingsSchema, z.object({}) // For other view types without specific settings
]));
// Create view schema
export const CreateViewSchema =
/* istanbul ignore next */
(cov_15rn5dk4aj().s[11]++, z.object({
  parent_id: z.string(),
  parent_type: z.enum(['space', 'folder', 'list']),
  name: z.string().min(1),
  type: ViewTypeSchema,
  access: ViewAccessSchema.default('private'),
  filters: z.array(ViewFilterSchema).optional(),
  grouping: z.array(ViewGroupingSchema).optional(),
  sorting: z.array(ViewSortingSchema).optional(),
  settings: ViewSettingsSchema.optional(),
  description: z.string().optional()
}));
// Update view schema
export const UpdateViewSchema =
/* istanbul ignore next */
(cov_15rn5dk4aj().s[12]++, z.object({
  view_id: z.string(),
  name: z.string().optional(),
  access: ViewAccessSchema.optional(),
  filters: z.array(ViewFilterSchema).optional(),
  grouping: z.array(ViewGroupingSchema).optional(),
  sorting: z.array(ViewSortingSchema).optional(),
  settings: ViewSettingsSchema.optional(),
  description: z.string().optional()
}));
// Get views filter schema
export const GetViewsFilterSchema =
/* istanbul ignore next */
(cov_15rn5dk4aj().s[13]++, z.object({
  parent_id: z.string(),
  parent_type: z.enum(['space', 'folder', 'list']),
  type: ViewTypeSchema.optional(),
  access: ViewAccessSchema.optional()
}));
// Set view filters schema
export const SetViewFiltersSchema =
/* istanbul ignore next */
(cov_15rn5dk4aj().s[14]++, z.object({
  view_id: z.string(),
  filters: z.array(ViewFilterSchema)
}));
// Set view grouping schema
export const SetViewGroupingSchema =
/* istanbul ignore next */
(cov_15rn5dk4aj().s[15]++, z.object({
  view_id: z.string(),
  grouping: z.array(ViewGroupingSchema)
}));
// Set view sorting schema
export const SetViewSortingSchema =
/* istanbul ignore next */
(cov_15rn5dk4aj().s[16]++, z.object({
  view_id: z.string(),
  sorting: z.array(ViewSortingSchema)
}));
// Update view settings schema
export const UpdateViewSettingsSchema =
/* istanbul ignore next */
(cov_15rn5dk4aj().s[17]++, z.object({
  view_id: z.string(),
  settings: ViewSettingsSchema
}));
// View sharing schema
export const ViewSharingSchema =
/* istanbul ignore next */
(cov_15rn5dk4aj().s[18]++, z.object({
  view_id: z.string(),
  access: ViewAccessSchema,
  password: z.string().optional(),
  expires_at: z.number().optional() // Unix timestamp
}));
// Utility functions
/* istanbul ignore next */
cov_15rn5dk4aj().s[19]++;
export const createDefaultBoardSettings = () => {
  /* istanbul ignore next */
  cov_15rn5dk4aj().f[0]++;
  cov_15rn5dk4aj().s[20]++;
  return {
    card_size: 'medium'
  };
};
/* istanbul ignore next */
cov_15rn5dk4aj().s[21]++;
export const createDefaultCalendarSettings = dateField => {
  /* istanbul ignore next */
  cov_15rn5dk4aj().f[1]++;
  cov_15rn5dk4aj().s[22]++;
  return {
    date_field: dateField,
    view_mode: 'month',
    show_weekends: true,
    start_day: 'sunday'
  };
};
/* istanbul ignore next */
cov_15rn5dk4aj().s[23]++;
export const createDefaultGanttSettings = (startField, dueField) => {
  /* istanbul ignore next */
  cov_15rn5dk4aj().f[2]++;
  cov_15rn5dk4aj().s[24]++;
  return {
    start_date_field: startField,
    due_date_field: dueField,
    show_dependencies: true,
    show_critical_path: false,
    zoom_level: 'days'
  };
};
/* istanbul ignore next */
cov_15rn5dk4aj().s[25]++;
export const createDefaultTableSettings = fields => {
  /* istanbul ignore next */
  cov_15rn5dk4aj().f[3]++;
  cov_15rn5dk4aj().s[26]++;
  return {
    columns: fields.map((field, index) => {
      /* istanbul ignore next */
      cov_15rn5dk4aj().f[4]++;
      cov_15rn5dk4aj().s[27]++;
      return {
        field,
        visible: true,
        orderindex: index
      };
    }),
    row_height: 'comfortable'
  };
};
// Filter validation helpers
/* istanbul ignore next */
cov_15rn5dk4aj().s[28]++;
export const validateFilterValue = (operator, value) => {
  /* istanbul ignore next */
  cov_15rn5dk4aj().f[5]++;
  cov_15rn5dk4aj().s[29]++;
  switch (operator) {
    case 'between':
      /* istanbul ignore next */
      cov_15rn5dk4aj().b[0][0]++;
    case 'not_between':
      /* istanbul ignore next */
      cov_15rn5dk4aj().b[0][1]++;
      cov_15rn5dk4aj().s[30]++;
      return /* istanbul ignore next */(cov_15rn5dk4aj().b[1][0]++, Array.isArray(value)) &&
      /* istanbul ignore next */
      (cov_15rn5dk4aj().b[1][1]++, value.length === 2);
    case 'in':
      /* istanbul ignore next */
      cov_15rn5dk4aj().b[0][2]++;
    case 'not_in':
      /* istanbul ignore next */
      cov_15rn5dk4aj().b[0][3]++;
      cov_15rn5dk4aj().s[31]++;
      return Array.isArray(value);
    case 'is_empty':
      /* istanbul ignore next */
      cov_15rn5dk4aj().b[0][4]++;
    case 'is_not_empty':
      /* istanbul ignore next */
      cov_15rn5dk4aj().b[0][5]++;
    case 'is_set':
      /* istanbul ignore next */
      cov_15rn5dk4aj().b[0][6]++;
    case 'is_not_set':
      /* istanbul ignore next */
      cov_15rn5dk4aj().b[0][7]++;
      cov_15rn5dk4aj().s[32]++;
      return value === undefined;
    default:
      /* istanbul ignore next */
      cov_15rn5dk4aj().b[0][8]++;
      cov_15rn5dk4aj().s[33]++;
      return value !== undefined;
  }
};
/* istanbul ignore next */
cov_15rn5dk4aj().s[34]++;
export const getRequiredFilterFields = viewType => {
  /* istanbul ignore next */
  cov_15rn5dk4aj().f[6]++;
  cov_15rn5dk4aj().s[35]++;
  switch (viewType) {
    case 'calendar':
      /* istanbul ignore next */
      cov_15rn5dk4aj().b[2][0]++;
      cov_15rn5dk4aj().s[36]++;
      return ['date_field'];
    case 'gantt':
      /* istanbul ignore next */
      cov_15rn5dk4aj().b[2][1]++;
    case 'timeline':
      /* istanbul ignore next */
      cov_15rn5dk4aj().b[2][2]++;
      cov_15rn5dk4aj().s[37]++;
      return ['start_date_field', 'due_date_field'];
    default:
      /* istanbul ignore next */
      cov_15rn5dk4aj().b[2][3]++;
      cov_15rn5dk4aj().s[38]++;
      return [];
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,