{"version":3,"names":["z","createClickUpClient","createChecklistsClient","clickUpClient","cov_291caxep2r","s","checklistsClient","setupChecklistTools","server","f","tool","task_id","string","describe","name","checklist","createChecklist","content","type","text","JSON","stringify","error","console","message","isError","checklist_id","updateChecklist","result","deleteChecklist","assignee","number","optional","resolved","boolean","itemParams","undefined","b","checklistItem","createChecklistItem","checklist_item_id","updateChecklistItem","deleteChecklistItem"],"sources":["/Users/peterkrzyzek/Development/clickup-mcp-server/src/tools/checklist-tools.ts"],"sourcesContent":["import { McpServer } from '@modelcontextprotocol/sdk/server/mcp.js';\nimport { z } from 'zod';\nimport { createClickUpClient } from '../clickup-client/index.js';\nimport { createChecklistsClient, CreateChecklistParams, UpdateChecklistParams, CreateChecklistItemParams, UpdateChecklistItemParams } from '../clickup-client/checklists.js';\n\n// Create clients\nconst clickUpClient = createClickUpClient();\nconst checklistsClient = createChecklistsClient(clickUpClient);\n\nexport function setupChecklistTools(server: McpServer): void {\n  // Register create_checklist tool\n  server.tool(\n    'create_checklist',\n    'Create a new checklist in a ClickUp task. Returns the created checklist details.',\n    {\n      task_id: z.string().describe('The ID of the task to create the checklist in'),\n      name: z.string().describe('The name of the checklist')\n    },\n    async ({ task_id, name }) => {\n      try {\n        const checklist = await checklistsClient.createChecklist(task_id, { name } as CreateChecklistParams);\n        \n        return {\n          content: [{ type: 'text', text: JSON.stringify(checklist, null, 2) }]\n        };\n      } catch (error: any) {\n        console.error('Error creating checklist:', error);\n        return {\n          content: [{ type: 'text', text: `Error creating checklist: ${error.message}` }],\n          isError: true\n        };\n      }\n    }\n  );\n\n  // Register update_checklist tool\n  server.tool(\n    'update_checklist',\n    'Update an existing ClickUp checklist\\'s name.',\n    {\n      checklist_id: z.string().describe('The ID of the checklist to update'),\n      name: z.string().describe('The new name of the checklist')\n    },\n    async ({ checklist_id, name }) => {\n      try {\n        const checklist = await checklistsClient.updateChecklist(checklist_id, { name });\n        \n        return {\n          content: [{ type: 'text', text: JSON.stringify(checklist, null, 2) }]\n        };\n      } catch (error: any) {\n        console.error('Error updating checklist:', error);\n        return {\n          content: [{ type: 'text', text: `Error updating checklist: ${error.message}` }],\n          isError: true\n        };\n      }\n    }\n  );\n\n  // Register delete_checklist tool\n  server.tool(\n    'delete_checklist',\n    'Delete a checklist from a ClickUp task. Removes the checklist and all its items.',\n    {\n      checklist_id: z.string().describe('The ID of the checklist to delete')\n    },\n    async ({ checklist_id }) => {\n      try {\n        const result = await checklistsClient.deleteChecklist(checklist_id);\n        \n        return {\n          content: [{ type: 'text', text: JSON.stringify(result, null, 2) }]\n        };\n      } catch (error: any) {\n        console.error('Error deleting checklist:', error);\n        return {\n          content: [{ type: 'text', text: `Error deleting checklist: ${error.message}` }],\n          isError: true\n        };\n      }\n    }\n  );\n\n  // Register create_checklist_item tool\n  server.tool(\n    'create_checklist_item',\n    'Create a new item in a ClickUp checklist. Supports optional assignee and resolved status.',\n    {\n      checklist_id: z.string().describe('The ID of the checklist to create the item in'),\n      name: z.string().describe('The name of the checklist item'),\n      assignee: z.number().optional().describe('The ID of the user to assign to the checklist item'),\n      resolved: z.boolean().optional().describe('Whether the checklist item is resolved')\n    },\n    async ({ checklist_id, name, assignee, resolved }) => {\n      try {\n        const itemParams: CreateChecklistItemParams = { name };\n        if (assignee !== undefined) itemParams.assignee = assignee;\n        if (resolved !== undefined) itemParams.resolved = resolved;\n        \n        const checklistItem = await checklistsClient.createChecklistItem(checklist_id, itemParams);\n        \n        return {\n          content: [{ type: 'text', text: JSON.stringify(checklistItem, null, 2) }]\n        };\n      } catch (error: any) {\n        console.error('Error creating checklist item:', error);\n        return {\n          content: [{ type: 'text', text: `Error creating checklist item: ${error.message}` }],\n          isError: true\n        };\n      }\n    }\n  );\n\n  // Register update_checklist_item tool\n  server.tool(\n    'update_checklist_item',\n    'Update an existing ClickUp checklist item\\'s properties including name, assignee, and resolved status.',\n    {\n      checklist_id: z.string().describe('The ID of the checklist containing the item'),\n      checklist_item_id: z.string().describe('The ID of the checklist item to update'),\n      name: z.string().optional().describe('The new name of the checklist item'),\n      assignee: z.number().optional().describe('The ID of the user to assign to the checklist item'),\n      resolved: z.boolean().optional().describe('Whether the checklist item is resolved')\n    },\n    async ({ checklist_id, checklist_item_id, name, assignee, resolved }) => {\n      try {\n        const itemParams: UpdateChecklistItemParams = {};\n        if (name !== undefined) itemParams.name = name;\n        if (assignee !== undefined) itemParams.assignee = assignee;\n        if (resolved !== undefined) itemParams.resolved = resolved;\n        \n        const checklistItem = await checklistsClient.updateChecklistItem(checklist_id, checklist_item_id, itemParams);\n        \n        return {\n          content: [{ type: 'text', text: JSON.stringify(checklistItem, null, 2) }]\n        };\n      } catch (error: any) {\n        console.error('Error updating checklist item:', error);\n        return {\n          content: [{ type: 'text', text: `Error updating checklist item: ${error.message}` }],\n          isError: true\n        };\n      }\n    }\n  );\n\n  // Register delete_checklist_item tool\n  server.tool(\n    'delete_checklist_item',\n    'Delete an item from a ClickUp checklist.',\n    {\n      checklist_id: z.string().describe('The ID of the checklist containing the item'),\n      checklist_item_id: z.string().describe('The ID of the checklist item to delete')\n    },\n    async ({ checklist_id, checklist_item_id }) => {\n      try {\n        const result = await checklistsClient.deleteChecklistItem(checklist_id, checklist_item_id);\n        \n        return {\n          content: [{ type: 'text', text: JSON.stringify(result, null, 2) }]\n        };\n      } catch (error: any) {\n        console.error('Error deleting checklist item:', error);\n        return {\n          content: [{ type: 'text', text: `Error deleting checklist item: ${error.message}` }],\n          isError: true\n        };\n      }\n    }\n  );\n}\n"],"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","ignoreList":[]}