{"version":3,"names":["cov_z0cagkg42","actualCoverage","ResourceTemplate","createClickUpClient","createListsClient","clickUpClient","s","listsClient","setupListResources","server","f","resource","list","undefined","description","uri","params","space_id","console","log","result","getListsFromSpace","contents","toString","mimeType","text","JSON","stringify","error","Error","message","list_id","getList"],"sources":["/Users/peterkrzyzek/Development/clickup-mcp-server/src/resources/list-resources.ts"],"sourcesContent":["import { McpServer, ResourceTemplate } from '@modelcontextprotocol/sdk/server/mcp.js';\nimport { createClickUpClient } from '../clickup-client/index.js';\nimport { createListsClient } from '../clickup-client/lists.js';\n\n// Create clients\nconst clickUpClient = createClickUpClient();\nconst listsClient = createListsClient(clickUpClient);\n\nexport function setupListResources(server: McpServer): void {\n  // Register space lists resource\n  server.resource(\n    'space-lists',\n    new ResourceTemplate('clickup://space/{space_id}/lists', { list: undefined }),\n    {\n      description: 'Get all lists directly in a ClickUp space (not in folders), including their names and settings.'\n    },\n    async (uri, params) => {\n      try {\n        const space_id = params.space_id as string;\n        console.log('[ListResources] Fetching lists for space:', space_id);\n        const result = await listsClient.getListsFromSpace(space_id);\n        console.log('[ListResources] Got lists:', result);\n        \n        return {\n          contents: [\n            {\n              uri: uri.toString(),\n              mimeType: 'application/json',\n              text: JSON.stringify(result, null, 2),\n            },\n          ],\n        };\n      } catch (error: any) {\n        console.error('[ListResources] Error fetching space lists:', error);\n        throw new Error(`Error fetching space lists: ${error.message}`);\n      }\n    }\n  );\n\n  // Register list details resource\n  server.resource(\n    'list-details',\n    new ResourceTemplate('clickup://list/{list_id}', { list: undefined }),\n    {\n      description: 'Get detailed information about a specific ClickUp list, including its name, settings, and metadata.'\n    },\n    async (uri, params) => {\n      try {\n        const list_id = params.list_id as string;\n        console.log('[ListResources] Fetching list:', list_id);\n        const list = await listsClient.getList(list_id);\n        console.log('[ListResources] Got list:', list);\n        \n        return {\n          contents: [\n            {\n              uri: uri.toString(),\n              mimeType: 'application/json',\n              text: JSON.stringify(list, null, 2),\n            },\n          ],\n        };\n      } catch (error: any) {\n        console.error('[ListResources] Error fetching list:', error);\n        throw new Error(`Error fetching list: ${error.message}`);\n      }\n    }\n  );\n\n  // Add some example static resources for discoverability\n  server.resource(\n    'example-list',\n    'clickup://list/901109776097',\n    {\n      description: 'An example list resource demonstrating the list details format.'\n    },\n    async (uri) => {\n      try {\n        const list_id = '901109776097';\n        console.log('[ListResources] Fetching example list:', list_id);\n        const list = await listsClient.getList(list_id);\n        console.log('[ListResources] Got list:', list);\n        \n        return {\n          contents: [\n            {\n              uri: uri.toString(),\n              mimeType: 'application/json',\n              text: JSON.stringify(list, null, 2),\n            },\n          ],\n        };\n      } catch (error: any) {\n        console.error('[ListResources] Error fetching example list:', error);\n        throw new Error(`Error fetching example list: ${error.message}`);\n      }\n    }\n  );\n\n  server.resource(\n    'example-space-lists',\n    'clickup://space/90113637923/lists',\n    {\n      description: 'An example space lists resource demonstrating the list data format.'\n    },\n    async (uri) => {\n      try {\n        const space_id = '90113637923';\n        console.log('[ListResources] Fetching lists for example space:', space_id);\n        const result = await listsClient.getListsFromSpace(space_id);\n        console.log('[ListResources] Got lists:', result);\n        \n        return {\n          contents: [\n            {\n              uri: uri.toString(),\n              mimeType: 'application/json',\n              text: JSON.stringify(result, null, 2),\n            },\n          ],\n        };\n      } catch (error: any) {\n        console.error('[ListResources] Error fetching example space lists:', error);\n        throw new Error(`Error fetching example space lists: ${error.message}`);\n      }\n    }\n  );\n}\n"],"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","ignoreList":[]}