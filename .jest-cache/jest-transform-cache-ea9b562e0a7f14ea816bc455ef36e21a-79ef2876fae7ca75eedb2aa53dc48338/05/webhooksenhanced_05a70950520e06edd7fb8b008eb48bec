b7d3d289f8d2afd2c460b2f5397dc460
/* istanbul ignore next */
function cov_ectpxc8ii() {
  var path = "/Users/peterkrzyzek/Development/clickup-mcp-server/src/clickup-client/webhooks-enhanced.ts";
  var hash = "bddb61a98355c53701fd8cd5a7b49ac2ab420e60";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/peterkrzyzek/Development/clickup-mcp-server/src/clickup-client/webhooks-enhanced.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 8
        },
        end: {
          line: 5,
          column: 28
        }
      },
      "1": {
        start: {
          line: 11,
          column: 25
        },
        end: {
          line: 16,
          column: 10
        }
      },
      "2": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 24
        }
      },
      "3": {
        start: {
          line: 23,
          column: 23
        },
        end: {
          line: 23,
          column: 44
        }
      },
      "4": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 26,
          column: 9
        }
      },
      "5": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 25,
          column: 51
        }
      },
      "6": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 29,
          column: 9
        }
      },
      "7": {
        start: {
          line: 28,
          column: 12
        },
        end: {
          line: 28,
          column: 59
        }
      },
      "8": {
        start: {
          line: 30,
          column: 28
        },
        end: {
          line: 30,
          column: 45
        }
      },
      "9": {
        start: {
          line: 31,
          column: 25
        },
        end: {
          line: 31,
          column: 102
        }
      },
      "10": {
        start: {
          line: 32,
          column: 25
        },
        end: {
          line: 32,
          column: 49
        }
      },
      "11": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 24
        }
      },
      "12": {
        start: {
          line: 39,
          column: 25
        },
        end: {
          line: 39,
          column: 64
        }
      },
      "13": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 24
        }
      },
      "14": {
        start: {
          line: 46,
          column: 27
        },
        end: {
          line: 46,
          column: 29
        }
      },
      "15": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 48,
          column: 51
        }
      },
      "16": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 48,
          column: 51
        }
      },
      "17": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 50,
          column: 47
        }
      },
      "18": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 50,
          column: 47
        }
      },
      "19": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 52,
          column: 67
        }
      },
      "20": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 52,
          column: 67
        }
      },
      "21": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 54,
          column: 47
        }
      },
      "22": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 54,
          column: 47
        }
      },
      "23": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 56,
          column: 47
        }
      },
      "24": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 56,
          column: 47
        }
      },
      "25": {
        start: {
          line: 57,
          column: 25
        },
        end: {
          line: 57,
          column: 85
        }
      },
      "26": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 24
        }
      },
      "27": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 51
        }
      },
      "28": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 65,
          column: 33
        }
      },
      "29": {
        start: {
          line: 71,
          column: 23
        },
        end: {
          line: 71,
          column: 44
        }
      },
      "30": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 74,
          column: 9
        }
      },
      "31": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 53
        }
      },
      "32": {
        start: {
          line: 75,
          column: 28
        },
        end: {
          line: 75,
          column: 45
        }
      },
      "33": {
        start: {
          line: 76,
          column: 25
        },
        end: {
          line: 76,
          column: 94
        }
      },
      "34": {
        start: {
          line: 77,
          column: 25
        },
        end: {
          line: 77,
          column: 49
        }
      },
      "35": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 24
        }
      },
      "36": {
        start: {
          line: 84,
          column: 25
        },
        end: {
          line: 84,
          column: 70
        }
      },
      "37": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 24
        }
      },
      "38": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 103,
          column: 9
        }
      },
      "39": {
        start: {
          line: 92,
          column: 38
        },
        end: {
          line: 95,
          column: 30
        }
      },
      "40": {
        start: {
          line: 97,
          column: 38
        },
        end: {
          line: 97,
          column: 78
        }
      },
      "41": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 98,
          column: 120
        }
      },
      "42": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 101,
          column: 72
        }
      },
      "43": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 102,
          column: 25
        }
      },
      "44": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 129,
          column: 9
        }
      },
      "45": {
        start: {
          line: 111,
          column: 37
        },
        end: {
          line: 115,
          column: 14
        }
      },
      "46": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 128,
          column: 13
        }
      },
      "47": {
        start: {
          line: 117,
          column: 16
        },
        end: {
          line: 127,
          column: 18
        }
      },
      "48": {
        start: {
          line: 130,
          column: 24
        },
        end: {
          line: 130,
          column: 39
        }
      },
      "49": {
        start: {
          line: 131,
          column: 29
        },
        end: {
          line: 135,
          column: 9
        }
      },
      "50": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 146,
          column: 10
        }
      },
      "51": {
        start: {
          line: 152,
          column: 23
        },
        end: {
          line: 152,
          column: 44
        }
      },
      "52": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 155,
          column: 9
        }
      },
      "53": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 154,
          column: 51
        }
      },
      "54": {
        start: {
          line: 156,
          column: 28
        },
        end: {
          line: 156,
          column: 45
        }
      },
      "55": {
        start: {
          line: 157,
          column: 25
        },
        end: {
          line: 157,
          column: 93
        }
      },
      "56": {
        start: {
          line: 158,
          column: 25
        },
        end: {
          line: 158,
          column: 49
        }
      },
      "57": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 159,
          column: 24
        }
      },
      "58": {
        start: {
          line: 165,
          column: 25
        },
        end: {
          line: 165,
          column: 112
        }
      },
      "59": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 166,
          column: 24
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 4,
            column: 5
          }
        },
        loc: {
          start: {
            line: 4,
            column: 26
          },
          end: {
            line: 6,
            column: 5
          }
        },
        line: 4
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 5
          }
        },
        loc: {
          start: {
            line: 10,
            column: 33
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 10
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 30
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 22
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        loc: {
          start: {
            line: 38,
            column: 32
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 38
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        },
        loc: {
          start: {
            line: 45,
            column: 33
          },
          end: {
            line: 59,
            column: 5
          }
        },
        line: 45
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 63,
            column: 5
          }
        },
        loc: {
          start: {
            line: 63,
            column: 35
          },
          end: {
            line: 66,
            column: 5
          }
        },
        line: 63
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 70,
            column: 4
          },
          end: {
            line: 70,
            column: 5
          }
        },
        loc: {
          start: {
            line: 70,
            column: 51
          },
          end: {
            line: 79,
            column: 5
          }
        },
        line: 70
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 83,
            column: 4
          },
          end: {
            line: 83,
            column: 5
          }
        },
        loc: {
          start: {
            line: 83,
            column: 33
          },
          end: {
            line: 86,
            column: 5
          }
        },
        line: 83
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 90,
            column: 4
          },
          end: {
            line: 90,
            column: 5
          }
        },
        loc: {
          start: {
            line: 90,
            column: 38
          },
          end: {
            line: 104,
            column: 5
          }
        },
        line: 90
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 108,
            column: 4
          },
          end: {
            line: 108,
            column: 5
          }
        },
        loc: {
          start: {
            line: 108,
            column: 34
          },
          end: {
            line: 147,
            column: 5
          }
        },
        line: 108
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 151,
            column: 4
          },
          end: {
            line: 151,
            column: 5
          }
        },
        loc: {
          start: {
            line: 151,
            column: 43
          },
          end: {
            line: 160,
            column: 5
          }
        },
        line: 151
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 164,
            column: 4
          },
          end: {
            line: 164,
            column: 5
          }
        },
        loc: {
          start: {
            line: 164,
            column: 50
          },
          end: {
            line: 167,
            column: 5
          }
        },
        line: 164
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 26,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 26,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "1": {
        loc: {
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 29,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 29,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "2": {
        loc: {
          start: {
            line: 31,
            column: 64
          },
          end: {
            line: 31,
            column: 100
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 31,
            column: 78
          },
          end: {
            line: 31,
            column: 95
          }
        }, {
          start: {
            line: 31,
            column: 98
          },
          end: {
            line: 31,
            column: 100
          }
        }],
        line: 31
      },
      "3": {
        loc: {
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 48,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 48,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "4": {
        loc: {
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 50,
            column: 47
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 50,
            column: 47
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "5": {
        loc: {
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 52,
            column: 67
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 52,
            column: 67
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "6": {
        loc: {
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 54,
            column: 47
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 54,
            column: 47
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "7": {
        loc: {
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 56,
            column: 47
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 56,
            column: 47
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "8": {
        loc: {
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 74,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 74,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 72
      },
      "9": {
        loc: {
          start: {
            line: 76,
            column: 56
          },
          end: {
            line: 76,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 76,
            column: 70
          },
          end: {
            line: 76,
            column: 87
          }
        }, {
          start: {
            line: 76,
            column: 90
          },
          end: {
            line: 76,
            column: 92
          }
        }],
        line: 76
      },
      "10": {
        loc: {
          start: {
            line: 110,
            column: 8
          },
          end: {
            line: 129,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 110,
            column: 8
          },
          end: {
            line: 129,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 110
      },
      "11": {
        loc: {
          start: {
            line: 110,
            column: 12
          },
          end: {
            line: 110,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 110,
            column: 12
          },
          end: {
            line: 110,
            column: 38
          }
        }, {
          start: {
            line: 110,
            column: 42
          },
          end: {
            line: 110,
            column: 59
          }
        }, {
          start: {
            line: 110,
            column: 63
          },
          end: {
            line: 110,
            column: 77
          }
        }],
        line: 110
      },
      "12": {
        loc: {
          start: {
            line: 116,
            column: 12
          },
          end: {
            line: 128,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 12
          },
          end: {
            line: 128,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 116
      },
      "13": {
        loc: {
          start: {
            line: 140,
            column: 23
          },
          end: {
            line: 140,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 140,
            column: 23
          },
          end: {
            line: 140,
            column: 62
          }
        }, {
          start: {
            line: 140,
            column: 66
          },
          end: {
            line: 140,
            column: 91
          }
        }],
        line: 140
      },
      "14": {
        loc: {
          start: {
            line: 153,
            column: 8
          },
          end: {
            line: 155,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 153,
            column: 8
          },
          end: {
            line: 155,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 153
      },
      "15": {
        loc: {
          start: {
            line: 157,
            column: 55
          },
          end: {
            line: 157,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 157,
            column: 69
          },
          end: {
            line: 157,
            column: 86
          }
        }, {
          start: {
            line: 157,
            column: 89
          },
          end: {
            line: 157,
            column: 91
          }
        }],
        line: 157
      },
      "16": {
        loc: {
          start: {
            line: 165,
            column: 72
          },
          end: {
            line: 165,
            column: 111
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 165,
            column: 83
          },
          end: {
            line: 165,
            column: 106
          }
        }, {
          start: {
            line: 165,
            column: 109
          },
          end: {
            line: 165,
            column: 111
          }
        }],
        line: 165
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/peterkrzyzek/Development/clickup-mcp-server/src/clickup-client/webhooks-enhanced.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/peterkrzyzek/Development/clickup-mcp-server/src/clickup-client/webhooks-enhanced.ts"],
      sourcesContent: ["import crypto from 'crypto';\nimport { ClickUpClient } from './index.js';\nimport type {\n  WebhookPayload,\n  CreateWebhookRequest,\n  UpdateWebhookRequest,\n  WebhookFilter,\n  ValidateWebhookSignatureRequest,\n  ProcessWebhookRequest\n} from '../schemas/webhook-schemas.js';\n\nexport interface WebhookResponse {\n  id: string;\n  webhook: {\n    id: string;\n    userid: number;\n    team_id: number;\n    endpoint: string;\n    client_id: string;\n    events: string[];\n    task_events: string[];\n    list_events: string[];\n    folder_events: string[];\n    space_events: string[];\n    goal_events: string[];\n    health_check_url?: string;\n    secret?: string;\n    status: 'active' | 'inactive';\n    date_created: string;\n    date_updated: string;\n  };\n}\n\nexport interface WebhookListResponse {\n  webhooks: WebhookResponse['webhook'][];\n}\n\nexport interface WebhookEventHistory {\n  id: string;\n  webhook_id: string;\n  event_type: string;\n  status: 'success' | 'failed' | 'pending';\n  response_code?: number;\n  response_body?: string;\n  attempts: number;\n  date_created: string;\n  date_updated: string;\n}\n\nexport interface WebhookEventHistoryResponse {\n  events: WebhookEventHistory[];\n}\n\nexport class WebhooksEnhancedClient extends ClickUpClient {\n  constructor(apiToken: string) {\n    super({ apiToken });\n  }\n\n  /**\n   * Create a new webhook\n   */\n  async createWebhook(request: CreateWebhookRequest): Promise<WebhookResponse> {\n    const response = await this.post<WebhookResponse>(\n      `/team/${request.workspace_id}/webhook`,\n      {\n        endpoint: request.endpoint,\n        events: request.events,\n        health_check_url: request.health_check_url,\n        secret: request.secret\n      }\n    );\n    return response;\n  }\n\n  /**\n   * Get all webhooks for a workspace\n   */\n  async getWebhooks(filter: WebhookFilter): Promise<WebhookListResponse> {\n    const params = new URLSearchParams();\n    if (filter.status) {\n      params.append('status', filter.status);\n    }\n    if (filter.event_type) {\n      params.append('event_type', filter.event_type);\n    }\n\n    const queryString = params.toString();\n    const endpoint = `/team/${filter.workspace_id}/webhook${queryString ? `?${queryString}` : ''}`;\n    \n    const response = await this.get<WebhookListResponse>(endpoint);\n    return response;\n  }\n\n  /**\n   * Get a specific webhook by ID\n   */\n  async getWebhook(webhookId: string): Promise<WebhookResponse> {\n    const response = await this.get<WebhookResponse>(`/webhook/${webhookId}`);\n    return response;\n  }\n\n  /**\n   * Update an existing webhook\n   */\n  async updateWebhook(request: UpdateWebhookRequest): Promise<WebhookResponse> {\n    const updateData: Record<string, any> = {};\n    \n    if (request.endpoint) updateData.endpoint = request.endpoint;\n    if (request.events) updateData.events = request.events;\n    if (request.health_check_url) updateData.health_check_url = request.health_check_url;\n    if (request.secret) updateData.secret = request.secret;\n    if (request.status) updateData.status = request.status;\n\n    const response = await this.put<WebhookResponse>(\n      `/webhook/${request.webhook_id}`,\n      updateData\n    );\n    return response;\n  }\n\n  /**\n   * Delete a webhook\n   */\n  async deleteWebhook(webhookId: string): Promise<{ success: boolean }> {\n    await this.delete(`/webhook/${webhookId}`);\n    return { success: true };\n  }\n\n  /**\n   * Get webhook event history\n   */\n  async getWebhookEventHistory(webhookId: string, limit?: number): Promise<WebhookEventHistoryResponse> {\n    const params = new URLSearchParams();\n    if (limit) {\n      params.append('limit', limit.toString());\n    }\n\n    const queryString = params.toString();\n    const endpoint = `/webhook/${webhookId}/events${queryString ? `?${queryString}` : ''}`;\n    \n    const response = await this.get<WebhookEventHistoryResponse>(endpoint);\n    return response;\n  }\n\n  /**\n   * Ping a webhook (test endpoint)\n   */\n  async pingWebhook(webhookId: string): Promise<{ success: boolean; response_code?: number }> {\n    const response = await this.post<{ success: boolean; response_code?: number }>(\n      `/webhook/${webhookId}/ping`\n    );\n    return response;\n  }\n\n  /**\n   * Validate webhook signature using HMAC-SHA256\n   */\n  validateWebhookSignature(request: ValidateWebhookSignatureRequest): boolean {\n    try {\n      const expectedSignature = crypto\n        .createHmac('sha256', request.secret)\n        .update(request.payload)\n        .digest('hex');\n      \n      // ClickUp sends signature as 'sha256=<hash>'\n      const receivedSignature = request.signature.replace('sha256=', '');\n      \n      return crypto.timingSafeEqual(\n        Buffer.from(expectedSignature, 'hex'),\n        Buffer.from(receivedSignature, 'hex')\n      );\n    } catch (error) {\n      console.error('Error validating webhook signature:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Process incoming webhook payload\n   */\n  async processWebhook(request: ProcessWebhookRequest): Promise<{\n    valid: boolean;\n    objectType: string;\n    objectId: string | number;\n    operation: string;\n    workspaceId: number;\n    userId: number;\n    timestamp: Date;\n    changes: Array<{ field: string; before?: any; after?: any }>;\n    relationships: Array<{ type: string; object_type: string; object_id: string | number }>;\n  }> {\n    // Validate signature if required\n    if (request.validate_signature && request.signature && request.secret) {\n      const isValidSignature = this.validateWebhookSignature({\n        payload: JSON.stringify(request.payload),\n        signature: request.signature,\n        secret: request.secret\n      });\n\n      if (!isValidSignature) {\n        return {\n          valid: false,\n          objectType: '',\n          objectId: '',\n          operation: '',\n          workspaceId: 0,\n          userId: 0,\n          timestamp: new Date(),\n          changes: [],\n          relationships: []\n        };\n      }\n    }\n\n    const payload = request.payload;\n    const operationMap: Record<string, string> = {\n      'c': 'create',\n      'u': 'update',\n      'd': 'delete'\n    };\n\n    return {\n      valid: true,\n      objectType: payload.version.object_type,\n      objectId: payload.version.object_id,\n      operation: operationMap[payload.version.operation] || payload.version.operation,\n      workspaceId: payload.version.workspace_id,\n      userId: payload.version.data.context.audit_context.userid,\n      timestamp: new Date(payload.date),\n      changes: payload.version.data.changes,\n      relationships: payload.version.data.relationships\n    };\n  }\n\n  /**\n   * Get webhook statistics\n   */\n  async getWebhookStats(webhookId: string, days?: number): Promise<{\n    total_events: number;\n    successful_events: number;\n    failed_events: number;\n    success_rate: number;\n    average_response_time: number;\n  }> {\n    const params = new URLSearchParams();\n    if (days) {\n      params.append('days', days.toString());\n    }\n\n    const queryString = params.toString();\n    const endpoint = `/webhook/${webhookId}/stats${queryString ? `?${queryString}` : ''}`;\n    \n    const response = await this.get<{\n      total_events: number;\n      successful_events: number;\n      failed_events: number;\n      success_rate: number;\n      average_response_time: number;\n    }>(endpoint);\n    \n    return response;\n  }\n\n  /**\n   * Retry failed webhook events\n   */\n  async retryWebhookEvents(webhookId: string, eventIds?: string[]): Promise<{ success: boolean; retried_count: number }> {\n    const response = await this.post<{ success: boolean; retried_count: number }>(\n      `/webhook/${webhookId}/retry`,\n      eventIds ? { event_ids: eventIds } : {}\n    );\n    return response;\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "bddb61a98355c53701fd8cd5a7b49ac2ab420e60"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_ectpxc8ii = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_ectpxc8ii();
import crypto from 'crypto';
import { ClickUpClient } from './index.js';
export class WebhooksEnhancedClient extends ClickUpClient {
  constructor(apiToken) {
    /* istanbul ignore next */
    cov_ectpxc8ii().f[0]++;
    cov_ectpxc8ii().s[0]++;
    super({
      apiToken
    });
  }
  /**
   * Create a new webhook
   */
  async createWebhook(request) {
    /* istanbul ignore next */
    cov_ectpxc8ii().f[1]++;
    const response =
    /* istanbul ignore next */
    (cov_ectpxc8ii().s[1]++, await this.post(`/team/${request.workspace_id}/webhook`, {
      endpoint: request.endpoint,
      events: request.events,
      health_check_url: request.health_check_url,
      secret: request.secret
    }));
    /* istanbul ignore next */
    cov_ectpxc8ii().s[2]++;
    return response;
  }
  /**
   * Get all webhooks for a workspace
   */
  async getWebhooks(filter) {
    /* istanbul ignore next */
    cov_ectpxc8ii().f[2]++;
    const params =
    /* istanbul ignore next */
    (cov_ectpxc8ii().s[3]++, new URLSearchParams());
    /* istanbul ignore next */
    cov_ectpxc8ii().s[4]++;
    if (filter.status) {
      /* istanbul ignore next */
      cov_ectpxc8ii().b[0][0]++;
      cov_ectpxc8ii().s[5]++;
      params.append('status', filter.status);
    } else
    /* istanbul ignore next */
    {
      cov_ectpxc8ii().b[0][1]++;
    }
    cov_ectpxc8ii().s[6]++;
    if (filter.event_type) {
      /* istanbul ignore next */
      cov_ectpxc8ii().b[1][0]++;
      cov_ectpxc8ii().s[7]++;
      params.append('event_type', filter.event_type);
    } else
    /* istanbul ignore next */
    {
      cov_ectpxc8ii().b[1][1]++;
    }
    const queryString =
    /* istanbul ignore next */
    (cov_ectpxc8ii().s[8]++, params.toString());
    const endpoint =
    /* istanbul ignore next */
    (cov_ectpxc8ii().s[9]++, `/team/${filter.workspace_id}/webhook${queryString ?
    /* istanbul ignore next */
    (cov_ectpxc8ii().b[2][0]++, `?${queryString}`) :
    /* istanbul ignore next */
    (cov_ectpxc8ii().b[2][1]++, '')}`);
    const response =
    /* istanbul ignore next */
    (cov_ectpxc8ii().s[10]++, await this.get(endpoint));
    /* istanbul ignore next */
    cov_ectpxc8ii().s[11]++;
    return response;
  }
  /**
   * Get a specific webhook by ID
   */
  async getWebhook(webhookId) {
    /* istanbul ignore next */
    cov_ectpxc8ii().f[3]++;
    const response =
    /* istanbul ignore next */
    (cov_ectpxc8ii().s[12]++, await this.get(`/webhook/${webhookId}`));
    /* istanbul ignore next */
    cov_ectpxc8ii().s[13]++;
    return response;
  }
  /**
   * Update an existing webhook
   */
  async updateWebhook(request) {
    /* istanbul ignore next */
    cov_ectpxc8ii().f[4]++;
    const updateData =
    /* istanbul ignore next */
    (cov_ectpxc8ii().s[14]++, {});
    /* istanbul ignore next */
    cov_ectpxc8ii().s[15]++;
    if (request.endpoint) {
      /* istanbul ignore next */
      cov_ectpxc8ii().b[3][0]++;
      cov_ectpxc8ii().s[16]++;
      updateData.endpoint = request.endpoint;
    } else
    /* istanbul ignore next */
    {
      cov_ectpxc8ii().b[3][1]++;
    }
    cov_ectpxc8ii().s[17]++;
    if (request.events) {
      /* istanbul ignore next */
      cov_ectpxc8ii().b[4][0]++;
      cov_ectpxc8ii().s[18]++;
      updateData.events = request.events;
    } else
    /* istanbul ignore next */
    {
      cov_ectpxc8ii().b[4][1]++;
    }
    cov_ectpxc8ii().s[19]++;
    if (request.health_check_url) {
      /* istanbul ignore next */
      cov_ectpxc8ii().b[5][0]++;
      cov_ectpxc8ii().s[20]++;
      updateData.health_check_url = request.health_check_url;
    } else
    /* istanbul ignore next */
    {
      cov_ectpxc8ii().b[5][1]++;
    }
    cov_ectpxc8ii().s[21]++;
    if (request.secret) {
      /* istanbul ignore next */
      cov_ectpxc8ii().b[6][0]++;
      cov_ectpxc8ii().s[22]++;
      updateData.secret = request.secret;
    } else
    /* istanbul ignore next */
    {
      cov_ectpxc8ii().b[6][1]++;
    }
    cov_ectpxc8ii().s[23]++;
    if (request.status) {
      /* istanbul ignore next */
      cov_ectpxc8ii().b[7][0]++;
      cov_ectpxc8ii().s[24]++;
      updateData.status = request.status;
    } else
    /* istanbul ignore next */
    {
      cov_ectpxc8ii().b[7][1]++;
    }
    const response =
    /* istanbul ignore next */
    (cov_ectpxc8ii().s[25]++, await this.put(`/webhook/${request.webhook_id}`, updateData));
    /* istanbul ignore next */
    cov_ectpxc8ii().s[26]++;
    return response;
  }
  /**
   * Delete a webhook
   */
  async deleteWebhook(webhookId) {
    /* istanbul ignore next */
    cov_ectpxc8ii().f[5]++;
    cov_ectpxc8ii().s[27]++;
    await this.delete(`/webhook/${webhookId}`);
    /* istanbul ignore next */
    cov_ectpxc8ii().s[28]++;
    return {
      success: true
    };
  }
  /**
   * Get webhook event history
   */
  async getWebhookEventHistory(webhookId, limit) {
    /* istanbul ignore next */
    cov_ectpxc8ii().f[6]++;
    const params =
    /* istanbul ignore next */
    (cov_ectpxc8ii().s[29]++, new URLSearchParams());
    /* istanbul ignore next */
    cov_ectpxc8ii().s[30]++;
    if (limit) {
      /* istanbul ignore next */
      cov_ectpxc8ii().b[8][0]++;
      cov_ectpxc8ii().s[31]++;
      params.append('limit', limit.toString());
    } else
    /* istanbul ignore next */
    {
      cov_ectpxc8ii().b[8][1]++;
    }
    const queryString =
    /* istanbul ignore next */
    (cov_ectpxc8ii().s[32]++, params.toString());
    const endpoint =
    /* istanbul ignore next */
    (cov_ectpxc8ii().s[33]++, `/webhook/${webhookId}/events${queryString ?
    /* istanbul ignore next */
    (cov_ectpxc8ii().b[9][0]++, `?${queryString}`) :
    /* istanbul ignore next */
    (cov_ectpxc8ii().b[9][1]++, '')}`);
    const response =
    /* istanbul ignore next */
    (cov_ectpxc8ii().s[34]++, await this.get(endpoint));
    /* istanbul ignore next */
    cov_ectpxc8ii().s[35]++;
    return response;
  }
  /**
   * Ping a webhook (test endpoint)
   */
  async pingWebhook(webhookId) {
    /* istanbul ignore next */
    cov_ectpxc8ii().f[7]++;
    const response =
    /* istanbul ignore next */
    (cov_ectpxc8ii().s[36]++, await this.post(`/webhook/${webhookId}/ping`));
    /* istanbul ignore next */
    cov_ectpxc8ii().s[37]++;
    return response;
  }
  /**
   * Validate webhook signature using HMAC-SHA256
   */
  validateWebhookSignature(request) {
    /* istanbul ignore next */
    cov_ectpxc8ii().f[8]++;
    cov_ectpxc8ii().s[38]++;
    try {
      const expectedSignature =
      /* istanbul ignore next */
      (cov_ectpxc8ii().s[39]++, crypto.createHmac('sha256', request.secret).update(request.payload).digest('hex'));
      // ClickUp sends signature as 'sha256=<hash>'
      const receivedSignature =
      /* istanbul ignore next */
      (cov_ectpxc8ii().s[40]++, request.signature.replace('sha256=', ''));
      /* istanbul ignore next */
      cov_ectpxc8ii().s[41]++;
      return crypto.timingSafeEqual(Buffer.from(expectedSignature, 'hex'), Buffer.from(receivedSignature, 'hex'));
    } catch (error) {
      /* istanbul ignore next */
      cov_ectpxc8ii().s[42]++;
      console.error('Error validating webhook signature:', error);
      /* istanbul ignore next */
      cov_ectpxc8ii().s[43]++;
      return false;
    }
  }
  /**
   * Process incoming webhook payload
   */
  async processWebhook(request) {
    /* istanbul ignore next */
    cov_ectpxc8ii().f[9]++;
    cov_ectpxc8ii().s[44]++;
    // Validate signature if required
    if (
    /* istanbul ignore next */
    (cov_ectpxc8ii().b[11][0]++, request.validate_signature) &&
    /* istanbul ignore next */
    (cov_ectpxc8ii().b[11][1]++, request.signature) &&
    /* istanbul ignore next */
    (cov_ectpxc8ii().b[11][2]++, request.secret)) {
      /* istanbul ignore next */
      cov_ectpxc8ii().b[10][0]++;
      const isValidSignature =
      /* istanbul ignore next */
      (cov_ectpxc8ii().s[45]++, this.validateWebhookSignature({
        payload: JSON.stringify(request.payload),
        signature: request.signature,
        secret: request.secret
      }));
      /* istanbul ignore next */
      cov_ectpxc8ii().s[46]++;
      if (!isValidSignature) {
        /* istanbul ignore next */
        cov_ectpxc8ii().b[12][0]++;
        cov_ectpxc8ii().s[47]++;
        return {
          valid: false,
          objectType: '',
          objectId: '',
          operation: '',
          workspaceId: 0,
          userId: 0,
          timestamp: new Date(),
          changes: [],
          relationships: []
        };
      } else
      /* istanbul ignore next */
      {
        cov_ectpxc8ii().b[12][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_ectpxc8ii().b[10][1]++;
    }
    const payload =
    /* istanbul ignore next */
    (cov_ectpxc8ii().s[48]++, request.payload);
    const operationMap =
    /* istanbul ignore next */
    (cov_ectpxc8ii().s[49]++, {
      'c': 'create',
      'u': 'update',
      'd': 'delete'
    });
    /* istanbul ignore next */
    cov_ectpxc8ii().s[50]++;
    return {
      valid: true,
      objectType: payload.version.object_type,
      objectId: payload.version.object_id,
      operation:
      /* istanbul ignore next */
      (cov_ectpxc8ii().b[13][0]++, operationMap[payload.version.operation]) ||
      /* istanbul ignore next */
      (cov_ectpxc8ii().b[13][1]++, payload.version.operation),
      workspaceId: payload.version.workspace_id,
      userId: payload.version.data.context.audit_context.userid,
      timestamp: new Date(payload.date),
      changes: payload.version.data.changes,
      relationships: payload.version.data.relationships
    };
  }
  /**
   * Get webhook statistics
   */
  async getWebhookStats(webhookId, days) {
    /* istanbul ignore next */
    cov_ectpxc8ii().f[10]++;
    const params =
    /* istanbul ignore next */
    (cov_ectpxc8ii().s[51]++, new URLSearchParams());
    /* istanbul ignore next */
    cov_ectpxc8ii().s[52]++;
    if (days) {
      /* istanbul ignore next */
      cov_ectpxc8ii().b[14][0]++;
      cov_ectpxc8ii().s[53]++;
      params.append('days', days.toString());
    } else
    /* istanbul ignore next */
    {
      cov_ectpxc8ii().b[14][1]++;
    }
    const queryString =
    /* istanbul ignore next */
    (cov_ectpxc8ii().s[54]++, params.toString());
    const endpoint =
    /* istanbul ignore next */
    (cov_ectpxc8ii().s[55]++, `/webhook/${webhookId}/stats${queryString ?
    /* istanbul ignore next */
    (cov_ectpxc8ii().b[15][0]++, `?${queryString}`) :
    /* istanbul ignore next */
    (cov_ectpxc8ii().b[15][1]++, '')}`);
    const response =
    /* istanbul ignore next */
    (cov_ectpxc8ii().s[56]++, await this.get(endpoint));
    /* istanbul ignore next */
    cov_ectpxc8ii().s[57]++;
    return response;
  }
  /**
   * Retry failed webhook events
   */
  async retryWebhookEvents(webhookId, eventIds) {
    /* istanbul ignore next */
    cov_ectpxc8ii().f[11]++;
    const response =
    /* istanbul ignore next */
    (cov_ectpxc8ii().s[58]++, await this.post(`/webhook/${webhookId}/retry`, eventIds ?
    /* istanbul ignore next */
    (cov_ectpxc8ii().b[16][0]++, {
      event_ids: eventIds
    }) :
    /* istanbul ignore next */
    (cov_ectpxc8ii().b[16][1]++, {})));
    /* istanbul ignore next */
    cov_ectpxc8ii().s[59]++;
    return response;
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,