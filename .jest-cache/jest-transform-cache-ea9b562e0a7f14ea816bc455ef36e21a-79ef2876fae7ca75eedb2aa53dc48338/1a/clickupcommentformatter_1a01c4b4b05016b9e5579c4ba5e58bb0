97e5cb127d60d91691509c48f8664963
/* istanbul ignore next */
function cov_1uyad1546v() {
  var path = "/Users/peterkrzyzek/Development/clickup-mcp-server/src/utils/clickup-comment-formatter.ts";
  var hash = "9c8d03d0a85cd46fcca3e2a0404e08fd95bef049";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/peterkrzyzek/Development/clickup-mcp-server/src/utils/clickup-comment-formatter.ts",
    statementMap: {
      "0": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 14,
          column: 5
        }
      },
      "1": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 59
        }
      },
      "2": {
        start: {
          line: 15,
          column: 19
        },
        end: {
          line: 15,
          column: 21
        }
      },
      "3": {
        start: {
          line: 17,
          column: 18
        },
        end: {
          line: 17,
          column: 122
        }
      },
      "4": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 88,
          column: 5
        }
      },
      "5": {
        start: {
          line: 18,
          column: 17
        },
        end: {
          line: 18,
          column: 18
        }
      },
      "6": {
        start: {
          line: 19,
          column: 21
        },
        end: {
          line: 19,
          column: 29
        }
      },
      "7": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 21,
          column: 21
        }
      },
      "8": {
        start: {
          line: 21,
          column: 12
        },
        end: {
          line: 21,
          column: 21
        }
      },
      "9": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 87,
          column: 9
        }
      },
      "10": {
        start: {
          line: 24,
          column: 25
        },
        end: {
          line: 24,
          column: 42
        }
      },
      "11": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 28,
          column: 15
        }
      },
      "12": {
        start: {
          line: 31,
          column: 13
        },
        end: {
          line: 87,
          column: 9
        }
      },
      "13": {
        start: {
          line: 33,
          column: 25
        },
        end: {
          line: 33,
          column: 42
        }
      },
      "14": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 37,
          column: 15
        }
      },
      "15": {
        start: {
          line: 40,
          column: 13
        },
        end: {
          line: 87,
          column: 9
        }
      },
      "16": {
        start: {
          line: 41,
          column: 25
        },
        end: {
          line: 41,
          column: 42
        }
      },
      "17": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 45,
          column: 15
        }
      },
      "18": {
        start: {
          line: 48,
          column: 13
        },
        end: {
          line: 87,
          column: 9
        }
      },
      "19": {
        start: {
          line: 49,
          column: 25
        },
        end: {
          line: 49,
          column: 42
        }
      },
      "20": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 53,
          column: 15
        }
      },
      "21": {
        start: {
          line: 56,
          column: 13
        },
        end: {
          line: 87,
          column: 9
        }
      },
      "22": {
        start: {
          line: 57,
          column: 25
        },
        end: {
          line: 57,
          column: 42
        }
      },
      "23": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 61,
          column: 15
        }
      },
      "24": {
        start: {
          line: 64,
          column: 13
        },
        end: {
          line: 87,
          column: 9
        }
      },
      "25": {
        start: {
          line: 65,
          column: 26
        },
        end: {
          line: 65,
          column: 65
        }
      },
      "26": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 72,
          column: 13
        }
      },
      "27": {
        start: {
          line: 67,
          column: 42
        },
        end: {
          line: 67,
          column: 47
        }
      },
      "28": {
        start: {
          line: 68,
          column: 16
        },
        end: {
          line: 71,
          column: 19
        }
      },
      "29": {
        start: {
          line: 75,
          column: 13
        },
        end: {
          line: 87,
          column: 9
        }
      },
      "30": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 21
        }
      },
      "31": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 86,
          column: 13
        }
      },
      "32": {
        start: {
          line: 82,
          column: 16
        },
        end: {
          line: 85,
          column: 19
        }
      },
      "33": {
        start: {
          line: 90,
          column: 4
        },
        end: {
          line: 95,
          column: 5
        }
      },
      "34": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 94,
          column: 11
        }
      },
      "35": {
        start: {
          line: 96,
          column: 4
        },
        end: {
          line: 96,
          column: 31
        }
      },
      "36": {
        start: {
          line: 104,
          column: 4
        },
        end: {
          line: 106,
          column: 5
        }
      },
      "37": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 105,
          column: 18
        }
      },
      "38": {
        start: {
          line: 107,
          column: 4
        },
        end: {
          line: 130,
          column: 16
        }
      },
      "39": {
        start: {
          line: 108,
          column: 19
        },
        end: {
          line: 108,
          column: 35
        }
      },
      "40": {
        start: {
          line: 109,
          column: 22
        },
        end: {
          line: 109,
          column: 44
        }
      },
      "41": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 113,
          column: 9
        }
      },
      "42": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 112,
          column: 33
        }
      },
      "43": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 116,
          column: 9
        }
      },
      "44": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 115,
          column: 31
        }
      },
      "45": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 119,
          column: 9
        }
      },
      "46": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 118,
          column: 33
        }
      },
      "47": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 122,
          column: 9
        }
      },
      "48": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 121,
          column: 33
        }
      },
      "49": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 125,
          column: 9
        }
      },
      "50": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 124,
          column: 33
        }
      },
      "51": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 128,
          column: 9
        }
      },
      "52": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 127,
          column: 50
        }
      },
      "53": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 129,
          column: 20
        }
      },
      "54": {
        start: {
          line: 138,
          column: 4
        },
        end: {
          line: 143,
          column: 6
        }
      },
      "55": {
        start: {
          line: 151,
          column: 4
        },
        end: {
          line: 156,
          column: 6
        }
      },
      "56": {
        start: {
          line: 164,
          column: 4
        },
        end: {
          line: 169,
          column: 6
        }
      },
      "57": {
        start: {
          line: 177,
          column: 4
        },
        end: {
          line: 182,
          column: 6
        }
      },
      "58": {
        start: {
          line: 191,
          column: 4
        },
        end: {
          line: 196,
          column: 6
        }
      },
      "59": {
        start: {
          line: 204,
          column: 4
        },
        end: {
          line: 204,
          column: 31
        }
      },
      "60": {
        start: {
          line: 213,
          column: 4
        },
        end: {
          line: 215,
          column: 5
        }
      },
      "61": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 214,
          column: 42
        }
      },
      "62": {
        start: {
          line: 217,
          column: 18
        },
        end: {
          line: 217,
          column: 38
        }
      },
      "63": {
        start: {
          line: 218,
          column: 19
        },
        end: {
          line: 218,
          column: 21
        }
      },
      "64": {
        start: {
          line: 219,
          column: 4
        },
        end: {
          line: 281,
          column: 5
        }
      },
      "65": {
        start: {
          line: 219,
          column: 17
        },
        end: {
          line: 219,
          column: 18
        }
      },
      "66": {
        start: {
          line: 220,
          column: 21
        },
        end: {
          line: 220,
          column: 36
        }
      },
      "67": {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 227,
          column: 9
        }
      },
      "68": {
        start: {
          line: 223,
          column: 12
        },
        end: {
          line: 225,
          column: 13
        }
      },
      "69": {
        start: {
          line: 224,
          column: 16
        },
        end: {
          line: 224,
          column: 60
        }
      },
      "70": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 226,
          column: 21
        }
      },
      "71": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 238,
          column: 9
        }
      },
      "72": {
        start: {
          line: 230,
          column: 26
        },
        end: {
          line: 230,
          column: 60
        }
      },
      "73": {
        start: {
          line: 231,
          column: 31
        },
        end: {
          line: 231,
          column: 57
        }
      },
      "74": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 235,
          column: 15
        }
      },
      "75": {
        start: {
          line: 236,
          column: 12
        },
        end: {
          line: 236,
          column: 56
        }
      },
      "76": {
        start: {
          line: 237,
          column: 12
        },
        end: {
          line: 237,
          column: 21
        }
      },
      "77": {
        start: {
          line: 240,
          column: 8
        },
        end: {
          line: 246,
          column: 9
        }
      },
      "78": {
        start: {
          line: 241,
          column: 29
        },
        end: {
          line: 241,
          column: 63
        }
      },
      "79": {
        start: {
          line: 242,
          column: 30
        },
        end: {
          line: 242,
          column: 64
        }
      },
      "80": {
        start: {
          line: 243,
          column: 12
        },
        end: {
          line: 243,
          column: 46
        }
      },
      "81": {
        start: {
          line: 244,
          column: 12
        },
        end: {
          line: 244,
          column: 56
        }
      },
      "82": {
        start: {
          line: 245,
          column: 12
        },
        end: {
          line: 245,
          column: 21
        }
      },
      "83": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 255,
          column: 9
        }
      },
      "84": {
        start: {
          line: 249,
          column: 30
        },
        end: {
          line: 249,
          column: 55
        }
      },
      "85": {
        start: {
          line: 250,
          column: 12
        },
        end: {
          line: 250,
          column: 56
        }
      },
      "86": {
        start: {
          line: 251,
          column: 30
        },
        end: {
          line: 251,
          column: 65
        }
      },
      "87": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 252,
          column: 46
        }
      },
      "88": {
        start: {
          line: 253,
          column: 12
        },
        end: {
          line: 253,
          column: 56
        }
      },
      "89": {
        start: {
          line: 254,
          column: 12
        },
        end: {
          line: 254,
          column: 21
        }
      },
      "90": {
        start: {
          line: 257,
          column: 8
        },
        end: {
          line: 273,
          column: 9
        }
      },
      "91": {
        start: {
          line: 259,
          column: 30
        },
        end: {
          line: 259,
          column: 32
        }
      },
      "92": {
        start: {
          line: 260,
          column: 12
        },
        end: {
          line: 260,
          column: 16
        }
      },
      "93": {
        start: {
          line: 261,
          column: 12
        },
        end: {
          line: 264,
          column: 13
        }
      },
      "94": {
        start: {
          line: 262,
          column: 16
        },
        end: {
          line: 262,
          column: 41
        }
      },
      "95": {
        start: {
          line: 263,
          column: 16
        },
        end: {
          line: 263,
          column: 20
        }
      },
      "96": {
        start: {
          line: 265,
          column: 12
        },
        end: {
          line: 271,
          column: 13
        }
      },
      "97": {
        start: {
          line: 266,
          column: 16
        },
        end: {
          line: 269,
          column: 19
        }
      },
      "98": {
        start: {
          line: 270,
          column: 16
        },
        end: {
          line: 270,
          column: 60
        }
      },
      "99": {
        start: {
          line: 272,
          column: 12
        },
        end: {
          line: 272,
          column: 21
        }
      },
      "100": {
        start: {
          line: 275,
          column: 26
        },
        end: {
          line: 275,
          column: 56
        }
      },
      "101": {
        start: {
          line: 276,
          column: 8
        },
        end: {
          line: 276,
          column: 42
        }
      },
      "102": {
        start: {
          line: 278,
          column: 8
        },
        end: {
          line: 280,
          column: 9
        }
      },
      "103": {
        start: {
          line: 279,
          column: 12
        },
        end: {
          line: 279,
          column: 56
        }
      },
      "104": {
        start: {
          line: 282,
          column: 4
        },
        end: {
          line: 282,
          column: 31
        }
      },
      "105": {
        start: {
          line: 290,
          column: 4
        },
        end: {
          line: 292,
          column: 5
        }
      },
      "106": {
        start: {
          line: 291,
          column: 8
        },
        end: {
          line: 291,
          column: 18
        }
      },
      "107": {
        start: {
          line: 293,
          column: 20
        },
        end: {
          line: 293,
          column: 28
        }
      },
      "108": {
        start: {
          line: 295,
          column: 4
        },
        end: {
          line: 295,
          column: 54
        }
      },
      "109": {
        start: {
          line: 297,
          column: 4
        },
        end: {
          line: 297,
          column: 60
        }
      },
      "110": {
        start: {
          line: 298,
          column: 4
        },
        end: {
          line: 298,
          column: 56
        }
      },
      "111": {
        start: {
          line: 299,
          column: 4
        },
        end: {
          line: 299,
          column: 56
        }
      },
      "112": {
        start: {
          line: 300,
          column: 4
        },
        end: {
          line: 300,
          column: 54
        }
      },
      "113": {
        start: {
          line: 302,
          column: 4
        },
        end: {
          line: 302,
          column: 56
        }
      },
      "114": {
        start: {
          line: 304,
          column: 4
        },
        end: {
          line: 304,
          column: 54
        }
      },
      "115": {
        start: {
          line: 306,
          column: 4
        },
        end: {
          line: 310,
          column: 7
        }
      },
      "116": {
        start: {
          line: 308,
          column: 22
        },
        end: {
          line: 308,
          column: 39
        }
      },
      "117": {
        start: {
          line: 309,
          column: 8
        },
        end: {
          line: 309,
          column: 45
        }
      },
      "118": {
        start: {
          line: 312,
          column: 4
        },
        end: {
          line: 312,
          column: 66
        }
      },
      "119": {
        start: {
          line: 314,
          column: 4
        },
        end: {
          line: 314,
          column: 49
        }
      },
      "120": {
        start: {
          line: 316,
          column: 4
        },
        end: {
          line: 316,
          column: 55
        }
      },
      "121": {
        start: {
          line: 317,
          column: 4
        },
        end: {
          line: 317,
          column: 55
        }
      },
      "122": {
        start: {
          line: 319,
          column: 4
        },
        end: {
          line: 319,
          column: 53
        }
      },
      "123": {
        start: {
          line: 320,
          column: 4
        },
        end: {
          line: 320,
          column: 33
        }
      },
      "124": {
        start: {
          line: 321,
          column: 4
        },
        end: {
          line: 321,
          column: 21
        }
      },
      "125": {
        start: {
          line: 330,
          column: 4
        },
        end: {
          line: 332,
          column: 5
        }
      },
      "126": {
        start: {
          line: 331,
          column: 8
        },
        end: {
          line: 331,
          column: 27
        }
      },
      "127": {
        start: {
          line: 337,
          column: 29
        },
        end: {
          line: 344,
          column: 5
        }
      },
      "128": {
        start: {
          line: 345,
          column: 4
        },
        end: {
          line: 360,
          column: 5
        }
      },
      "129": {
        start: {
          line: 346,
          column: 24
        },
        end: {
          line: 346,
          column: 74
        }
      },
      "130": {
        start: {
          line: 347,
          column: 8
        },
        end: {
          line: 359,
          column: 9
        }
      },
      "131": {
        start: {
          line: 349,
          column: 31
        },
        end: {
          line: 349,
          column: 62
        }
      },
      "132": {
        start: {
          line: 350,
          column: 30
        },
        end: {
          line: 350,
          column: 82
        }
      },
      "133": {
        start: {
          line: 351,
          column: 12
        },
        end: {
          line: 358,
          column: 13
        }
      },
      "134": {
        start: {
          line: 354,
          column: 35
        },
        end: {
          line: 354,
          column: 82
        }
      },
      "135": {
        start: {
          line: 355,
          column: 16
        },
        end: {
          line: 357,
          column: 17
        }
      },
      "136": {
        start: {
          line: 356,
          column: 20
        },
        end: {
          line: 356,
          column: 71
        }
      },
      "137": {
        start: {
          line: 363,
          column: 18
        },
        end: {
          line: 363,
          column: 41
        }
      },
      "138": {
        start: {
          line: 364,
          column: 23
        },
        end: {
          line: 364,
          column: 35
        }
      },
      "139": {
        start: {
          line: 365,
          column: 4
        },
        end: {
          line: 378,
          column: 5
        }
      },
      "140": {
        start: {
          line: 367,
          column: 8
        },
        end: {
          line: 377,
          column: 9
        }
      },
      "141": {
        start: {
          line: 367,
          column: 21
        },
        end: {
          line: 367,
          column: 47
        }
      },
      "142": {
        start: {
          line: 368,
          column: 32
        },
        end: {
          line: 368,
          column: 60
        }
      },
      "143": {
        start: {
          line: 369,
          column: 31
        },
        end: {
          line: 369,
          column: 56
        }
      },
      "144": {
        start: {
          line: 371,
          column: 12
        },
        end: {
          line: 376,
          column: 13
        }
      },
      "145": {
        start: {
          line: 375,
          column: 16
        },
        end: {
          line: 375,
          column: 42
        }
      },
      "146": {
        start: {
          line: 380,
          column: 19
        },
        end: {
          line: 380,
          column: 37
        }
      },
      "147": {
        start: {
          line: 381,
          column: 4
        },
        end: {
          line: 397,
          column: 5
        }
      },
      "148": {
        start: {
          line: 382,
          column: 25
        },
        end: {
          line: 382,
          column: 47
        }
      },
      "149": {
        start: {
          line: 383,
          column: 26
        },
        end: {
          line: 383,
          column: 60
        }
      },
      "150": {
        start: {
          line: 384,
          column: 27
        },
        end: {
          line: 384,
          column: 58
        }
      },
      "151": {
        start: {
          line: 386,
          column: 27
        },
        end: {
          line: 386,
          column: 60
        }
      },
      "152": {
        start: {
          line: 387,
          column: 28
        },
        end: {
          line: 387,
          column: 62
        }
      },
      "153": {
        start: {
          line: 388,
          column: 25
        },
        end: {
          line: 388,
          column: 26
        }
      },
      "154": {
        start: {
          line: 389,
          column: 8
        },
        end: {
          line: 393,
          column: 9
        }
      },
      "155": {
        start: {
          line: 389,
          column: 21
        },
        end: {
          line: 389,
          column: 22
        }
      },
      "156": {
        start: {
          line: 390,
          column: 12
        },
        end: {
          line: 392,
          column: 13
        }
      },
      "157": {
        start: {
          line: 391,
          column: 16
        },
        end: {
          line: 391,
          column: 29
        }
      },
      "158": {
        start: {
          line: 394,
          column: 8
        },
        end: {
          line: 396,
          column: 9
        }
      },
      "159": {
        start: {
          line: 395,
          column: 12
        },
        end: {
          line: 395,
          column: 36
        }
      },
      "160": {
        start: {
          line: 398,
          column: 4
        },
        end: {
          line: 398,
          column: 23
        }
      },
      "161": {
        start: {
          line: 406,
          column: 4
        },
        end: {
          line: 408,
          column: 5
        }
      },
      "162": {
        start: {
          line: 407,
          column: 8
        },
        end: {
          line: 407,
          column: 23
        }
      },
      "163": {
        start: {
          line: 409,
          column: 20
        },
        end: {
          line: 409,
          column: 34
        }
      },
      "164": {
        start: {
          line: 411,
          column: 4
        },
        end: {
          line: 413,
          column: 5
        }
      },
      "165": {
        start: {
          line: 412,
          column: 8
        },
        end: {
          line: 412,
          column: 79
        }
      },
      "166": {
        start: {
          line: 415,
          column: 4
        },
        end: {
          line: 417,
          column: 5
        }
      },
      "167": {
        start: {
          line: 416,
          column: 8
        },
        end: {
          line: 416,
          column: 87
        }
      },
      "168": {
        start: {
          line: 418,
          column: 4
        },
        end: {
          line: 418,
          column: 19
        }
      },
      "169": {
        start: {
          line: 427,
          column: 4
        },
        end: {
          line: 429,
          column: 5
        }
      },
      "170": {
        start: {
          line: 428,
          column: 8
        },
        end: {
          line: 428,
          column: 22
        }
      },
      "171": {
        start: {
          line: 430,
          column: 28
        },
        end: {
          line: 430,
          column: 30
        }
      },
      "172": {
        start: {
          line: 431,
          column: 4
        },
        end: {
          line: 459,
          column: 5
        }
      },
      "173": {
        start: {
          line: 431,
          column: 17
        },
        end: {
          line: 431,
          column: 18
        }
      },
      "174": {
        start: {
          line: 432,
          column: 29
        },
        end: {
          line: 432,
          column: 38
        }
      },
      "175": {
        start: {
          line: 433,
          column: 30
        },
        end: {
          line: 433,
          column: 58
        }
      },
      "176": {
        start: {
          line: 435,
          column: 28
        },
        end: {
          line: 436,
          column: 83
        }
      },
      "177": {
        start: {
          line: 438,
          column: 8
        },
        end: {
          line: 454,
          column: 9
        }
      },
      "178": {
        start: {
          line: 440,
          column: 33
        },
        end: {
          line: 440,
          column: 57
        }
      },
      "179": {
        start: {
          line: 441,
          column: 36
        },
        end: {
          line: 441,
          column: 63
        }
      },
      "180": {
        start: {
          line: 442,
          column: 12
        },
        end: {
          line: 453,
          column: 13
        }
      },
      "181": {
        start: {
          line: 444,
          column: 45
        },
        end: {
          line: 448,
          column: 17
        }
      },
      "182": {
        start: {
          line: 450,
          column: 16
        },
        end: {
          line: 452,
          column: 17
        }
      },
      "183": {
        start: {
          line: 451,
          column: 20
        },
        end: {
          line: 451,
          column: 87
        }
      },
      "184": {
        start: {
          line: 455,
          column: 8
        },
        end: {
          line: 458,
          column: 11
        }
      },
      "185": {
        start: {
          line: 460,
          column: 4
        },
        end: {
          line: 460,
          column: 27
        }
      },
      "186": {
        start: {
          line: 469,
          column: 4
        },
        end: {
          line: 473,
          column: 5
        }
      },
      "187": {
        start: {
          line: 470,
          column: 8
        },
        end: {
          line: 472,
          column: 10
        }
      },
      "188": {
        start: {
          line: 475,
          column: 24
        },
        end: {
          line: 475,
          column: 82
        }
      },
      "189": {
        start: {
          line: 476,
          column: 4
        },
        end: {
          line: 487,
          column: 5
        }
      },
      "190": {
        start: {
          line: 477,
          column: 26
        },
        end: {
          line: 477,
          column: 64
        }
      },
      "191": {
        start: {
          line: 478,
          column: 8
        },
        end: {
          line: 480,
          column: 10
        }
      },
      "192": {
        start: {
          line: 484,
          column: 8
        },
        end: {
          line: 486,
          column: 10
        }
      },
      "193": {
        start: {
          line: 496,
          column: 4
        },
        end: {
          line: 498,
          column: 5
        }
      },
      "194": {
        start: {
          line: 497,
          column: 8
        },
        end: {
          line: 497,
          column: 22
        }
      },
      "195": {
        start: {
          line: 500,
          column: 29
        },
        end: {
          line: 503,
          column: 7
        }
      },
      "196": {
        start: {
          line: 500,
          column: 50
        },
        end: {
          line: 503,
          column: 5
        }
      },
      "197": {
        start: {
          line: 504,
          column: 4
        },
        end: {
          line: 504,
          column: 55
        }
      }
    },
    fnMap: {
      "0": {
        name: "markdownToClickUpComment",
        decl: {
          start: {
            line: 11,
            column: 16
          },
          end: {
            line: 11,
            column: 40
          }
        },
        loc: {
          start: {
            line: 11,
            column: 51
          },
          end: {
            line: 97,
            column: 1
          }
        },
        line: 11
      },
      "1": {
        name: "clickUpCommentToMarkdown",
        decl: {
          start: {
            line: 103,
            column: 16
          },
          end: {
            line: 103,
            column: 40
          }
        },
        loc: {
          start: {
            line: 103,
            column: 56
          },
          end: {
            line: 131,
            column: 1
          }
        },
        line: 103
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 107,
            column: 37
          },
          end: {
            line: 107,
            column: 38
          }
        },
        loc: {
          start: {
            line: 107,
            column: 46
          },
          end: {
            line: 130,
            column: 5
          }
        },
        line: 107
      },
      "3": {
        name: "createPlainTextComment",
        decl: {
          start: {
            line: 137,
            column: 16
          },
          end: {
            line: 137,
            column: 38
          }
        },
        loc: {
          start: {
            line: 137,
            column: 45
          },
          end: {
            line: 144,
            column: 1
          }
        },
        line: 137
      },
      "4": {
        name: "createBoldComment",
        decl: {
          start: {
            line: 150,
            column: 16
          },
          end: {
            line: 150,
            column: 33
          }
        },
        loc: {
          start: {
            line: 150,
            column: 40
          },
          end: {
            line: 157,
            column: 1
          }
        },
        line: 150
      },
      "5": {
        name: "createItalicComment",
        decl: {
          start: {
            line: 163,
            column: 16
          },
          end: {
            line: 163,
            column: 35
          }
        },
        loc: {
          start: {
            line: 163,
            column: 42
          },
          end: {
            line: 170,
            column: 1
          }
        },
        line: 163
      },
      "6": {
        name: "createCodeComment",
        decl: {
          start: {
            line: 176,
            column: 16
          },
          end: {
            line: 176,
            column: 33
          }
        },
        loc: {
          start: {
            line: 176,
            column: 40
          },
          end: {
            line: 183,
            column: 1
          }
        },
        line: 176
      },
      "7": {
        name: "createLinkComment",
        decl: {
          start: {
            line: 190,
            column: 16
          },
          end: {
            line: 190,
            column: 33
          }
        },
        loc: {
          start: {
            line: 190,
            column: 45
          },
          end: {
            line: 197,
            column: 1
          }
        },
        line: 190
      },
      "8": {
        name: "combineCommentBlocks",
        decl: {
          start: {
            line: 203,
            column: 16
          },
          end: {
            line: 203,
            column: 36
          }
        },
        loc: {
          start: {
            line: 203,
            column: 45
          },
          end: {
            line: 205,
            column: 1
          }
        },
        line: 203
      },
      "9": {
        name: "parseMarkdownToClickUpComment",
        decl: {
          start: {
            line: 212,
            column: 16
          },
          end: {
            line: 212,
            column: 45
          }
        },
        loc: {
          start: {
            line: 212,
            column: 56
          },
          end: {
            line: 283,
            column: 1
          }
        },
        line: 212
      },
      "10": {
        name: "markdownToPlainText",
        decl: {
          start: {
            line: 289,
            column: 16
          },
          end: {
            line: 289,
            column: 35
          }
        },
        loc: {
          start: {
            line: 289,
            column: 46
          },
          end: {
            line: 322,
            column: 1
          }
        },
        line: 289
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 306,
            column: 53
          },
          end: {
            line: 306,
            column: 54
          }
        },
        loc: {
          start: {
            line: 306,
            column: 64
          },
          end: {
            line: 310,
            column: 5
          }
        },
        line: 306
      },
      "12": {
        name: "cleanDuplicateCommentText",
        decl: {
          start: {
            line: 329,
            column: 16
          },
          end: {
            line: 329,
            column: 41
          }
        },
        loc: {
          start: {
            line: 329,
            column: 55
          },
          end: {
            line: 399,
            column: 1
          }
        },
        line: 329
      },
      "13": {
        name: "cleanClickUpCommentResponse",
        decl: {
          start: {
            line: 405,
            column: 16
          },
          end: {
            line: 405,
            column: 43
          }
        },
        loc: {
          start: {
            line: 405,
            column: 53
          },
          end: {
            line: 419,
            column: 1
          }
        },
        line: 405
      },
      "14": {
        name: "ensureCodeBlockSeparation",
        decl: {
          start: {
            line: 426,
            column: 16
          },
          end: {
            line: 426,
            column: 41
          }
        },
        loc: {
          start: {
            line: 426,
            column: 50
          },
          end: {
            line: 461,
            column: 1
          }
        },
        line: 426
      },
      "15": {
        name: "prepareCommentForClickUp",
        decl: {
          start: {
            line: 468,
            column: 16
          },
          end: {
            line: 468,
            column: 40
          }
        },
        loc: {
          start: {
            line: 468,
            column: 50
          },
          end: {
            line: 488,
            column: 1
          }
        },
        line: 468
      },
      "16": {
        name: "processCommentBlocks",
        decl: {
          start: {
            line: 495,
            column: 16
          },
          end: {
            line: 495,
            column: 36
          }
        },
        loc: {
          start: {
            line: 495,
            column: 45
          },
          end: {
            line: 505,
            column: 1
          }
        },
        line: 495
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 500,
            column: 40
          },
          end: {
            line: 500,
            column: 41
          }
        },
        loc: {
          start: {
            line: 500,
            column: 50
          },
          end: {
            line: 503,
            column: 5
          }
        },
        line: 500
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 14,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 14,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 12
      },
      "1": {
        loc: {
          start: {
            line: 12,
            column: 8
          },
          end: {
            line: 12,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 12,
            column: 8
          },
          end: {
            line: 12,
            column: 17
          }
        }, {
          start: {
            line: 12,
            column: 21
          },
          end: {
            line: 12,
            column: 49
          }
        }],
        line: 12
      },
      "2": {
        loc: {
          start: {
            line: 20,
            column: 8
          },
          end: {
            line: 21,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 20,
            column: 8
          },
          end: {
            line: 21,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 20
      },
      "3": {
        loc: {
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 87,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 87,
            column: 9
          }
        }, {
          start: {
            line: 31,
            column: 13
          },
          end: {
            line: 87,
            column: 9
          }
        }],
        line: 23
      },
      "4": {
        loc: {
          start: {
            line: 23,
            column: 12
          },
          end: {
            line: 23,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 12
          },
          end: {
            line: 23,
            column: 33
          }
        }, {
          start: {
            line: 23,
            column: 37
          },
          end: {
            line: 23,
            column: 56
          }
        }],
        line: 23
      },
      "5": {
        loc: {
          start: {
            line: 31,
            column: 13
          },
          end: {
            line: 87,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 13
          },
          end: {
            line: 87,
            column: 9
          }
        }, {
          start: {
            line: 40,
            column: 13
          },
          end: {
            line: 87,
            column: 9
          }
        }],
        line: 31
      },
      "6": {
        loc: {
          start: {
            line: 31,
            column: 17
          },
          end: {
            line: 32,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 18
          },
          end: {
            line: 31,
            column: 38
          }
        }, {
          start: {
            line: 31,
            column: 42
          },
          end: {
            line: 31,
            column: 60
          }
        }, {
          start: {
            line: 31,
            column: 64
          },
          end: {
            line: 31,
            column: 86
          }
        }, {
          start: {
            line: 32,
            column: 13
          },
          end: {
            line: 32,
            column: 33
          }
        }, {
          start: {
            line: 32,
            column: 37
          },
          end: {
            line: 32,
            column: 55
          }
        }, {
          start: {
            line: 32,
            column: 59
          },
          end: {
            line: 32,
            column: 81
          }
        }],
        line: 31
      },
      "7": {
        loc: {
          start: {
            line: 40,
            column: 13
          },
          end: {
            line: 87,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 13
          },
          end: {
            line: 87,
            column: 9
          }
        }, {
          start: {
            line: 48,
            column: 13
          },
          end: {
            line: 87,
            column: 9
          }
        }],
        line: 40
      },
      "8": {
        loc: {
          start: {
            line: 40,
            column: 17
          },
          end: {
            line: 40,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 17
          },
          end: {
            line: 40,
            column: 38
          }
        }, {
          start: {
            line: 40,
            column: 42
          },
          end: {
            line: 40,
            column: 61
          }
        }],
        line: 40
      },
      "9": {
        loc: {
          start: {
            line: 48,
            column: 13
          },
          end: {
            line: 87,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 13
          },
          end: {
            line: 87,
            column: 9
          }
        }, {
          start: {
            line: 56,
            column: 13
          },
          end: {
            line: 87,
            column: 9
          }
        }],
        line: 48
      },
      "10": {
        loc: {
          start: {
            line: 48,
            column: 17
          },
          end: {
            line: 48,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 17
          },
          end: {
            line: 48,
            column: 38
          }
        }, {
          start: {
            line: 48,
            column: 42
          },
          end: {
            line: 48,
            column: 61
          }
        }],
        line: 48
      },
      "11": {
        loc: {
          start: {
            line: 56,
            column: 13
          },
          end: {
            line: 87,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 13
          },
          end: {
            line: 87,
            column: 9
          }
        }, {
          start: {
            line: 64,
            column: 13
          },
          end: {
            line: 87,
            column: 9
          }
        }],
        line: 56
      },
      "12": {
        loc: {
          start: {
            line: 56,
            column: 17
          },
          end: {
            line: 56,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 17
          },
          end: {
            line: 56,
            column: 37
          }
        }, {
          start: {
            line: 56,
            column: 41
          },
          end: {
            line: 56,
            column: 59
          }
        }],
        line: 56
      },
      "13": {
        loc: {
          start: {
            line: 64,
            column: 13
          },
          end: {
            line: 87,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 13
          },
          end: {
            line: 87,
            column: 9
          }
        }, {
          start: {
            line: 75,
            column: 13
          },
          end: {
            line: 87,
            column: 9
          }
        }],
        line: 64
      },
      "14": {
        loc: {
          start: {
            line: 66,
            column: 12
          },
          end: {
            line: 72,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 12
          },
          end: {
            line: 72,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "15": {
        loc: {
          start: {
            line: 75,
            column: 13
          },
          end: {
            line: 87,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 13
          },
          end: {
            line: 87,
            column: 9
          }
        }, {
          start: {
            line: 80,
            column: 13
          },
          end: {
            line: 87,
            column: 9
          }
        }],
        line: 75
      },
      "16": {
        loc: {
          start: {
            line: 75,
            column: 17
          },
          end: {
            line: 75,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 75,
            column: 17
          },
          end: {
            line: 75,
            column: 22
          }
        }, {
          start: {
            line: 75,
            column: 26
          },
          end: {
            line: 75,
            column: 38
          }
        }, {
          start: {
            line: 75,
            column: 42
          },
          end: {
            line: 75,
            column: 89
          }
        }],
        line: 75
      },
      "17": {
        loc: {
          start: {
            line: 81,
            column: 12
          },
          end: {
            line: 86,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 12
          },
          end: {
            line: 86,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 81
      },
      "18": {
        loc: {
          start: {
            line: 90,
            column: 4
          },
          end: {
            line: 95,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 4
          },
          end: {
            line: 95,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "19": {
        loc: {
          start: {
            line: 104,
            column: 4
          },
          end: {
            line: 106,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 104,
            column: 4
          },
          end: {
            line: 106,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 104
      },
      "20": {
        loc: {
          start: {
            line: 104,
            column: 8
          },
          end: {
            line: 104,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 104,
            column: 8
          },
          end: {
            line: 104,
            column: 31
          }
        }, {
          start: {
            line: 104,
            column: 35
          },
          end: {
            line: 104,
            column: 72
          }
        }],
        line: 104
      },
      "21": {
        loc: {
          start: {
            line: 108,
            column: 19
          },
          end: {
            line: 108,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 108,
            column: 19
          },
          end: {
            line: 108,
            column: 29
          }
        }, {
          start: {
            line: 108,
            column: 33
          },
          end: {
            line: 108,
            column: 35
          }
        }],
        line: 108
      },
      "22": {
        loc: {
          start: {
            line: 109,
            column: 22
          },
          end: {
            line: 109,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 109,
            column: 22
          },
          end: {
            line: 109,
            column: 38
          }
        }, {
          start: {
            line: 109,
            column: 42
          },
          end: {
            line: 109,
            column: 44
          }
        }],
        line: 109
      },
      "23": {
        loc: {
          start: {
            line: 111,
            column: 8
          },
          end: {
            line: 113,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 111,
            column: 8
          },
          end: {
            line: 113,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 111
      },
      "24": {
        loc: {
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 116,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 116,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 114
      },
      "25": {
        loc: {
          start: {
            line: 117,
            column: 8
          },
          end: {
            line: 119,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 117,
            column: 8
          },
          end: {
            line: 119,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 117
      },
      "26": {
        loc: {
          start: {
            line: 120,
            column: 8
          },
          end: {
            line: 122,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 120,
            column: 8
          },
          end: {
            line: 122,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 120
      },
      "27": {
        loc: {
          start: {
            line: 123,
            column: 8
          },
          end: {
            line: 125,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 123,
            column: 8
          },
          end: {
            line: 125,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 123
      },
      "28": {
        loc: {
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 128,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 128,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 126
      },
      "29": {
        loc: {
          start: {
            line: 140,
            column: 22
          },
          end: {
            line: 140,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 140,
            column: 22
          },
          end: {
            line: 140,
            column: 26
          }
        }, {
          start: {
            line: 140,
            column: 30
          },
          end: {
            line: 140,
            column: 32
          }
        }],
        line: 140
      },
      "30": {
        loc: {
          start: {
            line: 153,
            column: 22
          },
          end: {
            line: 153,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 153,
            column: 22
          },
          end: {
            line: 153,
            column: 26
          }
        }, {
          start: {
            line: 153,
            column: 30
          },
          end: {
            line: 153,
            column: 32
          }
        }],
        line: 153
      },
      "31": {
        loc: {
          start: {
            line: 166,
            column: 22
          },
          end: {
            line: 166,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 166,
            column: 22
          },
          end: {
            line: 166,
            column: 26
          }
        }, {
          start: {
            line: 166,
            column: 30
          },
          end: {
            line: 166,
            column: 32
          }
        }],
        line: 166
      },
      "32": {
        loc: {
          start: {
            line: 179,
            column: 22
          },
          end: {
            line: 179,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 179,
            column: 22
          },
          end: {
            line: 179,
            column: 26
          }
        }, {
          start: {
            line: 179,
            column: 30
          },
          end: {
            line: 179,
            column: 32
          }
        }],
        line: 179
      },
      "33": {
        loc: {
          start: {
            line: 193,
            column: 22
          },
          end: {
            line: 193,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 193,
            column: 22
          },
          end: {
            line: 193,
            column: 26
          }
        }, {
          start: {
            line: 193,
            column: 30
          },
          end: {
            line: 193,
            column: 32
          }
        }],
        line: 193
      },
      "34": {
        loc: {
          start: {
            line: 213,
            column: 4
          },
          end: {
            line: 215,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 213,
            column: 4
          },
          end: {
            line: 215,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 213
      },
      "35": {
        loc: {
          start: {
            line: 213,
            column: 8
          },
          end: {
            line: 213,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 213,
            column: 8
          },
          end: {
            line: 213,
            column: 17
          }
        }, {
          start: {
            line: 213,
            column: 21
          },
          end: {
            line: 213,
            column: 49
          }
        }],
        line: 213
      },
      "36": {
        loc: {
          start: {
            line: 221,
            column: 8
          },
          end: {
            line: 227,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 221,
            column: 8
          },
          end: {
            line: 227,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 221
      },
      "37": {
        loc: {
          start: {
            line: 223,
            column: 12
          },
          end: {
            line: 225,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 223,
            column: 12
          },
          end: {
            line: 225,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 223
      },
      "38": {
        loc: {
          start: {
            line: 229,
            column: 8
          },
          end: {
            line: 238,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 229,
            column: 8
          },
          end: {
            line: 238,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 229
      },
      "39": {
        loc: {
          start: {
            line: 230,
            column: 26
          },
          end: {
            line: 230,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 230,
            column: 26
          },
          end: {
            line: 230,
            column: 55
          }
        }, {
          start: {
            line: 230,
            column: 59
          },
          end: {
            line: 230,
            column: 60
          }
        }],
        line: 230
      },
      "40": {
        loc: {
          start: {
            line: 240,
            column: 8
          },
          end: {
            line: 246,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 240,
            column: 8
          },
          end: {
            line: 246,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 240
      },
      "41": {
        loc: {
          start: {
            line: 240,
            column: 12
          },
          end: {
            line: 240,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 240,
            column: 12
          },
          end: {
            line: 240,
            column: 35
          }
        }, {
          start: {
            line: 240,
            column: 39
          },
          end: {
            line: 240,
            column: 62
          }
        }],
        line: 240
      },
      "42": {
        loc: {
          start: {
            line: 248,
            column: 8
          },
          end: {
            line: 255,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 248,
            column: 8
          },
          end: {
            line: 255,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 248
      },
      "43": {
        loc: {
          start: {
            line: 257,
            column: 8
          },
          end: {
            line: 273,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 257,
            column: 8
          },
          end: {
            line: 273,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 257
      },
      "44": {
        loc: {
          start: {
            line: 261,
            column: 19
          },
          end: {
            line: 261,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 261,
            column: 19
          },
          end: {
            line: 261,
            column: 35
          }
        }, {
          start: {
            line: 261,
            column: 39
          },
          end: {
            line: 261,
            column: 73
          }
        }],
        line: 261
      },
      "45": {
        loc: {
          start: {
            line: 265,
            column: 12
          },
          end: {
            line: 271,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 265,
            column: 12
          },
          end: {
            line: 271,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 265
      },
      "46": {
        loc: {
          start: {
            line: 278,
            column: 8
          },
          end: {
            line: 280,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 278,
            column: 8
          },
          end: {
            line: 280,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 278
      },
      "47": {
        loc: {
          start: {
            line: 290,
            column: 4
          },
          end: {
            line: 292,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 290,
            column: 4
          },
          end: {
            line: 292,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 290
      },
      "48": {
        loc: {
          start: {
            line: 290,
            column: 8
          },
          end: {
            line: 290,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 290,
            column: 8
          },
          end: {
            line: 290,
            column: 17
          }
        }, {
          start: {
            line: 290,
            column: 21
          },
          end: {
            line: 290,
            column: 49
          }
        }],
        line: 290
      },
      "49": {
        loc: {
          start: {
            line: 330,
            column: 4
          },
          end: {
            line: 332,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 330,
            column: 4
          },
          end: {
            line: 332,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 330
      },
      "50": {
        loc: {
          start: {
            line: 330,
            column: 8
          },
          end: {
            line: 330,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 330,
            column: 8
          },
          end: {
            line: 330,
            column: 20
          }
        }, {
          start: {
            line: 330,
            column: 24
          },
          end: {
            line: 330,
            column: 55
          }
        }],
        line: 330
      },
      "51": {
        loc: {
          start: {
            line: 347,
            column: 8
          },
          end: {
            line: 359,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 347,
            column: 8
          },
          end: {
            line: 359,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 347
      },
      "52": {
        loc: {
          start: {
            line: 347,
            column: 12
          },
          end: {
            line: 347,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 347,
            column: 12
          },
          end: {
            line: 347,
            column: 19
          }
        }, {
          start: {
            line: 347,
            column: 23
          },
          end: {
            line: 347,
            column: 42
          }
        }],
        line: 347
      },
      "53": {
        loc: {
          start: {
            line: 351,
            column: 12
          },
          end: {
            line: 358,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 351,
            column: 12
          },
          end: {
            line: 358,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 351
      },
      "54": {
        loc: {
          start: {
            line: 355,
            column: 16
          },
          end: {
            line: 357,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 355,
            column: 16
          },
          end: {
            line: 357,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 355
      },
      "55": {
        loc: {
          start: {
            line: 365,
            column: 4
          },
          end: {
            line: 378,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 365,
            column: 4
          },
          end: {
            line: 378,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 365
      },
      "56": {
        loc: {
          start: {
            line: 371,
            column: 12
          },
          end: {
            line: 376,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 371,
            column: 12
          },
          end: {
            line: 376,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 371
      },
      "57": {
        loc: {
          start: {
            line: 371,
            column: 16
          },
          end: {
            line: 374,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 371,
            column: 16
          },
          end: {
            line: 371,
            column: 60
          }
        }, {
          start: {
            line: 372,
            column: 16
          },
          end: {
            line: 372,
            column: 39
          }
        }, {
          start: {
            line: 373,
            column: 16
          },
          end: {
            line: 373,
            column: 45
          }
        }, {
          start: {
            line: 374,
            column: 16
          },
          end: {
            line: 374,
            column: 45
          }
        }],
        line: 371
      },
      "58": {
        loc: {
          start: {
            line: 381,
            column: 4
          },
          end: {
            line: 397,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 381,
            column: 4
          },
          end: {
            line: 397,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 381
      },
      "59": {
        loc: {
          start: {
            line: 390,
            column: 12
          },
          end: {
            line: 392,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 390,
            column: 12
          },
          end: {
            line: 392,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 390
      },
      "60": {
        loc: {
          start: {
            line: 390,
            column: 16
          },
          end: {
            line: 390,
            column: 102
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 390,
            column: 16
          },
          end: {
            line: 390,
            column: 36
          }
        }, {
          start: {
            line: 390,
            column: 40
          },
          end: {
            line: 390,
            column: 102
          }
        }],
        line: 390
      },
      "61": {
        loc: {
          start: {
            line: 394,
            column: 8
          },
          end: {
            line: 396,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 394,
            column: 8
          },
          end: {
            line: 396,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 394
      },
      "62": {
        loc: {
          start: {
            line: 406,
            column: 4
          },
          end: {
            line: 408,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 406,
            column: 4
          },
          end: {
            line: 408,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 406
      },
      "63": {
        loc: {
          start: {
            line: 406,
            column: 8
          },
          end: {
            line: 406,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 406,
            column: 8
          },
          end: {
            line: 406,
            column: 16
          }
        }, {
          start: {
            line: 406,
            column: 20
          },
          end: {
            line: 406,
            column: 47
          }
        }],
        line: 406
      },
      "64": {
        loc: {
          start: {
            line: 411,
            column: 4
          },
          end: {
            line: 413,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 411,
            column: 4
          },
          end: {
            line: 413,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 411
      },
      "65": {
        loc: {
          start: {
            line: 411,
            column: 8
          },
          end: {
            line: 411,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 411,
            column: 8
          },
          end: {
            line: 411,
            column: 28
          }
        }, {
          start: {
            line: 411,
            column: 32
          },
          end: {
            line: 411,
            column: 72
          }
        }],
        line: 411
      },
      "66": {
        loc: {
          start: {
            line: 415,
            column: 4
          },
          end: {
            line: 417,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 415,
            column: 4
          },
          end: {
            line: 417,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 415
      },
      "67": {
        loc: {
          start: {
            line: 415,
            column: 8
          },
          end: {
            line: 415,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 415,
            column: 8
          },
          end: {
            line: 415,
            column: 32
          }
        }, {
          start: {
            line: 415,
            column: 36
          },
          end: {
            line: 415,
            column: 80
          }
        }],
        line: 415
      },
      "68": {
        loc: {
          start: {
            line: 427,
            column: 4
          },
          end: {
            line: 429,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 427,
            column: 4
          },
          end: {
            line: 429,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 427
      },
      "69": {
        loc: {
          start: {
            line: 427,
            column: 8
          },
          end: {
            line: 427,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 427,
            column: 8
          },
          end: {
            line: 427,
            column: 15
          }
        }, {
          start: {
            line: 427,
            column: 19
          },
          end: {
            line: 427,
            column: 41
          }
        }, {
          start: {
            line: 427,
            column: 45
          },
          end: {
            line: 427,
            column: 64
          }
        }],
        line: 427
      },
      "70": {
        loc: {
          start: {
            line: 433,
            column: 30
          },
          end: {
            line: 433,
            column: 58
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 433,
            column: 38
          },
          end: {
            line: 433,
            column: 51
          }
        }, {
          start: {
            line: 433,
            column: 54
          },
          end: {
            line: 433,
            column: 58
          }
        }],
        line: 433
      },
      "71": {
        loc: {
          start: {
            line: 435,
            column: 28
          },
          end: {
            line: 436,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 435,
            column: 28
          },
          end: {
            line: 435,
            column: 51
          }
        }, {
          start: {
            line: 436,
            column: 13
          },
          end: {
            line: 436,
            column: 50
          }
        }, {
          start: {
            line: 436,
            column: 54
          },
          end: {
            line: 436,
            column: 82
          }
        }],
        line: 435
      },
      "72": {
        loc: {
          start: {
            line: 438,
            column: 8
          },
          end: {
            line: 454,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 438,
            column: 8
          },
          end: {
            line: 454,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 438
      },
      "73": {
        loc: {
          start: {
            line: 438,
            column: 12
          },
          end: {
            line: 438,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 438,
            column: 12
          },
          end: {
            line: 438,
            column: 23
          }
        }, {
          start: {
            line: 438,
            column: 27
          },
          end: {
            line: 438,
            column: 40
          }
        }],
        line: 438
      },
      "74": {
        loc: {
          start: {
            line: 440,
            column: 33
          },
          end: {
            line: 440,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 440,
            column: 33
          },
          end: {
            line: 440,
            column: 51
          }
        }, {
          start: {
            line: 440,
            column: 55
          },
          end: {
            line: 440,
            column: 57
          }
        }],
        line: 440
      },
      "75": {
        loc: {
          start: {
            line: 442,
            column: 12
          },
          end: {
            line: 453,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 442,
            column: 12
          },
          end: {
            line: 453,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 442
      },
      "76": {
        loc: {
          start: {
            line: 447,
            column: 32
          },
          end: {
            line: 447,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 447,
            column: 32
          },
          end: {
            line: 447,
            column: 56
          }
        }, {
          start: {
            line: 447,
            column: 60
          },
          end: {
            line: 447,
            column: 62
          }
        }],
        line: 447
      },
      "77": {
        loc: {
          start: {
            line: 450,
            column: 16
          },
          end: {
            line: 452,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 450,
            column: 16
          },
          end: {
            line: 452,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 450
      },
      "78": {
        loc: {
          start: {
            line: 457,
            column: 24
          },
          end: {
            line: 457,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 457,
            column: 24
          },
          end: {
            line: 457,
            column: 47
          }
        }, {
          start: {
            line: 457,
            column: 51
          },
          end: {
            line: 457,
            column: 53
          }
        }],
        line: 457
      },
      "79": {
        loc: {
          start: {
            line: 469,
            column: 4
          },
          end: {
            line: 473,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 469,
            column: 4
          },
          end: {
            line: 473,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 469
      },
      "80": {
        loc: {
          start: {
            line: 469,
            column: 8
          },
          end: {
            line: 469,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 469,
            column: 8
          },
          end: {
            line: 469,
            column: 16
          }
        }, {
          start: {
            line: 469,
            column: 20
          },
          end: {
            line: 469,
            column: 47
          }
        }],
        line: 469
      },
      "81": {
        loc: {
          start: {
            line: 475,
            column: 24
          },
          end: {
            line: 475,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 475,
            column: 24
          },
          end: {
            line: 475,
            column: 55
          }
        }, {
          start: {
            line: 475,
            column: 59
          },
          end: {
            line: 475,
            column: 82
          }
        }],
        line: 475
      },
      "82": {
        loc: {
          start: {
            line: 476,
            column: 4
          },
          end: {
            line: 487,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 476,
            column: 4
          },
          end: {
            line: 487,
            column: 5
          }
        }, {
          start: {
            line: 482,
            column: 9
          },
          end: {
            line: 487,
            column: 5
          }
        }],
        line: 476
      },
      "83": {
        loc: {
          start: {
            line: 496,
            column: 4
          },
          end: {
            line: 498,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 496,
            column: 4
          },
          end: {
            line: 498,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 496
      },
      "84": {
        loc: {
          start: {
            line: 496,
            column: 8
          },
          end: {
            line: 496,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 496,
            column: 8
          },
          end: {
            line: 496,
            column: 15
          }
        }, {
          start: {
            line: 496,
            column: 19
          },
          end: {
            line: 496,
            column: 41
          }
        }, {
          start: {
            line: 496,
            column: 45
          },
          end: {
            line: 496,
            column: 64
          }
        }],
        line: 496
      },
      "85": {
        loc: {
          start: {
            line: 502,
            column: 20
          },
          end: {
            line: 502,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 502,
            column: 20
          },
          end: {
            line: 502,
            column: 36
          }
        }, {
          start: {
            line: 502,
            column: 40
          },
          end: {
            line: 502,
            column: 42
          }
        }],
        line: 502
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0, 0, 0, 0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0, 0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0, 0],
      "70": [0, 0],
      "71": [0, 0, 0],
      "72": [0, 0],
      "73": [0, 0],
      "74": [0, 0],
      "75": [0, 0],
      "76": [0, 0],
      "77": [0, 0],
      "78": [0, 0],
      "79": [0, 0],
      "80": [0, 0],
      "81": [0, 0],
      "82": [0, 0],
      "83": [0, 0],
      "84": [0, 0, 0],
      "85": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/peterkrzyzek/Development/clickup-mcp-server/src/utils/clickup-comment-formatter.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/peterkrzyzek/Development/clickup-mcp-server/src/utils/clickup-comment-formatter.ts"],
      sourcesContent: ["/**\n * ClickUp Comment Formatting Utility\n * Handles ClickUp's specific comment format structure with text blocks and attributes\n * Based on: https://developer.clickup.com/docs/comment-formatting\n */\n\nexport interface ClickUpCommentBlock {\n  text: string;\n  attributes?: {\n    bold?: boolean;\n    italic?: boolean;\n    underline?: boolean;\n    strikethrough?: boolean;\n    code?: boolean;\n    color?: string;\n    background_color?: string;\n    link?: {\n      url: string;\n    };\n    'code-block'?: {\n      'code-block': string;\n    };\n  };\n}\n\nexport interface ClickUpCommentFormat {\n  comment: ClickUpCommentBlock[];\n}\n\n/**\n * Convert markdown text to ClickUp's structured comment format\n * @param markdown The markdown text to convert\n * @returns ClickUp comment format structure\n */\nexport function markdownToClickUpComment(markdown: string): ClickUpCommentFormat {\n  if (!markdown || typeof markdown !== 'string') {\n    return { comment: [{ text: '', attributes: {} }] };\n  }\n\n  const blocks: ClickUpCommentBlock[] = [];\n  \n  // Improved regex pattern that properly captures links\n  const parts = markdown.split(/(\\*\\*[^*]+\\*\\*|\\*[^*]+\\*|`[^`]+`|~~[^~]+~~|__[^_]+__|_[^_]+_|\\[([^\\]]+)\\]\\(([^)]+)\\))/g);\n  \n  for (let i = 0; i < parts.length; i++) {\n    const part = parts[i];\n    if (!part) continue;\n    \n    // Bold text: **text**\n    if (part.startsWith('**') && part.endsWith('**')) {\n      const text = part.slice(2, -2);\n      blocks.push({\n        text,\n        attributes: { bold: true }\n      });\n    }\n    // Italic text: *text* or _text_\n    else if ((part.startsWith('*') && part.endsWith('*') && !part.startsWith('**')) ||\n             (part.startsWith('_') && part.endsWith('_') && !part.startsWith('__'))) {\n      const text = part.slice(1, -1);\n      blocks.push({\n        text,\n        attributes: { italic: true }\n      });\n    }\n    // Underline: __text__\n    else if (part.startsWith('__') && part.endsWith('__')) {\n      const text = part.slice(2, -2);\n      blocks.push({\n        text,\n        attributes: { underline: true }\n      });\n    }\n    // Strikethrough: ~~text~~\n    else if (part.startsWith('~~') && part.endsWith('~~')) {\n      const text = part.slice(2, -2);\n      blocks.push({\n        text,\n        attributes: { strikethrough: true }\n      });\n    }\n    // Inline code: `text`\n    else if (part.startsWith('`') && part.endsWith('`')) {\n      const text = part.slice(1, -1);\n      blocks.push({\n        text,\n        attributes: { code: true }\n      });\n    }\n    // Links: [text](url) - check if this is a link match\n    else if (part.match(/^\\[([^\\]]+)\\]\\(([^)]+)\\)$/)) {\n      const match = part.match(/^\\[([^\\]]+)\\]\\(([^)]+)\\)$/);\n      if (match) {\n        const [, linkText, url] = match;\n        blocks.push({\n          text: linkText,\n          attributes: { link: { url } }\n        });\n      }\n    }\n    // Check if this is a captured group from link regex (skip these)\n    else if (i > 0 && parts[i-1] && parts[i-1].match(/^\\[([^\\]]+)\\]\\(([^)]+)\\)$/)) {\n      // This is a captured group from the link regex, skip it\n      continue;\n    }\n    // Plain text\n    else {\n      if (part.trim()) {\n        blocks.push({\n          text: part,\n          attributes: {}\n        });\n      }\n    }\n  }\n\n  // If no blocks were created, add the original text as plain text\n  if (blocks.length === 0) {\n    blocks.push({\n      text: markdown,\n      attributes: {}\n    });\n  }\n\n  return { comment: blocks };\n}\n\n/**\n * Convert ClickUp comment format back to markdown\n * @param commentFormat ClickUp comment format structure\n * @returns Markdown string\n */\nexport function clickUpCommentToMarkdown(commentFormat: ClickUpCommentFormat): string {\n  if (!commentFormat?.comment || !Array.isArray(commentFormat.comment)) {\n    return '';\n  }\n\n  return commentFormat.comment.map(block => {\n    let text = block.text || '';\n    const attrs = block.attributes || {};\n\n    // Apply formatting based on attributes\n    if (attrs.bold) {\n      text = `**${text}**`;\n    }\n    if (attrs.italic) {\n      text = `*${text}*`;\n    }\n    if (attrs.underline) {\n      text = `__${text}__`;\n    }\n    if (attrs.strikethrough) {\n      text = `~~${text}~~`;\n    }\n    if (attrs.code) {\n      text = `\\`${text}\\``;\n    }\n    if (attrs.link) {\n      text = `[${text}](${attrs.link.url})`;\n    }\n\n    return text;\n  }).join('');\n}\n\n/**\n * Create a simple plain text comment in ClickUp format\n * @param text Plain text content\n * @returns ClickUp comment format structure\n */\nexport function createPlainTextComment(text: string): ClickUpCommentFormat {\n  return {\n    comment: [{\n      text: text || '',\n      attributes: {}\n    }]\n  };\n}\n\n/**\n * Create a bold text comment in ClickUp format\n * @param text Text to make bold\n * @returns ClickUp comment format structure\n */\nexport function createBoldComment(text: string): ClickUpCommentFormat {\n  return {\n    comment: [{\n      text: text || '',\n      attributes: { bold: true }\n    }]\n  };\n}\n\n/**\n * Create an italic text comment in ClickUp format\n * @param text Text to make italic\n * @returns ClickUp comment format structure\n */\nexport function createItalicComment(text: string): ClickUpCommentFormat {\n  return {\n    comment: [{\n      text: text || '',\n      attributes: { italic: true }\n    }]\n  };\n}\n\n/**\n * Create a code text comment in ClickUp format\n * @param text Text to format as code\n * @returns ClickUp comment format structure\n */\nexport function createCodeComment(text: string): ClickUpCommentFormat {\n  return {\n    comment: [{\n      text: text || '',\n      attributes: { code: true }\n    }]\n  };\n}\n\n/**\n * Create a link comment in ClickUp format\n * @param text Link text\n * @param url Link URL\n * @returns ClickUp comment format structure\n */\nexport function createLinkComment(text: string, url: string): ClickUpCommentFormat {\n  return {\n    comment: [{\n      text: text || '',\n      attributes: { link: { url } }\n    }]\n  };\n}\n\n/**\n * Combine multiple comment blocks into a single comment\n * @param blocks Array of comment blocks\n * @returns ClickUp comment format structure\n */\nexport function combineCommentBlocks(blocks: ClickUpCommentBlock[]): ClickUpCommentFormat {\n  return { comment: blocks };\n}\n\n/**\n * Parse complex markdown and convert to ClickUp comment format\n * This handles more complex scenarios like mixed formatting\n * @param markdown Markdown text\n * @returns ClickUp comment format structure\n */\nexport function parseMarkdownToClickUpComment(markdown: string): ClickUpCommentFormat {\n  if (!markdown || typeof markdown !== 'string') {\n    return createPlainTextComment('');\n  }\n\n  // Handle line breaks and paragraphs\n  const lines = markdown.split('\\n');\n  const blocks: ClickUpCommentBlock[] = [];\n\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i].trim();\n    \n    if (!line) {\n      // Add line break for empty lines (except at the end)\n      if (i < lines.length - 1) {\n        blocks.push({ text: '\\n', attributes: {} });\n      }\n      continue;\n    }\n\n    // Handle headers\n    if (line.startsWith('#')) {\n      const level = line.match(/^#+/)?.[0].length || 1;\n      const headerText = line.replace(/^#+\\s*/, '');\n      blocks.push({\n        text: headerText,\n        attributes: { bold: true } // ClickUp doesn't have header formatting, use bold\n      });\n      blocks.push({ text: '\\n', attributes: {} });\n      continue;\n    }\n\n    // Handle list items\n    if (line.match(/^[-*+]\\s+/) || line.match(/^\\d+\\.\\s+/)) {\n      const listText = line.replace(/^[-*+\\d.]\\s*/, '\u2022 ');\n      const converted = markdownToClickUpComment(listText);\n      blocks.push(...converted.comment);\n      blocks.push({ text: '\\n', attributes: {} });\n      continue;\n    }\n\n    // Handle blockquotes\n    if (line.startsWith('>')) {\n      const quoteText = line.replace(/^>\\s*/, '');\n      blocks.push({ text: '> ', attributes: {} });\n      const converted = markdownToClickUpComment(quoteText);\n      blocks.push(...converted.comment);\n      blocks.push({ text: '\\n', attributes: {} });\n      continue;\n    }\n\n    // Handle code blocks\n    if (line.startsWith('```')) {\n      // For code blocks, we'll treat the content as code\n      const codeLines = [];\n      i++; // Skip the opening ```\n      while (i < lines.length && !lines[i].trim().startsWith('```')) {\n        codeLines.push(lines[i]);\n        i++;\n      }\n      \n      if (codeLines.length > 0) {\n        blocks.push({\n          text: codeLines.join('\\n'),\n          attributes: { code: true }\n        });\n        blocks.push({ text: '\\n', attributes: {} });\n      }\n      continue;\n    }\n\n    // Handle regular text with inline formatting\n    const converted = markdownToClickUpComment(line);\n    blocks.push(...converted.comment);\n    \n    // Add line break if not the last line\n    if (i < lines.length - 1) {\n      blocks.push({ text: '\\n', attributes: {} });\n    }\n  }\n\n  return { comment: blocks };\n}\n\n/**\n * Convert markdown text to plain text by stripping all markdown formatting\n * @param markdown The markdown text to convert\n * @returns Plain text without any markdown formatting\n */\nexport function markdownToPlainText(markdown: string): string {\n  if (!markdown || typeof markdown !== 'string') {\n    return '';\n  }\n\n  let plainText = markdown;\n\n  // Remove headers\n  plainText = plainText.replace(/^#{1,6}\\s+/gm, '');\n  \n  // Remove bold and italic\n  plainText = plainText.replace(/\\*\\*([^*]+)\\*\\*/g, '$1');\n  plainText = plainText.replace(/\\*([^*]+)\\*/g, '$1');\n  plainText = plainText.replace(/__([^_]+)__/g, '$1');\n  plainText = plainText.replace(/_([^_]+)_/g, '$1');\n  \n  // Remove strikethrough\n  plainText = plainText.replace(/~~([^~]+)~~/g, '$1');\n  \n  // Remove inline code\n  plainText = plainText.replace(/`([^`]+)`/g, '$1');\n  \n  // Remove code blocks\n  plainText = plainText.replace(/```[\\s\\S]*?```/g, (match) => {\n    // Extract just the code content, remove the ``` markers\n    const lines = match.split('\\n');\n    return lines.slice(1, -1).join('\\n');\n  });\n  \n  // Remove links, keep just the text\n  plainText = plainText.replace(/\\[([^\\]]+)\\]\\([^)]+\\)/g, '$1');\n  \n  // Remove blockquotes\n  plainText = plainText.replace(/^>\\s*/gm, '');\n  \n  // Convert list items to simple bullets\n  plainText = plainText.replace(/^[-*+]\\s+/gm, '\u2022 ');\n  plainText = plainText.replace(/^\\d+\\.\\s+/gm, '\u2022 ');\n  \n  // Clean up extra whitespace\n  plainText = plainText.replace(/\\n{3,}/g, '\\n\\n');\n  plainText = plainText.trim();\n  \n  return plainText;\n}\n\n/**\n * Clean up duplicate content in ClickUp's comment_text field\n * ClickUp sometimes duplicates content when processing structured comments\n * @param commentText The comment_text field from ClickUp API response\n * @returns Cleaned comment text without duplication\n */\nexport function cleanDuplicateCommentText(commentText: string): string {\n  if (!commentText || typeof commentText !== 'string') {\n    return commentText;\n  }\n\n  // ClickUp often appends the original markdown at the end after the processed text\n  // Look for patterns where the same content appears twice\n  \n  // First, try to find if there's a clear markdown pattern at the end\n  // ClickUp typically appends content that starts with markdown headers or formatting\n  const markdownPatterns = [\n    /\uD83C\uDF89 \\*\\*.*?\\*\\*/,  // Emoji + bold pattern\n    /\uD83D\uDD27 \\*\\*.*?\\*\\*/,  // Emoji + bold pattern\n    /\uD83C\uDFAF \\*\\*.*?\\*\\*/,  // Emoji + bold pattern\n    /### .*?\\*\\*/,     // Header + bold pattern\n    /## .*?\\*\\*/,      // Header + bold pattern\n    /# .*?\\*\\*/        // Header + bold pattern\n  ];\n  \n  for (const pattern of markdownPatterns) {\n    const matches = commentText.match(new RegExp(pattern.source, 'g'));\n    if (matches && matches.length >= 2) {\n      // Found duplicate pattern, try to find the split point\n      const firstMatch = commentText.indexOf(matches[0]);\n      const lastMatch = commentText.lastIndexOf(matches[matches.length - 1]);\n      \n      if (firstMatch !== lastMatch) {\n        // There are multiple occurrences, likely a duplication\n        // Keep everything up to the last occurrence of the first match\n        const splitPoint = commentText.indexOf(matches[0], firstMatch + 1);\n        if (splitPoint > 0) {\n          return commentText.substring(0, splitPoint).trim();\n        }\n      }\n    }\n  }\n  \n  // Alternative approach: look for the pattern where content is repeated\n  // Split by common separators and look for duplicates\n  const lines = commentText.split('\\n');\n  const totalLines = lines.length;\n  \n  if (totalLines > 6) {\n    // Look for a point where content starts repeating\n    for (let i = Math.floor(totalLines / 3); i < Math.floor(totalLines * 2 / 3); i++) {\n      const beforeSplit = lines.slice(0, i).join('\\n');\n      const afterSplit = lines.slice(i).join('\\n');\n      \n      // Check if the after split contains similar content to before split\n      if (afterSplit.length > beforeSplit.length * 0.5 && \n          beforeSplit.length > 50 && \n          afterSplit.includes(lines[0]) && \n          afterSplit.includes(lines[1])) {\n        return beforeSplit.trim();\n      }\n    }\n  }\n  \n  // Last resort: check for exact duplicates by splitting in half\n  const length = commentText.length;\n  if (length > 100) {\n    const midPoint = Math.floor(length / 2);\n    const firstHalf = commentText.substring(0, midPoint);\n    const secondHalf = commentText.substring(midPoint);\n    \n    // Check if second half starts with similar content to first half\n    const firstLines = firstHalf.split('\\n').slice(0, 3);\n    const secondLines = secondHalf.split('\\n').slice(0, 3);\n    \n    let similarity = 0;\n    for (let i = 0; i < Math.min(firstLines.length, secondLines.length); i++) {\n      if (firstLines[i].trim() && secondLines[i].includes(firstLines[i].trim().substring(0, 20))) {\n        similarity++;\n      }\n    }\n    \n    if (similarity >= 2) {\n      return firstHalf.trim();\n    }\n  }\n  \n  return commentText;\n}\n\n/**\n * Process a comment response from ClickUp to clean up any duplication issues\n * @param comment The comment object from ClickUp API\n * @returns Cleaned comment object\n */\nexport function cleanClickUpCommentResponse(comment: any): any {\n  if (!comment || typeof comment !== 'object') {\n    return comment;\n  }\n\n  const cleaned = { ...comment };\n  \n  // Clean up comment_text field if it exists\n  if (cleaned.comment_text && typeof cleaned.comment_text === 'string') {\n    cleaned.comment_text = cleanDuplicateCommentText(cleaned.comment_text);\n  }\n  \n  // Clean up comment_markdown field if it exists\n  if (cleaned.comment_markdown && typeof cleaned.comment_markdown === 'string') {\n    cleaned.comment_markdown = cleanDuplicateCommentText(cleaned.comment_markdown);\n  }\n  \n  return cleaned;\n}\n\n/**\n * Ensure proper newline separation before code blocks\n * ClickUp requires a newline before code blocks to prevent them from being merged with previous text\n * @param blocks Array of comment blocks to process\n * @returns Processed array with proper newline separation\n */\nexport function ensureCodeBlockSeparation(blocks: ClickUpCommentBlock[]): ClickUpCommentBlock[] {\n  if (!blocks || !Array.isArray(blocks) || blocks.length === 0) {\n    return blocks;\n  }\n\n  const processedBlocks: ClickUpCommentBlock[] = [];\n\n  for (let i = 0; i < blocks.length; i++) {\n    const currentBlock = blocks[i];\n    const previousBlock = i > 0 ? blocks[i - 1] : null;\n\n    // Check if current block is a code block\n    const isCodeBlock = currentBlock.attributes && \n      (currentBlock.attributes['code-block'] || currentBlock.attributes.code);\n\n    // If this is a code block and there's a previous block\n    if (isCodeBlock && previousBlock) {\n      // Check if the previous block ends with a newline\n      const previousText = previousBlock.text || '';\n      const endsWithNewline = previousText.endsWith('\\n');\n\n      if (!endsWithNewline) {\n        // Add newline to the previous block's text\n        const updatedPreviousBlock = {\n          ...previousBlock,\n          text: previousText + '\\n',\n          attributes: previousBlock.attributes || {}\n        };\n        \n        // Replace the previous block in our processed array\n        if (processedBlocks.length > 0) {\n          processedBlocks[processedBlocks.length - 1] = updatedPreviousBlock;\n        }\n      }\n    }\n\n    processedBlocks.push({\n      ...currentBlock,\n      attributes: currentBlock.attributes || {}\n    });\n  }\n\n  return processedBlocks;\n}\n\n/**\n * Prepare comment content for ClickUp API submission\n * Supports both simple text and markdown input\n * @param content The content to prepare (markdown or plain text)\n * @returns Object with ONLY structured comment format (no comment_text to avoid duplication)\n */\nexport function prepareCommentForClickUp(content: string): {\n  comment: ClickUpCommentBlock[];\n} {\n  if (!content || typeof content !== 'string') {\n    return { \n      comment: [{ text: '', attributes: {} }]\n    };\n  }\n\n  // Check if content contains markdown formatting\n  const hasMarkdown = /[*_`~#\\[\\]()>-]/.test(content) || content.includes('```');\n  \n  if (hasMarkdown) {\n    const formatted = parseMarkdownToClickUpComment(content);\n    return {\n      comment: ensureCodeBlockSeparation(formatted.comment)\n    };\n  } else {\n    // Simple plain text\n    return {\n      comment: [{ text: content, attributes: {} }]\n    };\n  }\n}\n\n/**\n * Process structured comment blocks to ensure proper code block separation\n * This function should be called on any structured comment array before sending to ClickUp\n * @param blocks Array of comment blocks\n * @returns Processed array with proper newline separation before code blocks\n */\nexport function processCommentBlocks(blocks: ClickUpCommentBlock[]): ClickUpCommentBlock[] {\n  if (!blocks || !Array.isArray(blocks) || blocks.length === 0) {\n    return blocks;\n  }\n\n  // First, ensure all blocks have attributes (even if empty)\n  const normalizedBlocks = blocks.map(block => ({\n    ...block,\n    attributes: block.attributes || {}\n  }));\n\n  return ensureCodeBlockSeparation(normalizedBlocks);\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9c8d03d0a85cd46fcca3e2a0404e08fd95bef049"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1uyad1546v = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1uyad1546v();
/**
 * ClickUp Comment Formatting Utility
 * Handles ClickUp's specific comment format structure with text blocks and attributes
 * Based on: https://developer.clickup.com/docs/comment-formatting
 */
/**
 * Convert markdown text to ClickUp's structured comment format
 * @param markdown The markdown text to convert
 * @returns ClickUp comment format structure
 */
export function markdownToClickUpComment(markdown) {
  /* istanbul ignore next */
  cov_1uyad1546v().f[0]++;
  cov_1uyad1546v().s[0]++;
  if (
  /* istanbul ignore next */
  (cov_1uyad1546v().b[1][0]++, !markdown) ||
  /* istanbul ignore next */
  (cov_1uyad1546v().b[1][1]++, typeof markdown !== 'string')) {
    /* istanbul ignore next */
    cov_1uyad1546v().b[0][0]++;
    cov_1uyad1546v().s[1]++;
    return {
      comment: [{
        text: '',
        attributes: {}
      }]
    };
  } else
  /* istanbul ignore next */
  {
    cov_1uyad1546v().b[0][1]++;
  }
  const blocks =
  /* istanbul ignore next */
  (cov_1uyad1546v().s[2]++, []);
  // Improved regex pattern that properly captures links
  const parts =
  /* istanbul ignore next */
  (cov_1uyad1546v().s[3]++, markdown.split(/(\*\*[^*]+\*\*|\*[^*]+\*|`[^`]+`|~~[^~]+~~|__[^_]+__|_[^_]+_|\[([^\]]+)\]\(([^)]+)\))/g));
  /* istanbul ignore next */
  cov_1uyad1546v().s[4]++;
  for (let i =
  /* istanbul ignore next */
  (cov_1uyad1546v().s[5]++, 0); i < parts.length; i++) {
    const part =
    /* istanbul ignore next */
    (cov_1uyad1546v().s[6]++, parts[i]);
    /* istanbul ignore next */
    cov_1uyad1546v().s[7]++;
    if (!part) {
      /* istanbul ignore next */
      cov_1uyad1546v().b[2][0]++;
      cov_1uyad1546v().s[8]++;
      continue;
    } else
    /* istanbul ignore next */
    {
      cov_1uyad1546v().b[2][1]++;
    }
    // Bold text: **text**
    cov_1uyad1546v().s[9]++;
    if (
    /* istanbul ignore next */
    (cov_1uyad1546v().b[4][0]++, part.startsWith('**')) &&
    /* istanbul ignore next */
    (cov_1uyad1546v().b[4][1]++, part.endsWith('**'))) {
      /* istanbul ignore next */
      cov_1uyad1546v().b[3][0]++;
      const text =
      /* istanbul ignore next */
      (cov_1uyad1546v().s[10]++, part.slice(2, -2));
      /* istanbul ignore next */
      cov_1uyad1546v().s[11]++;
      blocks.push({
        text,
        attributes: {
          bold: true
        }
      });
    }
    // Italic text: *text* or _text_
    else {
      /* istanbul ignore next */
      cov_1uyad1546v().b[3][1]++;
      cov_1uyad1546v().s[12]++;
      if (
      /* istanbul ignore next */
      (cov_1uyad1546v().b[6][0]++, part.startsWith('*')) &&
      /* istanbul ignore next */
      (cov_1uyad1546v().b[6][1]++, part.endsWith('*')) &&
      /* istanbul ignore next */
      (cov_1uyad1546v().b[6][2]++, !part.startsWith('**')) ||
      /* istanbul ignore next */
      (cov_1uyad1546v().b[6][3]++, part.startsWith('_')) &&
      /* istanbul ignore next */
      (cov_1uyad1546v().b[6][4]++, part.endsWith('_')) &&
      /* istanbul ignore next */
      (cov_1uyad1546v().b[6][5]++, !part.startsWith('__'))) {
        /* istanbul ignore next */
        cov_1uyad1546v().b[5][0]++;
        const text =
        /* istanbul ignore next */
        (cov_1uyad1546v().s[13]++, part.slice(1, -1));
        /* istanbul ignore next */
        cov_1uyad1546v().s[14]++;
        blocks.push({
          text,
          attributes: {
            italic: true
          }
        });
      }
      // Underline: __text__
      else {
        /* istanbul ignore next */
        cov_1uyad1546v().b[5][1]++;
        cov_1uyad1546v().s[15]++;
        if (
        /* istanbul ignore next */
        (cov_1uyad1546v().b[8][0]++, part.startsWith('__')) &&
        /* istanbul ignore next */
        (cov_1uyad1546v().b[8][1]++, part.endsWith('__'))) {
          /* istanbul ignore next */
          cov_1uyad1546v().b[7][0]++;
          const text =
          /* istanbul ignore next */
          (cov_1uyad1546v().s[16]++, part.slice(2, -2));
          /* istanbul ignore next */
          cov_1uyad1546v().s[17]++;
          blocks.push({
            text,
            attributes: {
              underline: true
            }
          });
        }
        // Strikethrough: ~~text~~
        else {
          /* istanbul ignore next */
          cov_1uyad1546v().b[7][1]++;
          cov_1uyad1546v().s[18]++;
          if (
          /* istanbul ignore next */
          (cov_1uyad1546v().b[10][0]++, part.startsWith('~~')) &&
          /* istanbul ignore next */
          (cov_1uyad1546v().b[10][1]++, part.endsWith('~~'))) {
            /* istanbul ignore next */
            cov_1uyad1546v().b[9][0]++;
            const text =
            /* istanbul ignore next */
            (cov_1uyad1546v().s[19]++, part.slice(2, -2));
            /* istanbul ignore next */
            cov_1uyad1546v().s[20]++;
            blocks.push({
              text,
              attributes: {
                strikethrough: true
              }
            });
          }
          // Inline code: `text`
          else {
            /* istanbul ignore next */
            cov_1uyad1546v().b[9][1]++;
            cov_1uyad1546v().s[21]++;
            if (
            /* istanbul ignore next */
            (cov_1uyad1546v().b[12][0]++, part.startsWith('`')) &&
            /* istanbul ignore next */
            (cov_1uyad1546v().b[12][1]++, part.endsWith('`'))) {
              /* istanbul ignore next */
              cov_1uyad1546v().b[11][0]++;
              const text =
              /* istanbul ignore next */
              (cov_1uyad1546v().s[22]++, part.slice(1, -1));
              /* istanbul ignore next */
              cov_1uyad1546v().s[23]++;
              blocks.push({
                text,
                attributes: {
                  code: true
                }
              });
            }
            // Links: [text](url) - check if this is a link match
            else {
              /* istanbul ignore next */
              cov_1uyad1546v().b[11][1]++;
              cov_1uyad1546v().s[24]++;
              if (part.match(/^\[([^\]]+)\]\(([^)]+)\)$/)) {
                /* istanbul ignore next */
                cov_1uyad1546v().b[13][0]++;
                const match =
                /* istanbul ignore next */
                (cov_1uyad1546v().s[25]++, part.match(/^\[([^\]]+)\]\(([^)]+)\)$/));
                /* istanbul ignore next */
                cov_1uyad1546v().s[26]++;
                if (match) {
                  /* istanbul ignore next */
                  cov_1uyad1546v().b[14][0]++;
                  const [, linkText, url] =
                  /* istanbul ignore next */
                  (cov_1uyad1546v().s[27]++, match);
                  /* istanbul ignore next */
                  cov_1uyad1546v().s[28]++;
                  blocks.push({
                    text: linkText,
                    attributes: {
                      link: {
                        url
                      }
                    }
                  });
                } else
                /* istanbul ignore next */
                {
                  cov_1uyad1546v().b[14][1]++;
                }
              }
              // Check if this is a captured group from link regex (skip these)
              else {
                /* istanbul ignore next */
                cov_1uyad1546v().b[13][1]++;
                cov_1uyad1546v().s[29]++;
                if (
                /* istanbul ignore next */
                (cov_1uyad1546v().b[16][0]++, i > 0) &&
                /* istanbul ignore next */
                (cov_1uyad1546v().b[16][1]++, parts[i - 1]) &&
                /* istanbul ignore next */
                (cov_1uyad1546v().b[16][2]++, parts[i - 1].match(/^\[([^\]]+)\]\(([^)]+)\)$/))) {
                  /* istanbul ignore next */
                  cov_1uyad1546v().b[15][0]++;
                  cov_1uyad1546v().s[30]++;
                  // This is a captured group from the link regex, skip it
                  continue;
                }
                // Plain text
                else {
                  /* istanbul ignore next */
                  cov_1uyad1546v().b[15][1]++;
                  cov_1uyad1546v().s[31]++;
                  if (part.trim()) {
                    /* istanbul ignore next */
                    cov_1uyad1546v().b[17][0]++;
                    cov_1uyad1546v().s[32]++;
                    blocks.push({
                      text: part,
                      attributes: {}
                    });
                  } else
                  /* istanbul ignore next */
                  {
                    cov_1uyad1546v().b[17][1]++;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  // If no blocks were created, add the original text as plain text
  /* istanbul ignore next */
  cov_1uyad1546v().s[33]++;
  if (blocks.length === 0) {
    /* istanbul ignore next */
    cov_1uyad1546v().b[18][0]++;
    cov_1uyad1546v().s[34]++;
    blocks.push({
      text: markdown,
      attributes: {}
    });
  } else
  /* istanbul ignore next */
  {
    cov_1uyad1546v().b[18][1]++;
  }
  cov_1uyad1546v().s[35]++;
  return {
    comment: blocks
  };
}
/**
 * Convert ClickUp comment format back to markdown
 * @param commentFormat ClickUp comment format structure
 * @returns Markdown string
 */
export function clickUpCommentToMarkdown(commentFormat) {
  /* istanbul ignore next */
  cov_1uyad1546v().f[1]++;
  cov_1uyad1546v().s[36]++;
  if (
  /* istanbul ignore next */
  (cov_1uyad1546v().b[20][0]++, !commentFormat?.comment) ||
  /* istanbul ignore next */
  (cov_1uyad1546v().b[20][1]++, !Array.isArray(commentFormat.comment))) {
    /* istanbul ignore next */
    cov_1uyad1546v().b[19][0]++;
    cov_1uyad1546v().s[37]++;
    return '';
  } else
  /* istanbul ignore next */
  {
    cov_1uyad1546v().b[19][1]++;
  }
  cov_1uyad1546v().s[38]++;
  return commentFormat.comment.map(block => {
    /* istanbul ignore next */
    cov_1uyad1546v().f[2]++;
    let text =
    /* istanbul ignore next */
    (cov_1uyad1546v().s[39]++,
    /* istanbul ignore next */
    (cov_1uyad1546v().b[21][0]++, block.text) ||
    /* istanbul ignore next */
    (cov_1uyad1546v().b[21][1]++, ''));
    const attrs =
    /* istanbul ignore next */
    (cov_1uyad1546v().s[40]++,
    /* istanbul ignore next */
    (cov_1uyad1546v().b[22][0]++, block.attributes) ||
    /* istanbul ignore next */
    (cov_1uyad1546v().b[22][1]++, {}));
    // Apply formatting based on attributes
    /* istanbul ignore next */
    cov_1uyad1546v().s[41]++;
    if (attrs.bold) {
      /* istanbul ignore next */
      cov_1uyad1546v().b[23][0]++;
      cov_1uyad1546v().s[42]++;
      text = `**${text}**`;
    } else
    /* istanbul ignore next */
    {
      cov_1uyad1546v().b[23][1]++;
    }
    cov_1uyad1546v().s[43]++;
    if (attrs.italic) {
      /* istanbul ignore next */
      cov_1uyad1546v().b[24][0]++;
      cov_1uyad1546v().s[44]++;
      text = `*${text}*`;
    } else
    /* istanbul ignore next */
    {
      cov_1uyad1546v().b[24][1]++;
    }
    cov_1uyad1546v().s[45]++;
    if (attrs.underline) {
      /* istanbul ignore next */
      cov_1uyad1546v().b[25][0]++;
      cov_1uyad1546v().s[46]++;
      text = `__${text}__`;
    } else
    /* istanbul ignore next */
    {
      cov_1uyad1546v().b[25][1]++;
    }
    cov_1uyad1546v().s[47]++;
    if (attrs.strikethrough) {
      /* istanbul ignore next */
      cov_1uyad1546v().b[26][0]++;
      cov_1uyad1546v().s[48]++;
      text = `~~${text}~~`;
    } else
    /* istanbul ignore next */
    {
      cov_1uyad1546v().b[26][1]++;
    }
    cov_1uyad1546v().s[49]++;
    if (attrs.code) {
      /* istanbul ignore next */
      cov_1uyad1546v().b[27][0]++;
      cov_1uyad1546v().s[50]++;
      text = `\`${text}\``;
    } else
    /* istanbul ignore next */
    {
      cov_1uyad1546v().b[27][1]++;
    }
    cov_1uyad1546v().s[51]++;
    if (attrs.link) {
      /* istanbul ignore next */
      cov_1uyad1546v().b[28][0]++;
      cov_1uyad1546v().s[52]++;
      text = `[${text}](${attrs.link.url})`;
    } else
    /* istanbul ignore next */
    {
      cov_1uyad1546v().b[28][1]++;
    }
    cov_1uyad1546v().s[53]++;
    return text;
  }).join('');
}
/**
 * Create a simple plain text comment in ClickUp format
 * @param text Plain text content
 * @returns ClickUp comment format structure
 */
export function createPlainTextComment(text) {
  /* istanbul ignore next */
  cov_1uyad1546v().f[3]++;
  cov_1uyad1546v().s[54]++;
  return {
    comment: [{
      text:
      /* istanbul ignore next */
      (cov_1uyad1546v().b[29][0]++, text) ||
      /* istanbul ignore next */
      (cov_1uyad1546v().b[29][1]++, ''),
      attributes: {}
    }]
  };
}
/**
 * Create a bold text comment in ClickUp format
 * @param text Text to make bold
 * @returns ClickUp comment format structure
 */
export function createBoldComment(text) {
  /* istanbul ignore next */
  cov_1uyad1546v().f[4]++;
  cov_1uyad1546v().s[55]++;
  return {
    comment: [{
      text:
      /* istanbul ignore next */
      (cov_1uyad1546v().b[30][0]++, text) ||
      /* istanbul ignore next */
      (cov_1uyad1546v().b[30][1]++, ''),
      attributes: {
        bold: true
      }
    }]
  };
}
/**
 * Create an italic text comment in ClickUp format
 * @param text Text to make italic
 * @returns ClickUp comment format structure
 */
export function createItalicComment(text) {
  /* istanbul ignore next */
  cov_1uyad1546v().f[5]++;
  cov_1uyad1546v().s[56]++;
  return {
    comment: [{
      text:
      /* istanbul ignore next */
      (cov_1uyad1546v().b[31][0]++, text) ||
      /* istanbul ignore next */
      (cov_1uyad1546v().b[31][1]++, ''),
      attributes: {
        italic: true
      }
    }]
  };
}
/**
 * Create a code text comment in ClickUp format
 * @param text Text to format as code
 * @returns ClickUp comment format structure
 */
export function createCodeComment(text) {
  /* istanbul ignore next */
  cov_1uyad1546v().f[6]++;
  cov_1uyad1546v().s[57]++;
  return {
    comment: [{
      text:
      /* istanbul ignore next */
      (cov_1uyad1546v().b[32][0]++, text) ||
      /* istanbul ignore next */
      (cov_1uyad1546v().b[32][1]++, ''),
      attributes: {
        code: true
      }
    }]
  };
}
/**
 * Create a link comment in ClickUp format
 * @param text Link text
 * @param url Link URL
 * @returns ClickUp comment format structure
 */
export function createLinkComment(text, url) {
  /* istanbul ignore next */
  cov_1uyad1546v().f[7]++;
  cov_1uyad1546v().s[58]++;
  return {
    comment: [{
      text:
      /* istanbul ignore next */
      (cov_1uyad1546v().b[33][0]++, text) ||
      /* istanbul ignore next */
      (cov_1uyad1546v().b[33][1]++, ''),
      attributes: {
        link: {
          url
        }
      }
    }]
  };
}
/**
 * Combine multiple comment blocks into a single comment
 * @param blocks Array of comment blocks
 * @returns ClickUp comment format structure
 */
export function combineCommentBlocks(blocks) {
  /* istanbul ignore next */
  cov_1uyad1546v().f[8]++;
  cov_1uyad1546v().s[59]++;
  return {
    comment: blocks
  };
}
/**
 * Parse complex markdown and convert to ClickUp comment format
 * This handles more complex scenarios like mixed formatting
 * @param markdown Markdown text
 * @returns ClickUp comment format structure
 */
export function parseMarkdownToClickUpComment(markdown) {
  /* istanbul ignore next */
  cov_1uyad1546v().f[9]++;
  cov_1uyad1546v().s[60]++;
  if (
  /* istanbul ignore next */
  (cov_1uyad1546v().b[35][0]++, !markdown) ||
  /* istanbul ignore next */
  (cov_1uyad1546v().b[35][1]++, typeof markdown !== 'string')) {
    /* istanbul ignore next */
    cov_1uyad1546v().b[34][0]++;
    cov_1uyad1546v().s[61]++;
    return createPlainTextComment('');
  } else
  /* istanbul ignore next */
  {
    cov_1uyad1546v().b[34][1]++;
  }
  // Handle line breaks and paragraphs
  const lines =
  /* istanbul ignore next */
  (cov_1uyad1546v().s[62]++, markdown.split('\n'));
  const blocks =
  /* istanbul ignore next */
  (cov_1uyad1546v().s[63]++, []);
  /* istanbul ignore next */
  cov_1uyad1546v().s[64]++;
  for (let i =
  /* istanbul ignore next */
  (cov_1uyad1546v().s[65]++, 0); i < lines.length; i++) {
    const line =
    /* istanbul ignore next */
    (cov_1uyad1546v().s[66]++, lines[i].trim());
    /* istanbul ignore next */
    cov_1uyad1546v().s[67]++;
    if (!line) {
      /* istanbul ignore next */
      cov_1uyad1546v().b[36][0]++;
      cov_1uyad1546v().s[68]++;
      // Add line break for empty lines (except at the end)
      if (i < lines.length - 1) {
        /* istanbul ignore next */
        cov_1uyad1546v().b[37][0]++;
        cov_1uyad1546v().s[69]++;
        blocks.push({
          text: '\n',
          attributes: {}
        });
      } else
      /* istanbul ignore next */
      {
        cov_1uyad1546v().b[37][1]++;
      }
      cov_1uyad1546v().s[70]++;
      continue;
    } else
    /* istanbul ignore next */
    {
      cov_1uyad1546v().b[36][1]++;
    }
    // Handle headers
    cov_1uyad1546v().s[71]++;
    if (line.startsWith('#')) {
      /* istanbul ignore next */
      cov_1uyad1546v().b[38][0]++;
      const level =
      /* istanbul ignore next */
      (cov_1uyad1546v().s[72]++,
      /* istanbul ignore next */
      (cov_1uyad1546v().b[39][0]++, line.match(/^#+/)?.[0].length) ||
      /* istanbul ignore next */
      (cov_1uyad1546v().b[39][1]++, 1));
      const headerText =
      /* istanbul ignore next */
      (cov_1uyad1546v().s[73]++, line.replace(/^#+\s*/, ''));
      /* istanbul ignore next */
      cov_1uyad1546v().s[74]++;
      blocks.push({
        text: headerText,
        attributes: {
          bold: true
        } // ClickUp doesn't have header formatting, use bold
      });
      /* istanbul ignore next */
      cov_1uyad1546v().s[75]++;
      blocks.push({
        text: '\n',
        attributes: {}
      });
      /* istanbul ignore next */
      cov_1uyad1546v().s[76]++;
      continue;
    } else
    /* istanbul ignore next */
    {
      cov_1uyad1546v().b[38][1]++;
    }
    // Handle list items
    cov_1uyad1546v().s[77]++;
    if (
    /* istanbul ignore next */
    (cov_1uyad1546v().b[41][0]++, line.match(/^[-*+]\s+/)) ||
    /* istanbul ignore next */
    (cov_1uyad1546v().b[41][1]++, line.match(/^\d+\.\s+/))) {
      /* istanbul ignore next */
      cov_1uyad1546v().b[40][0]++;
      const listText =
      /* istanbul ignore next */
      (cov_1uyad1546v().s[78]++, line.replace(/^[-*+\d.]\s*/, '• '));
      const converted =
      /* istanbul ignore next */
      (cov_1uyad1546v().s[79]++, markdownToClickUpComment(listText));
      /* istanbul ignore next */
      cov_1uyad1546v().s[80]++;
      blocks.push(...converted.comment);
      /* istanbul ignore next */
      cov_1uyad1546v().s[81]++;
      blocks.push({
        text: '\n',
        attributes: {}
      });
      /* istanbul ignore next */
      cov_1uyad1546v().s[82]++;
      continue;
    } else
    /* istanbul ignore next */
    {
      cov_1uyad1546v().b[40][1]++;
    }
    // Handle blockquotes
    cov_1uyad1546v().s[83]++;
    if (line.startsWith('>')) {
      /* istanbul ignore next */
      cov_1uyad1546v().b[42][0]++;
      const quoteText =
      /* istanbul ignore next */
      (cov_1uyad1546v().s[84]++, line.replace(/^>\s*/, ''));
      /* istanbul ignore next */
      cov_1uyad1546v().s[85]++;
      blocks.push({
        text: '> ',
        attributes: {}
      });
      const converted =
      /* istanbul ignore next */
      (cov_1uyad1546v().s[86]++, markdownToClickUpComment(quoteText));
      /* istanbul ignore next */
      cov_1uyad1546v().s[87]++;
      blocks.push(...converted.comment);
      /* istanbul ignore next */
      cov_1uyad1546v().s[88]++;
      blocks.push({
        text: '\n',
        attributes: {}
      });
      /* istanbul ignore next */
      cov_1uyad1546v().s[89]++;
      continue;
    } else
    /* istanbul ignore next */
    {
      cov_1uyad1546v().b[42][1]++;
    }
    // Handle code blocks
    cov_1uyad1546v().s[90]++;
    if (line.startsWith('```')) {
      /* istanbul ignore next */
      cov_1uyad1546v().b[43][0]++;
      // For code blocks, we'll treat the content as code
      const codeLines =
      /* istanbul ignore next */
      (cov_1uyad1546v().s[91]++, []);
      /* istanbul ignore next */
      cov_1uyad1546v().s[92]++;
      i++; // Skip the opening ```
      /* istanbul ignore next */
      cov_1uyad1546v().s[93]++;
      while (
      /* istanbul ignore next */
      (cov_1uyad1546v().b[44][0]++, i < lines.length) &&
      /* istanbul ignore next */
      (cov_1uyad1546v().b[44][1]++, !lines[i].trim().startsWith('```'))) {
        /* istanbul ignore next */
        cov_1uyad1546v().s[94]++;
        codeLines.push(lines[i]);
        /* istanbul ignore next */
        cov_1uyad1546v().s[95]++;
        i++;
      }
      /* istanbul ignore next */
      cov_1uyad1546v().s[96]++;
      if (codeLines.length > 0) {
        /* istanbul ignore next */
        cov_1uyad1546v().b[45][0]++;
        cov_1uyad1546v().s[97]++;
        blocks.push({
          text: codeLines.join('\n'),
          attributes: {
            code: true
          }
        });
        /* istanbul ignore next */
        cov_1uyad1546v().s[98]++;
        blocks.push({
          text: '\n',
          attributes: {}
        });
      } else
      /* istanbul ignore next */
      {
        cov_1uyad1546v().b[45][1]++;
      }
      cov_1uyad1546v().s[99]++;
      continue;
    } else
    /* istanbul ignore next */
    {
      cov_1uyad1546v().b[43][1]++;
    }
    // Handle regular text with inline formatting
    const converted =
    /* istanbul ignore next */
    (cov_1uyad1546v().s[100]++, markdownToClickUpComment(line));
    /* istanbul ignore next */
    cov_1uyad1546v().s[101]++;
    blocks.push(...converted.comment);
    // Add line break if not the last line
    /* istanbul ignore next */
    cov_1uyad1546v().s[102]++;
    if (i < lines.length - 1) {
      /* istanbul ignore next */
      cov_1uyad1546v().b[46][0]++;
      cov_1uyad1546v().s[103]++;
      blocks.push({
        text: '\n',
        attributes: {}
      });
    } else
    /* istanbul ignore next */
    {
      cov_1uyad1546v().b[46][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1uyad1546v().s[104]++;
  return {
    comment: blocks
  };
}
/**
 * Convert markdown text to plain text by stripping all markdown formatting
 * @param markdown The markdown text to convert
 * @returns Plain text without any markdown formatting
 */
export function markdownToPlainText(markdown) {
  /* istanbul ignore next */
  cov_1uyad1546v().f[10]++;
  cov_1uyad1546v().s[105]++;
  if (
  /* istanbul ignore next */
  (cov_1uyad1546v().b[48][0]++, !markdown) ||
  /* istanbul ignore next */
  (cov_1uyad1546v().b[48][1]++, typeof markdown !== 'string')) {
    /* istanbul ignore next */
    cov_1uyad1546v().b[47][0]++;
    cov_1uyad1546v().s[106]++;
    return '';
  } else
  /* istanbul ignore next */
  {
    cov_1uyad1546v().b[47][1]++;
  }
  let plainText =
  /* istanbul ignore next */
  (cov_1uyad1546v().s[107]++, markdown);
  // Remove headers
  /* istanbul ignore next */
  cov_1uyad1546v().s[108]++;
  plainText = plainText.replace(/^#{1,6}\s+/gm, '');
  // Remove bold and italic
  /* istanbul ignore next */
  cov_1uyad1546v().s[109]++;
  plainText = plainText.replace(/\*\*([^*]+)\*\*/g, '$1');
  /* istanbul ignore next */
  cov_1uyad1546v().s[110]++;
  plainText = plainText.replace(/\*([^*]+)\*/g, '$1');
  /* istanbul ignore next */
  cov_1uyad1546v().s[111]++;
  plainText = plainText.replace(/__([^_]+)__/g, '$1');
  /* istanbul ignore next */
  cov_1uyad1546v().s[112]++;
  plainText = plainText.replace(/_([^_]+)_/g, '$1');
  // Remove strikethrough
  /* istanbul ignore next */
  cov_1uyad1546v().s[113]++;
  plainText = plainText.replace(/~~([^~]+)~~/g, '$1');
  // Remove inline code
  /* istanbul ignore next */
  cov_1uyad1546v().s[114]++;
  plainText = plainText.replace(/`([^`]+)`/g, '$1');
  // Remove code blocks
  /* istanbul ignore next */
  cov_1uyad1546v().s[115]++;
  plainText = plainText.replace(/```[\s\S]*?```/g, match => {
    /* istanbul ignore next */
    cov_1uyad1546v().f[11]++;
    // Extract just the code content, remove the ``` markers
    const lines =
    /* istanbul ignore next */
    (cov_1uyad1546v().s[116]++, match.split('\n'));
    /* istanbul ignore next */
    cov_1uyad1546v().s[117]++;
    return lines.slice(1, -1).join('\n');
  });
  // Remove links, keep just the text
  /* istanbul ignore next */
  cov_1uyad1546v().s[118]++;
  plainText = plainText.replace(/\[([^\]]+)\]\([^)]+\)/g, '$1');
  // Remove blockquotes
  /* istanbul ignore next */
  cov_1uyad1546v().s[119]++;
  plainText = plainText.replace(/^>\s*/gm, '');
  // Convert list items to simple bullets
  /* istanbul ignore next */
  cov_1uyad1546v().s[120]++;
  plainText = plainText.replace(/^[-*+]\s+/gm, '• ');
  /* istanbul ignore next */
  cov_1uyad1546v().s[121]++;
  plainText = plainText.replace(/^\d+\.\s+/gm, '• ');
  // Clean up extra whitespace
  /* istanbul ignore next */
  cov_1uyad1546v().s[122]++;
  plainText = plainText.replace(/\n{3,}/g, '\n\n');
  /* istanbul ignore next */
  cov_1uyad1546v().s[123]++;
  plainText = plainText.trim();
  /* istanbul ignore next */
  cov_1uyad1546v().s[124]++;
  return plainText;
}
/**
 * Clean up duplicate content in ClickUp's comment_text field
 * ClickUp sometimes duplicates content when processing structured comments
 * @param commentText The comment_text field from ClickUp API response
 * @returns Cleaned comment text without duplication
 */
export function cleanDuplicateCommentText(commentText) {
  /* istanbul ignore next */
  cov_1uyad1546v().f[12]++;
  cov_1uyad1546v().s[125]++;
  if (
  /* istanbul ignore next */
  (cov_1uyad1546v().b[50][0]++, !commentText) ||
  /* istanbul ignore next */
  (cov_1uyad1546v().b[50][1]++, typeof commentText !== 'string')) {
    /* istanbul ignore next */
    cov_1uyad1546v().b[49][0]++;
    cov_1uyad1546v().s[126]++;
    return commentText;
  } else
  /* istanbul ignore next */
  {
    cov_1uyad1546v().b[49][1]++;
  }
  // ClickUp often appends the original markdown at the end after the processed text
  // Look for patterns where the same content appears twice
  // First, try to find if there's a clear markdown pattern at the end
  // ClickUp typically appends content that starts with markdown headers or formatting
  const markdownPatterns =
  /* istanbul ignore next */
  (cov_1uyad1546v().s[127]++, [/🎉 \*\*.*?\*\*/,
  // Emoji + bold pattern
  /🔧 \*\*.*?\*\*/,
  // Emoji + bold pattern
  /🎯 \*\*.*?\*\*/,
  // Emoji + bold pattern
  /### .*?\*\*/,
  // Header + bold pattern
  /## .*?\*\*/,
  // Header + bold pattern
  /# .*?\*\*/ // Header + bold pattern
  ]);
  /* istanbul ignore next */
  cov_1uyad1546v().s[128]++;
  for (const pattern of markdownPatterns) {
    const matches =
    /* istanbul ignore next */
    (cov_1uyad1546v().s[129]++, commentText.match(new RegExp(pattern.source, 'g')));
    /* istanbul ignore next */
    cov_1uyad1546v().s[130]++;
    if (
    /* istanbul ignore next */
    (cov_1uyad1546v().b[52][0]++, matches) &&
    /* istanbul ignore next */
    (cov_1uyad1546v().b[52][1]++, matches.length >= 2)) {
      /* istanbul ignore next */
      cov_1uyad1546v().b[51][0]++;
      // Found duplicate pattern, try to find the split point
      const firstMatch =
      /* istanbul ignore next */
      (cov_1uyad1546v().s[131]++, commentText.indexOf(matches[0]));
      const lastMatch =
      /* istanbul ignore next */
      (cov_1uyad1546v().s[132]++, commentText.lastIndexOf(matches[matches.length - 1]));
      /* istanbul ignore next */
      cov_1uyad1546v().s[133]++;
      if (firstMatch !== lastMatch) {
        /* istanbul ignore next */
        cov_1uyad1546v().b[53][0]++;
        // There are multiple occurrences, likely a duplication
        // Keep everything up to the last occurrence of the first match
        const splitPoint =
        /* istanbul ignore next */
        (cov_1uyad1546v().s[134]++, commentText.indexOf(matches[0], firstMatch + 1));
        /* istanbul ignore next */
        cov_1uyad1546v().s[135]++;
        if (splitPoint > 0) {
          /* istanbul ignore next */
          cov_1uyad1546v().b[54][0]++;
          cov_1uyad1546v().s[136]++;
          return commentText.substring(0, splitPoint).trim();
        } else
        /* istanbul ignore next */
        {
          cov_1uyad1546v().b[54][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1uyad1546v().b[53][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1uyad1546v().b[51][1]++;
    }
  }
  // Alternative approach: look for the pattern where content is repeated
  // Split by common separators and look for duplicates
  const lines =
  /* istanbul ignore next */
  (cov_1uyad1546v().s[137]++, commentText.split('\n'));
  const totalLines =
  /* istanbul ignore next */
  (cov_1uyad1546v().s[138]++, lines.length);
  /* istanbul ignore next */
  cov_1uyad1546v().s[139]++;
  if (totalLines > 6) {
    /* istanbul ignore next */
    cov_1uyad1546v().b[55][0]++;
    cov_1uyad1546v().s[140]++;
    // Look for a point where content starts repeating
    for (let i =
    /* istanbul ignore next */
    (cov_1uyad1546v().s[141]++, Math.floor(totalLines / 3)); i < Math.floor(totalLines * 2 / 3); i++) {
      const beforeSplit =
      /* istanbul ignore next */
      (cov_1uyad1546v().s[142]++, lines.slice(0, i).join('\n'));
      const afterSplit =
      /* istanbul ignore next */
      (cov_1uyad1546v().s[143]++, lines.slice(i).join('\n'));
      // Check if the after split contains similar content to before split
      /* istanbul ignore next */
      cov_1uyad1546v().s[144]++;
      if (
      /* istanbul ignore next */
      (cov_1uyad1546v().b[57][0]++, afterSplit.length > beforeSplit.length * 0.5) &&
      /* istanbul ignore next */
      (cov_1uyad1546v().b[57][1]++, beforeSplit.length > 50) &&
      /* istanbul ignore next */
      (cov_1uyad1546v().b[57][2]++, afterSplit.includes(lines[0])) &&
      /* istanbul ignore next */
      (cov_1uyad1546v().b[57][3]++, afterSplit.includes(lines[1]))) {
        /* istanbul ignore next */
        cov_1uyad1546v().b[56][0]++;
        cov_1uyad1546v().s[145]++;
        return beforeSplit.trim();
      } else
      /* istanbul ignore next */
      {
        cov_1uyad1546v().b[56][1]++;
      }
    }
  } else
  /* istanbul ignore next */
  {
    cov_1uyad1546v().b[55][1]++;
  }
  // Last resort: check for exact duplicates by splitting in half
  const length =
  /* istanbul ignore next */
  (cov_1uyad1546v().s[146]++, commentText.length);
  /* istanbul ignore next */
  cov_1uyad1546v().s[147]++;
  if (length > 100) {
    /* istanbul ignore next */
    cov_1uyad1546v().b[58][0]++;
    const midPoint =
    /* istanbul ignore next */
    (cov_1uyad1546v().s[148]++, Math.floor(length / 2));
    const firstHalf =
    /* istanbul ignore next */
    (cov_1uyad1546v().s[149]++, commentText.substring(0, midPoint));
    const secondHalf =
    /* istanbul ignore next */
    (cov_1uyad1546v().s[150]++, commentText.substring(midPoint));
    // Check if second half starts with similar content to first half
    const firstLines =
    /* istanbul ignore next */
    (cov_1uyad1546v().s[151]++, firstHalf.split('\n').slice(0, 3));
    const secondLines =
    /* istanbul ignore next */
    (cov_1uyad1546v().s[152]++, secondHalf.split('\n').slice(0, 3));
    let similarity =
    /* istanbul ignore next */
    (cov_1uyad1546v().s[153]++, 0);
    /* istanbul ignore next */
    cov_1uyad1546v().s[154]++;
    for (let i =
    /* istanbul ignore next */
    (cov_1uyad1546v().s[155]++, 0); i < Math.min(firstLines.length, secondLines.length); i++) {
      /* istanbul ignore next */
      cov_1uyad1546v().s[156]++;
      if (
      /* istanbul ignore next */
      (cov_1uyad1546v().b[60][0]++, firstLines[i].trim()) &&
      /* istanbul ignore next */
      (cov_1uyad1546v().b[60][1]++, secondLines[i].includes(firstLines[i].trim().substring(0, 20)))) {
        /* istanbul ignore next */
        cov_1uyad1546v().b[59][0]++;
        cov_1uyad1546v().s[157]++;
        similarity++;
      } else
      /* istanbul ignore next */
      {
        cov_1uyad1546v().b[59][1]++;
      }
    }
    /* istanbul ignore next */
    cov_1uyad1546v().s[158]++;
    if (similarity >= 2) {
      /* istanbul ignore next */
      cov_1uyad1546v().b[61][0]++;
      cov_1uyad1546v().s[159]++;
      return firstHalf.trim();
    } else
    /* istanbul ignore next */
    {
      cov_1uyad1546v().b[61][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_1uyad1546v().b[58][1]++;
  }
  cov_1uyad1546v().s[160]++;
  return commentText;
}
/**
 * Process a comment response from ClickUp to clean up any duplication issues
 * @param comment The comment object from ClickUp API
 * @returns Cleaned comment object
 */
export function cleanClickUpCommentResponse(comment) {
  /* istanbul ignore next */
  cov_1uyad1546v().f[13]++;
  cov_1uyad1546v().s[161]++;
  if (
  /* istanbul ignore next */
  (cov_1uyad1546v().b[63][0]++, !comment) ||
  /* istanbul ignore next */
  (cov_1uyad1546v().b[63][1]++, typeof comment !== 'object')) {
    /* istanbul ignore next */
    cov_1uyad1546v().b[62][0]++;
    cov_1uyad1546v().s[162]++;
    return comment;
  } else
  /* istanbul ignore next */
  {
    cov_1uyad1546v().b[62][1]++;
  }
  const cleaned =
  /* istanbul ignore next */
  (cov_1uyad1546v().s[163]++, {
    ...comment
  });
  // Clean up comment_text field if it exists
  /* istanbul ignore next */
  cov_1uyad1546v().s[164]++;
  if (
  /* istanbul ignore next */
  (cov_1uyad1546v().b[65][0]++, cleaned.comment_text) &&
  /* istanbul ignore next */
  (cov_1uyad1546v().b[65][1]++, typeof cleaned.comment_text === 'string')) {
    /* istanbul ignore next */
    cov_1uyad1546v().b[64][0]++;
    cov_1uyad1546v().s[165]++;
    cleaned.comment_text = cleanDuplicateCommentText(cleaned.comment_text);
  } else
  /* istanbul ignore next */
  {
    cov_1uyad1546v().b[64][1]++;
  }
  // Clean up comment_markdown field if it exists
  cov_1uyad1546v().s[166]++;
  if (
  /* istanbul ignore next */
  (cov_1uyad1546v().b[67][0]++, cleaned.comment_markdown) &&
  /* istanbul ignore next */
  (cov_1uyad1546v().b[67][1]++, typeof cleaned.comment_markdown === 'string')) {
    /* istanbul ignore next */
    cov_1uyad1546v().b[66][0]++;
    cov_1uyad1546v().s[167]++;
    cleaned.comment_markdown = cleanDuplicateCommentText(cleaned.comment_markdown);
  } else
  /* istanbul ignore next */
  {
    cov_1uyad1546v().b[66][1]++;
  }
  cov_1uyad1546v().s[168]++;
  return cleaned;
}
/**
 * Ensure proper newline separation before code blocks
 * ClickUp requires a newline before code blocks to prevent them from being merged with previous text
 * @param blocks Array of comment blocks to process
 * @returns Processed array with proper newline separation
 */
export function ensureCodeBlockSeparation(blocks) {
  /* istanbul ignore next */
  cov_1uyad1546v().f[14]++;
  cov_1uyad1546v().s[169]++;
  if (
  /* istanbul ignore next */
  (cov_1uyad1546v().b[69][0]++, !blocks) ||
  /* istanbul ignore next */
  (cov_1uyad1546v().b[69][1]++, !Array.isArray(blocks)) ||
  /* istanbul ignore next */
  (cov_1uyad1546v().b[69][2]++, blocks.length === 0)) {
    /* istanbul ignore next */
    cov_1uyad1546v().b[68][0]++;
    cov_1uyad1546v().s[170]++;
    return blocks;
  } else
  /* istanbul ignore next */
  {
    cov_1uyad1546v().b[68][1]++;
  }
  const processedBlocks =
  /* istanbul ignore next */
  (cov_1uyad1546v().s[171]++, []);
  /* istanbul ignore next */
  cov_1uyad1546v().s[172]++;
  for (let i =
  /* istanbul ignore next */
  (cov_1uyad1546v().s[173]++, 0); i < blocks.length; i++) {
    const currentBlock =
    /* istanbul ignore next */
    (cov_1uyad1546v().s[174]++, blocks[i]);
    const previousBlock =
    /* istanbul ignore next */
    (cov_1uyad1546v().s[175]++, i > 0 ?
    /* istanbul ignore next */
    (cov_1uyad1546v().b[70][0]++, blocks[i - 1]) :
    /* istanbul ignore next */
    (cov_1uyad1546v().b[70][1]++, null));
    // Check if current block is a code block
    const isCodeBlock =
    /* istanbul ignore next */
    (cov_1uyad1546v().s[176]++,
    /* istanbul ignore next */
    (cov_1uyad1546v().b[71][0]++, currentBlock.attributes) && (
    /* istanbul ignore next */
    (cov_1uyad1546v().b[71][1]++, currentBlock.attributes['code-block']) ||
    /* istanbul ignore next */
    (cov_1uyad1546v().b[71][2]++, currentBlock.attributes.code)));
    // If this is a code block and there's a previous block
    /* istanbul ignore next */
    cov_1uyad1546v().s[177]++;
    if (
    /* istanbul ignore next */
    (cov_1uyad1546v().b[73][0]++, isCodeBlock) &&
    /* istanbul ignore next */
    (cov_1uyad1546v().b[73][1]++, previousBlock)) {
      /* istanbul ignore next */
      cov_1uyad1546v().b[72][0]++;
      // Check if the previous block ends with a newline
      const previousText =
      /* istanbul ignore next */
      (cov_1uyad1546v().s[178]++,
      /* istanbul ignore next */
      (cov_1uyad1546v().b[74][0]++, previousBlock.text) ||
      /* istanbul ignore next */
      (cov_1uyad1546v().b[74][1]++, ''));
      const endsWithNewline =
      /* istanbul ignore next */
      (cov_1uyad1546v().s[179]++, previousText.endsWith('\n'));
      /* istanbul ignore next */
      cov_1uyad1546v().s[180]++;
      if (!endsWithNewline) {
        /* istanbul ignore next */
        cov_1uyad1546v().b[75][0]++;
        // Add newline to the previous block's text
        const updatedPreviousBlock =
        /* istanbul ignore next */
        (cov_1uyad1546v().s[181]++, {
          ...previousBlock,
          text: previousText + '\n',
          attributes:
          /* istanbul ignore next */
          (cov_1uyad1546v().b[76][0]++, previousBlock.attributes) ||
          /* istanbul ignore next */
          (cov_1uyad1546v().b[76][1]++, {})
        });
        // Replace the previous block in our processed array
        /* istanbul ignore next */
        cov_1uyad1546v().s[182]++;
        if (processedBlocks.length > 0) {
          /* istanbul ignore next */
          cov_1uyad1546v().b[77][0]++;
          cov_1uyad1546v().s[183]++;
          processedBlocks[processedBlocks.length - 1] = updatedPreviousBlock;
        } else
        /* istanbul ignore next */
        {
          cov_1uyad1546v().b[77][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1uyad1546v().b[75][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1uyad1546v().b[72][1]++;
    }
    cov_1uyad1546v().s[184]++;
    processedBlocks.push({
      ...currentBlock,
      attributes:
      /* istanbul ignore next */
      (cov_1uyad1546v().b[78][0]++, currentBlock.attributes) ||
      /* istanbul ignore next */
      (cov_1uyad1546v().b[78][1]++, {})
    });
  }
  /* istanbul ignore next */
  cov_1uyad1546v().s[185]++;
  return processedBlocks;
}
/**
 * Prepare comment content for ClickUp API submission
 * Supports both simple text and markdown input
 * @param content The content to prepare (markdown or plain text)
 * @returns Object with ONLY structured comment format (no comment_text to avoid duplication)
 */
export function prepareCommentForClickUp(content) {
  /* istanbul ignore next */
  cov_1uyad1546v().f[15]++;
  cov_1uyad1546v().s[186]++;
  if (
  /* istanbul ignore next */
  (cov_1uyad1546v().b[80][0]++, !content) ||
  /* istanbul ignore next */
  (cov_1uyad1546v().b[80][1]++, typeof content !== 'string')) {
    /* istanbul ignore next */
    cov_1uyad1546v().b[79][0]++;
    cov_1uyad1546v().s[187]++;
    return {
      comment: [{
        text: '',
        attributes: {}
      }]
    };
  } else
  /* istanbul ignore next */
  {
    cov_1uyad1546v().b[79][1]++;
  }
  // Check if content contains markdown formatting
  const hasMarkdown =
  /* istanbul ignore next */
  (cov_1uyad1546v().s[188]++,
  /* istanbul ignore next */
  (cov_1uyad1546v().b[81][0]++, /[*_`~#\[\]()>-]/.test(content)) ||
  /* istanbul ignore next */
  (cov_1uyad1546v().b[81][1]++, content.includes('```')));
  /* istanbul ignore next */
  cov_1uyad1546v().s[189]++;
  if (hasMarkdown) {
    /* istanbul ignore next */
    cov_1uyad1546v().b[82][0]++;
    const formatted =
    /* istanbul ignore next */
    (cov_1uyad1546v().s[190]++, parseMarkdownToClickUpComment(content));
    /* istanbul ignore next */
    cov_1uyad1546v().s[191]++;
    return {
      comment: ensureCodeBlockSeparation(formatted.comment)
    };
  } else {
    /* istanbul ignore next */
    cov_1uyad1546v().b[82][1]++;
    cov_1uyad1546v().s[192]++;
    // Simple plain text
    return {
      comment: [{
        text: content,
        attributes: {}
      }]
    };
  }
}
/**
 * Process structured comment blocks to ensure proper code block separation
 * This function should be called on any structured comment array before sending to ClickUp
 * @param blocks Array of comment blocks
 * @returns Processed array with proper newline separation before code blocks
 */
export function processCommentBlocks(blocks) {
  /* istanbul ignore next */
  cov_1uyad1546v().f[16]++;
  cov_1uyad1546v().s[193]++;
  if (
  /* istanbul ignore next */
  (cov_1uyad1546v().b[84][0]++, !blocks) ||
  /* istanbul ignore next */
  (cov_1uyad1546v().b[84][1]++, !Array.isArray(blocks)) ||
  /* istanbul ignore next */
  (cov_1uyad1546v().b[84][2]++, blocks.length === 0)) {
    /* istanbul ignore next */
    cov_1uyad1546v().b[83][0]++;
    cov_1uyad1546v().s[194]++;
    return blocks;
  } else
  /* istanbul ignore next */
  {
    cov_1uyad1546v().b[83][1]++;
  }
  // First, ensure all blocks have attributes (even if empty)
  const normalizedBlocks =
  /* istanbul ignore next */
  (cov_1uyad1546v().s[195]++, blocks.map(block => {
    /* istanbul ignore next */
    cov_1uyad1546v().f[17]++;
    cov_1uyad1546v().s[196]++;
    return {
      ...block,
      attributes:
      /* istanbul ignore next */
      (cov_1uyad1546v().b[85][0]++, block.attributes) ||
      /* istanbul ignore next */
      (cov_1uyad1546v().b[85][1]++, {})
    };
  }));
  /* istanbul ignore next */
  cov_1uyad1546v().s[197]++;
  return ensureCodeBlockSeparation(normalizedBlocks);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMXV5YWQxNTQ2diIsImFjdHVhbENvdmVyYWdlIiwibWFya2Rvd25Ub0NsaWNrVXBDb21tZW50IiwibWFya2Rvd24iLCJmIiwicyIsImIiLCJjb21tZW50IiwidGV4dCIsImF0dHJpYnV0ZXMiLCJibG9ja3MiLCJwYXJ0cyIsInNwbGl0IiwiaSIsImxlbmd0aCIsInBhcnQiLCJzdGFydHNXaXRoIiwiZW5kc1dpdGgiLCJzbGljZSIsInB1c2giLCJib2xkIiwiaXRhbGljIiwidW5kZXJsaW5lIiwic3RyaWtldGhyb3VnaCIsImNvZGUiLCJtYXRjaCIsImxpbmtUZXh0IiwidXJsIiwibGluayIsInRyaW0iLCJjbGlja1VwQ29tbWVudFRvTWFya2Rvd24iLCJjb21tZW50Rm9ybWF0IiwiQXJyYXkiLCJpc0FycmF5IiwibWFwIiwiYmxvY2siLCJhdHRycyIsImpvaW4iLCJjcmVhdGVQbGFpblRleHRDb21tZW50IiwiY3JlYXRlQm9sZENvbW1lbnQiLCJjcmVhdGVJdGFsaWNDb21tZW50IiwiY3JlYXRlQ29kZUNvbW1lbnQiLCJjcmVhdGVMaW5rQ29tbWVudCIsImNvbWJpbmVDb21tZW50QmxvY2tzIiwicGFyc2VNYXJrZG93blRvQ2xpY2tVcENvbW1lbnQiLCJsaW5lcyIsImxpbmUiLCJsZXZlbCIsImhlYWRlclRleHQiLCJyZXBsYWNlIiwibGlzdFRleHQiLCJjb252ZXJ0ZWQiLCJxdW90ZVRleHQiLCJjb2RlTGluZXMiLCJtYXJrZG93blRvUGxhaW5UZXh0IiwicGxhaW5UZXh0IiwiY2xlYW5EdXBsaWNhdGVDb21tZW50VGV4dCIsImNvbW1lbnRUZXh0IiwibWFya2Rvd25QYXR0ZXJucyIsInBhdHRlcm4iLCJtYXRjaGVzIiwiUmVnRXhwIiwic291cmNlIiwiZmlyc3RNYXRjaCIsImluZGV4T2YiLCJsYXN0TWF0Y2giLCJsYXN0SW5kZXhPZiIsInNwbGl0UG9pbnQiLCJzdWJzdHJpbmciLCJ0b3RhbExpbmVzIiwiTWF0aCIsImZsb29yIiwiYmVmb3JlU3BsaXQiLCJhZnRlclNwbGl0IiwiaW5jbHVkZXMiLCJtaWRQb2ludCIsImZpcnN0SGFsZiIsInNlY29uZEhhbGYiLCJmaXJzdExpbmVzIiwic2Vjb25kTGluZXMiLCJzaW1pbGFyaXR5IiwibWluIiwiY2xlYW5DbGlja1VwQ29tbWVudFJlc3BvbnNlIiwiY2xlYW5lZCIsImNvbW1lbnRfdGV4dCIsImNvbW1lbnRfbWFya2Rvd24iLCJlbnN1cmVDb2RlQmxvY2tTZXBhcmF0aW9uIiwicHJvY2Vzc2VkQmxvY2tzIiwiY3VycmVudEJsb2NrIiwicHJldmlvdXNCbG9jayIsImlzQ29kZUJsb2NrIiwicHJldmlvdXNUZXh0IiwiZW5kc1dpdGhOZXdsaW5lIiwidXBkYXRlZFByZXZpb3VzQmxvY2siLCJwcmVwYXJlQ29tbWVudEZvckNsaWNrVXAiLCJjb250ZW50IiwiaGFzTWFya2Rvd24iLCJ0ZXN0IiwiZm9ybWF0dGVkIiwicHJvY2Vzc0NvbW1lbnRCbG9ja3MiLCJub3JtYWxpemVkQmxvY2tzIl0sInNvdXJjZXMiOlsiL1VzZXJzL3BldGVya3J6eXplay9EZXZlbG9wbWVudC9jbGlja3VwLW1jcC1zZXJ2ZXIvc3JjL3V0aWxzL2NsaWNrdXAtY29tbWVudC1mb3JtYXR0ZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDbGlja1VwIENvbW1lbnQgRm9ybWF0dGluZyBVdGlsaXR5XG4gKiBIYW5kbGVzIENsaWNrVXAncyBzcGVjaWZpYyBjb21tZW50IGZvcm1hdCBzdHJ1Y3R1cmUgd2l0aCB0ZXh0IGJsb2NrcyBhbmQgYXR0cmlidXRlc1xuICogQmFzZWQgb246IGh0dHBzOi8vZGV2ZWxvcGVyLmNsaWNrdXAuY29tL2RvY3MvY29tbWVudC1mb3JtYXR0aW5nXG4gKi9cblxuZXhwb3J0IGludGVyZmFjZSBDbGlja1VwQ29tbWVudEJsb2NrIHtcbiAgdGV4dDogc3RyaW5nO1xuICBhdHRyaWJ1dGVzPzoge1xuICAgIGJvbGQ/OiBib29sZWFuO1xuICAgIGl0YWxpYz86IGJvb2xlYW47XG4gICAgdW5kZXJsaW5lPzogYm9vbGVhbjtcbiAgICBzdHJpa2V0aHJvdWdoPzogYm9vbGVhbjtcbiAgICBjb2RlPzogYm9vbGVhbjtcbiAgICBjb2xvcj86IHN0cmluZztcbiAgICBiYWNrZ3JvdW5kX2NvbG9yPzogc3RyaW5nO1xuICAgIGxpbms/OiB7XG4gICAgICB1cmw6IHN0cmluZztcbiAgICB9O1xuICAgICdjb2RlLWJsb2NrJz86IHtcbiAgICAgICdjb2RlLWJsb2NrJzogc3RyaW5nO1xuICAgIH07XG4gIH07XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ2xpY2tVcENvbW1lbnRGb3JtYXQge1xuICBjb21tZW50OiBDbGlja1VwQ29tbWVudEJsb2NrW107XG59XG5cbi8qKlxuICogQ29udmVydCBtYXJrZG93biB0ZXh0IHRvIENsaWNrVXAncyBzdHJ1Y3R1cmVkIGNvbW1lbnQgZm9ybWF0XG4gKiBAcGFyYW0gbWFya2Rvd24gVGhlIG1hcmtkb3duIHRleHQgdG8gY29udmVydFxuICogQHJldHVybnMgQ2xpY2tVcCBjb21tZW50IGZvcm1hdCBzdHJ1Y3R1cmVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG1hcmtkb3duVG9DbGlja1VwQ29tbWVudChtYXJrZG93bjogc3RyaW5nKTogQ2xpY2tVcENvbW1lbnRGb3JtYXQge1xuICBpZiAoIW1hcmtkb3duIHx8IHR5cGVvZiBtYXJrZG93biAhPT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4geyBjb21tZW50OiBbeyB0ZXh0OiAnJywgYXR0cmlidXRlczoge30gfV0gfTtcbiAgfVxuXG4gIGNvbnN0IGJsb2NrczogQ2xpY2tVcENvbW1lbnRCbG9ja1tdID0gW107XG4gIFxuICAvLyBJbXByb3ZlZCByZWdleCBwYXR0ZXJuIHRoYXQgcHJvcGVybHkgY2FwdHVyZXMgbGlua3NcbiAgY29uc3QgcGFydHMgPSBtYXJrZG93bi5zcGxpdCgvKFxcKlxcKlteKl0rXFwqXFwqfFxcKlteKl0rXFwqfGBbXmBdK2B8fn5bXn5dK35+fF9fW15fXStfX3xfW15fXStffFxcWyhbXlxcXV0rKVxcXVxcKChbXildKylcXCkpL2cpO1xuICBcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBwYXJ0cy5sZW5ndGg7IGkrKykge1xuICAgIGNvbnN0IHBhcnQgPSBwYXJ0c1tpXTtcbiAgICBpZiAoIXBhcnQpIGNvbnRpbnVlO1xuICAgIFxuICAgIC8vIEJvbGQgdGV4dDogKip0ZXh0KipcbiAgICBpZiAocGFydC5zdGFydHNXaXRoKCcqKicpICYmIHBhcnQuZW5kc1dpdGgoJyoqJykpIHtcbiAgICAgIGNvbnN0IHRleHQgPSBwYXJ0LnNsaWNlKDIsIC0yKTtcbiAgICAgIGJsb2Nrcy5wdXNoKHtcbiAgICAgICAgdGV4dCxcbiAgICAgICAgYXR0cmlidXRlczogeyBib2xkOiB0cnVlIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgICAvLyBJdGFsaWMgdGV4dDogKnRleHQqIG9yIF90ZXh0X1xuICAgIGVsc2UgaWYgKChwYXJ0LnN0YXJ0c1dpdGgoJyonKSAmJiBwYXJ0LmVuZHNXaXRoKCcqJykgJiYgIXBhcnQuc3RhcnRzV2l0aCgnKionKSkgfHxcbiAgICAgICAgICAgICAocGFydC5zdGFydHNXaXRoKCdfJykgJiYgcGFydC5lbmRzV2l0aCgnXycpICYmICFwYXJ0LnN0YXJ0c1dpdGgoJ19fJykpKSB7XG4gICAgICBjb25zdCB0ZXh0ID0gcGFydC5zbGljZSgxLCAtMSk7XG4gICAgICBibG9ja3MucHVzaCh7XG4gICAgICAgIHRleHQsXG4gICAgICAgIGF0dHJpYnV0ZXM6IHsgaXRhbGljOiB0cnVlIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgICAvLyBVbmRlcmxpbmU6IF9fdGV4dF9fXG4gICAgZWxzZSBpZiAocGFydC5zdGFydHNXaXRoKCdfXycpICYmIHBhcnQuZW5kc1dpdGgoJ19fJykpIHtcbiAgICAgIGNvbnN0IHRleHQgPSBwYXJ0LnNsaWNlKDIsIC0yKTtcbiAgICAgIGJsb2Nrcy5wdXNoKHtcbiAgICAgICAgdGV4dCxcbiAgICAgICAgYXR0cmlidXRlczogeyB1bmRlcmxpbmU6IHRydWUgfVxuICAgICAgfSk7XG4gICAgfVxuICAgIC8vIFN0cmlrZXRocm91Z2g6IH5+dGV4dH5+XG4gICAgZWxzZSBpZiAocGFydC5zdGFydHNXaXRoKCd+ficpICYmIHBhcnQuZW5kc1dpdGgoJ35+JykpIHtcbiAgICAgIGNvbnN0IHRleHQgPSBwYXJ0LnNsaWNlKDIsIC0yKTtcbiAgICAgIGJsb2Nrcy5wdXNoKHtcbiAgICAgICAgdGV4dCxcbiAgICAgICAgYXR0cmlidXRlczogeyBzdHJpa2V0aHJvdWdoOiB0cnVlIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgICAvLyBJbmxpbmUgY29kZTogYHRleHRgXG4gICAgZWxzZSBpZiAocGFydC5zdGFydHNXaXRoKCdgJykgJiYgcGFydC5lbmRzV2l0aCgnYCcpKSB7XG4gICAgICBjb25zdCB0ZXh0ID0gcGFydC5zbGljZSgxLCAtMSk7XG4gICAgICBibG9ja3MucHVzaCh7XG4gICAgICAgIHRleHQsXG4gICAgICAgIGF0dHJpYnV0ZXM6IHsgY29kZTogdHJ1ZSB9XG4gICAgICB9KTtcbiAgICB9XG4gICAgLy8gTGlua3M6IFt0ZXh0XSh1cmwpIC0gY2hlY2sgaWYgdGhpcyBpcyBhIGxpbmsgbWF0Y2hcbiAgICBlbHNlIGlmIChwYXJ0Lm1hdGNoKC9eXFxbKFteXFxdXSspXFxdXFwoKFteKV0rKVxcKSQvKSkge1xuICAgICAgY29uc3QgbWF0Y2ggPSBwYXJ0Lm1hdGNoKC9eXFxbKFteXFxdXSspXFxdXFwoKFteKV0rKVxcKSQvKTtcbiAgICAgIGlmIChtYXRjaCkge1xuICAgICAgICBjb25zdCBbLCBsaW5rVGV4dCwgdXJsXSA9IG1hdGNoO1xuICAgICAgICBibG9ja3MucHVzaCh7XG4gICAgICAgICAgdGV4dDogbGlua1RleHQsXG4gICAgICAgICAgYXR0cmlidXRlczogeyBsaW5rOiB7IHVybCB9IH1cbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuICAgIC8vIENoZWNrIGlmIHRoaXMgaXMgYSBjYXB0dXJlZCBncm91cCBmcm9tIGxpbmsgcmVnZXggKHNraXAgdGhlc2UpXG4gICAgZWxzZSBpZiAoaSA+IDAgJiYgcGFydHNbaS0xXSAmJiBwYXJ0c1tpLTFdLm1hdGNoKC9eXFxbKFteXFxdXSspXFxdXFwoKFteKV0rKVxcKSQvKSkge1xuICAgICAgLy8gVGhpcyBpcyBhIGNhcHR1cmVkIGdyb3VwIGZyb20gdGhlIGxpbmsgcmVnZXgsIHNraXAgaXRcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cbiAgICAvLyBQbGFpbiB0ZXh0XG4gICAgZWxzZSB7XG4gICAgICBpZiAocGFydC50cmltKCkpIHtcbiAgICAgICAgYmxvY2tzLnB1c2goe1xuICAgICAgICAgIHRleHQ6IHBhcnQsXG4gICAgICAgICAgYXR0cmlidXRlczoge31cbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLy8gSWYgbm8gYmxvY2tzIHdlcmUgY3JlYXRlZCwgYWRkIHRoZSBvcmlnaW5hbCB0ZXh0IGFzIHBsYWluIHRleHRcbiAgaWYgKGJsb2Nrcy5sZW5ndGggPT09IDApIHtcbiAgICBibG9ja3MucHVzaCh7XG4gICAgICB0ZXh0OiBtYXJrZG93bixcbiAgICAgIGF0dHJpYnV0ZXM6IHt9XG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4geyBjb21tZW50OiBibG9ja3MgfTtcbn1cblxuLyoqXG4gKiBDb252ZXJ0IENsaWNrVXAgY29tbWVudCBmb3JtYXQgYmFjayB0byBtYXJrZG93blxuICogQHBhcmFtIGNvbW1lbnRGb3JtYXQgQ2xpY2tVcCBjb21tZW50IGZvcm1hdCBzdHJ1Y3R1cmVcbiAqIEByZXR1cm5zIE1hcmtkb3duIHN0cmluZ1xuICovXG5leHBvcnQgZnVuY3Rpb24gY2xpY2tVcENvbW1lbnRUb01hcmtkb3duKGNvbW1lbnRGb3JtYXQ6IENsaWNrVXBDb21tZW50Rm9ybWF0KTogc3RyaW5nIHtcbiAgaWYgKCFjb21tZW50Rm9ybWF0Py5jb21tZW50IHx8ICFBcnJheS5pc0FycmF5KGNvbW1lbnRGb3JtYXQuY29tbWVudCkpIHtcbiAgICByZXR1cm4gJyc7XG4gIH1cblxuICByZXR1cm4gY29tbWVudEZvcm1hdC5jb21tZW50Lm1hcChibG9jayA9PiB7XG4gICAgbGV0IHRleHQgPSBibG9jay50ZXh0IHx8ICcnO1xuICAgIGNvbnN0IGF0dHJzID0gYmxvY2suYXR0cmlidXRlcyB8fCB7fTtcblxuICAgIC8vIEFwcGx5IGZvcm1hdHRpbmcgYmFzZWQgb24gYXR0cmlidXRlc1xuICAgIGlmIChhdHRycy5ib2xkKSB7XG4gICAgICB0ZXh0ID0gYCoqJHt0ZXh0fSoqYDtcbiAgICB9XG4gICAgaWYgKGF0dHJzLml0YWxpYykge1xuICAgICAgdGV4dCA9IGAqJHt0ZXh0fSpgO1xuICAgIH1cbiAgICBpZiAoYXR0cnMudW5kZXJsaW5lKSB7XG4gICAgICB0ZXh0ID0gYF9fJHt0ZXh0fV9fYDtcbiAgICB9XG4gICAgaWYgKGF0dHJzLnN0cmlrZXRocm91Z2gpIHtcbiAgICAgIHRleHQgPSBgfn4ke3RleHR9fn5gO1xuICAgIH1cbiAgICBpZiAoYXR0cnMuY29kZSkge1xuICAgICAgdGV4dCA9IGBcXGAke3RleHR9XFxgYDtcbiAgICB9XG4gICAgaWYgKGF0dHJzLmxpbmspIHtcbiAgICAgIHRleHQgPSBgWyR7dGV4dH1dKCR7YXR0cnMubGluay51cmx9KWA7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRleHQ7XG4gIH0pLmpvaW4oJycpO1xufVxuXG4vKipcbiAqIENyZWF0ZSBhIHNpbXBsZSBwbGFpbiB0ZXh0IGNvbW1lbnQgaW4gQ2xpY2tVcCBmb3JtYXRcbiAqIEBwYXJhbSB0ZXh0IFBsYWluIHRleHQgY29udGVudFxuICogQHJldHVybnMgQ2xpY2tVcCBjb21tZW50IGZvcm1hdCBzdHJ1Y3R1cmVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVBsYWluVGV4dENvbW1lbnQodGV4dDogc3RyaW5nKTogQ2xpY2tVcENvbW1lbnRGb3JtYXQge1xuICByZXR1cm4ge1xuICAgIGNvbW1lbnQ6IFt7XG4gICAgICB0ZXh0OiB0ZXh0IHx8ICcnLFxuICAgICAgYXR0cmlidXRlczoge31cbiAgICB9XVxuICB9O1xufVxuXG4vKipcbiAqIENyZWF0ZSBhIGJvbGQgdGV4dCBjb21tZW50IGluIENsaWNrVXAgZm9ybWF0XG4gKiBAcGFyYW0gdGV4dCBUZXh0IHRvIG1ha2UgYm9sZFxuICogQHJldHVybnMgQ2xpY2tVcCBjb21tZW50IGZvcm1hdCBzdHJ1Y3R1cmVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUJvbGRDb21tZW50KHRleHQ6IHN0cmluZyk6IENsaWNrVXBDb21tZW50Rm9ybWF0IHtcbiAgcmV0dXJuIHtcbiAgICBjb21tZW50OiBbe1xuICAgICAgdGV4dDogdGV4dCB8fCAnJyxcbiAgICAgIGF0dHJpYnV0ZXM6IHsgYm9sZDogdHJ1ZSB9XG4gICAgfV1cbiAgfTtcbn1cblxuLyoqXG4gKiBDcmVhdGUgYW4gaXRhbGljIHRleHQgY29tbWVudCBpbiBDbGlja1VwIGZvcm1hdFxuICogQHBhcmFtIHRleHQgVGV4dCB0byBtYWtlIGl0YWxpY1xuICogQHJldHVybnMgQ2xpY2tVcCBjb21tZW50IGZvcm1hdCBzdHJ1Y3R1cmVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUl0YWxpY0NvbW1lbnQodGV4dDogc3RyaW5nKTogQ2xpY2tVcENvbW1lbnRGb3JtYXQge1xuICByZXR1cm4ge1xuICAgIGNvbW1lbnQ6IFt7XG4gICAgICB0ZXh0OiB0ZXh0IHx8ICcnLFxuICAgICAgYXR0cmlidXRlczogeyBpdGFsaWM6IHRydWUgfVxuICAgIH1dXG4gIH07XG59XG5cbi8qKlxuICogQ3JlYXRlIGEgY29kZSB0ZXh0IGNvbW1lbnQgaW4gQ2xpY2tVcCBmb3JtYXRcbiAqIEBwYXJhbSB0ZXh0IFRleHQgdG8gZm9ybWF0IGFzIGNvZGVcbiAqIEByZXR1cm5zIENsaWNrVXAgY29tbWVudCBmb3JtYXQgc3RydWN0dXJlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDb2RlQ29tbWVudCh0ZXh0OiBzdHJpbmcpOiBDbGlja1VwQ29tbWVudEZvcm1hdCB7XG4gIHJldHVybiB7XG4gICAgY29tbWVudDogW3tcbiAgICAgIHRleHQ6IHRleHQgfHwgJycsXG4gICAgICBhdHRyaWJ1dGVzOiB7IGNvZGU6IHRydWUgfVxuICAgIH1dXG4gIH07XG59XG5cbi8qKlxuICogQ3JlYXRlIGEgbGluayBjb21tZW50IGluIENsaWNrVXAgZm9ybWF0XG4gKiBAcGFyYW0gdGV4dCBMaW5rIHRleHRcbiAqIEBwYXJhbSB1cmwgTGluayBVUkxcbiAqIEByZXR1cm5zIENsaWNrVXAgY29tbWVudCBmb3JtYXQgc3RydWN0dXJlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVMaW5rQ29tbWVudCh0ZXh0OiBzdHJpbmcsIHVybDogc3RyaW5nKTogQ2xpY2tVcENvbW1lbnRGb3JtYXQge1xuICByZXR1cm4ge1xuICAgIGNvbW1lbnQ6IFt7XG4gICAgICB0ZXh0OiB0ZXh0IHx8ICcnLFxuICAgICAgYXR0cmlidXRlczogeyBsaW5rOiB7IHVybCB9IH1cbiAgICB9XVxuICB9O1xufVxuXG4vKipcbiAqIENvbWJpbmUgbXVsdGlwbGUgY29tbWVudCBibG9ja3MgaW50byBhIHNpbmdsZSBjb21tZW50XG4gKiBAcGFyYW0gYmxvY2tzIEFycmF5IG9mIGNvbW1lbnQgYmxvY2tzXG4gKiBAcmV0dXJucyBDbGlja1VwIGNvbW1lbnQgZm9ybWF0IHN0cnVjdHVyZVxuICovXG5leHBvcnQgZnVuY3Rpb24gY29tYmluZUNvbW1lbnRCbG9ja3MoYmxvY2tzOiBDbGlja1VwQ29tbWVudEJsb2NrW10pOiBDbGlja1VwQ29tbWVudEZvcm1hdCB7XG4gIHJldHVybiB7IGNvbW1lbnQ6IGJsb2NrcyB9O1xufVxuXG4vKipcbiAqIFBhcnNlIGNvbXBsZXggbWFya2Rvd24gYW5kIGNvbnZlcnQgdG8gQ2xpY2tVcCBjb21tZW50IGZvcm1hdFxuICogVGhpcyBoYW5kbGVzIG1vcmUgY29tcGxleCBzY2VuYXJpb3MgbGlrZSBtaXhlZCBmb3JtYXR0aW5nXG4gKiBAcGFyYW0gbWFya2Rvd24gTWFya2Rvd24gdGV4dFxuICogQHJldHVybnMgQ2xpY2tVcCBjb21tZW50IGZvcm1hdCBzdHJ1Y3R1cmVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlTWFya2Rvd25Ub0NsaWNrVXBDb21tZW50KG1hcmtkb3duOiBzdHJpbmcpOiBDbGlja1VwQ29tbWVudEZvcm1hdCB7XG4gIGlmICghbWFya2Rvd24gfHwgdHlwZW9mIG1hcmtkb3duICE9PSAnc3RyaW5nJykge1xuICAgIHJldHVybiBjcmVhdGVQbGFpblRleHRDb21tZW50KCcnKTtcbiAgfVxuXG4gIC8vIEhhbmRsZSBsaW5lIGJyZWFrcyBhbmQgcGFyYWdyYXBoc1xuICBjb25zdCBsaW5lcyA9IG1hcmtkb3duLnNwbGl0KCdcXG4nKTtcbiAgY29uc3QgYmxvY2tzOiBDbGlja1VwQ29tbWVudEJsb2NrW10gPSBbXTtcblxuICBmb3IgKGxldCBpID0gMDsgaSA8IGxpbmVzLmxlbmd0aDsgaSsrKSB7XG4gICAgY29uc3QgbGluZSA9IGxpbmVzW2ldLnRyaW0oKTtcbiAgICBcbiAgICBpZiAoIWxpbmUpIHtcbiAgICAgIC8vIEFkZCBsaW5lIGJyZWFrIGZvciBlbXB0eSBsaW5lcyAoZXhjZXB0IGF0IHRoZSBlbmQpXG4gICAgICBpZiAoaSA8IGxpbmVzLmxlbmd0aCAtIDEpIHtcbiAgICAgICAgYmxvY2tzLnB1c2goeyB0ZXh0OiAnXFxuJywgYXR0cmlidXRlczoge30gfSk7XG4gICAgICB9XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICAvLyBIYW5kbGUgaGVhZGVyc1xuICAgIGlmIChsaW5lLnN0YXJ0c1dpdGgoJyMnKSkge1xuICAgICAgY29uc3QgbGV2ZWwgPSBsaW5lLm1hdGNoKC9eIysvKT8uWzBdLmxlbmd0aCB8fCAxO1xuICAgICAgY29uc3QgaGVhZGVyVGV4dCA9IGxpbmUucmVwbGFjZSgvXiMrXFxzKi8sICcnKTtcbiAgICAgIGJsb2Nrcy5wdXNoKHtcbiAgICAgICAgdGV4dDogaGVhZGVyVGV4dCxcbiAgICAgICAgYXR0cmlidXRlczogeyBib2xkOiB0cnVlIH0gLy8gQ2xpY2tVcCBkb2Vzbid0IGhhdmUgaGVhZGVyIGZvcm1hdHRpbmcsIHVzZSBib2xkXG4gICAgICB9KTtcbiAgICAgIGJsb2Nrcy5wdXNoKHsgdGV4dDogJ1xcbicsIGF0dHJpYnV0ZXM6IHt9IH0pO1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgLy8gSGFuZGxlIGxpc3QgaXRlbXNcbiAgICBpZiAobGluZS5tYXRjaCgvXlstKitdXFxzKy8pIHx8IGxpbmUubWF0Y2goL15cXGQrXFwuXFxzKy8pKSB7XG4gICAgICBjb25zdCBsaXN0VGV4dCA9IGxpbmUucmVwbGFjZSgvXlstKitcXGQuXVxccyovLCAn4oCiICcpO1xuICAgICAgY29uc3QgY29udmVydGVkID0gbWFya2Rvd25Ub0NsaWNrVXBDb21tZW50KGxpc3RUZXh0KTtcbiAgICAgIGJsb2Nrcy5wdXNoKC4uLmNvbnZlcnRlZC5jb21tZW50KTtcbiAgICAgIGJsb2Nrcy5wdXNoKHsgdGV4dDogJ1xcbicsIGF0dHJpYnV0ZXM6IHt9IH0pO1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgLy8gSGFuZGxlIGJsb2NrcXVvdGVzXG4gICAgaWYgKGxpbmUuc3RhcnRzV2l0aCgnPicpKSB7XG4gICAgICBjb25zdCBxdW90ZVRleHQgPSBsaW5lLnJlcGxhY2UoL14+XFxzKi8sICcnKTtcbiAgICAgIGJsb2Nrcy5wdXNoKHsgdGV4dDogJz4gJywgYXR0cmlidXRlczoge30gfSk7XG4gICAgICBjb25zdCBjb252ZXJ0ZWQgPSBtYXJrZG93blRvQ2xpY2tVcENvbW1lbnQocXVvdGVUZXh0KTtcbiAgICAgIGJsb2Nrcy5wdXNoKC4uLmNvbnZlcnRlZC5jb21tZW50KTtcbiAgICAgIGJsb2Nrcy5wdXNoKHsgdGV4dDogJ1xcbicsIGF0dHJpYnV0ZXM6IHt9IH0pO1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgLy8gSGFuZGxlIGNvZGUgYmxvY2tzXG4gICAgaWYgKGxpbmUuc3RhcnRzV2l0aCgnYGBgJykpIHtcbiAgICAgIC8vIEZvciBjb2RlIGJsb2Nrcywgd2UnbGwgdHJlYXQgdGhlIGNvbnRlbnQgYXMgY29kZVxuICAgICAgY29uc3QgY29kZUxpbmVzID0gW107XG4gICAgICBpKys7IC8vIFNraXAgdGhlIG9wZW5pbmcgYGBgXG4gICAgICB3aGlsZSAoaSA8IGxpbmVzLmxlbmd0aCAmJiAhbGluZXNbaV0udHJpbSgpLnN0YXJ0c1dpdGgoJ2BgYCcpKSB7XG4gICAgICAgIGNvZGVMaW5lcy5wdXNoKGxpbmVzW2ldKTtcbiAgICAgICAgaSsrO1xuICAgICAgfVxuICAgICAgXG4gICAgICBpZiAoY29kZUxpbmVzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgYmxvY2tzLnB1c2goe1xuICAgICAgICAgIHRleHQ6IGNvZGVMaW5lcy5qb2luKCdcXG4nKSxcbiAgICAgICAgICBhdHRyaWJ1dGVzOiB7IGNvZGU6IHRydWUgfVxuICAgICAgICB9KTtcbiAgICAgICAgYmxvY2tzLnB1c2goeyB0ZXh0OiAnXFxuJywgYXR0cmlidXRlczoge30gfSk7XG4gICAgICB9XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICAvLyBIYW5kbGUgcmVndWxhciB0ZXh0IHdpdGggaW5saW5lIGZvcm1hdHRpbmdcbiAgICBjb25zdCBjb252ZXJ0ZWQgPSBtYXJrZG93blRvQ2xpY2tVcENvbW1lbnQobGluZSk7XG4gICAgYmxvY2tzLnB1c2goLi4uY29udmVydGVkLmNvbW1lbnQpO1xuICAgIFxuICAgIC8vIEFkZCBsaW5lIGJyZWFrIGlmIG5vdCB0aGUgbGFzdCBsaW5lXG4gICAgaWYgKGkgPCBsaW5lcy5sZW5ndGggLSAxKSB7XG4gICAgICBibG9ja3MucHVzaCh7IHRleHQ6ICdcXG4nLCBhdHRyaWJ1dGVzOiB7fSB9KTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4geyBjb21tZW50OiBibG9ja3MgfTtcbn1cblxuLyoqXG4gKiBDb252ZXJ0IG1hcmtkb3duIHRleHQgdG8gcGxhaW4gdGV4dCBieSBzdHJpcHBpbmcgYWxsIG1hcmtkb3duIGZvcm1hdHRpbmdcbiAqIEBwYXJhbSBtYXJrZG93biBUaGUgbWFya2Rvd24gdGV4dCB0byBjb252ZXJ0XG4gKiBAcmV0dXJucyBQbGFpbiB0ZXh0IHdpdGhvdXQgYW55IG1hcmtkb3duIGZvcm1hdHRpbmdcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG1hcmtkb3duVG9QbGFpblRleHQobWFya2Rvd246IHN0cmluZyk6IHN0cmluZyB7XG4gIGlmICghbWFya2Rvd24gfHwgdHlwZW9mIG1hcmtkb3duICE9PSAnc3RyaW5nJykge1xuICAgIHJldHVybiAnJztcbiAgfVxuXG4gIGxldCBwbGFpblRleHQgPSBtYXJrZG93bjtcblxuICAvLyBSZW1vdmUgaGVhZGVyc1xuICBwbGFpblRleHQgPSBwbGFpblRleHQucmVwbGFjZSgvXiN7MSw2fVxccysvZ20sICcnKTtcbiAgXG4gIC8vIFJlbW92ZSBib2xkIGFuZCBpdGFsaWNcbiAgcGxhaW5UZXh0ID0gcGxhaW5UZXh0LnJlcGxhY2UoL1xcKlxcKihbXipdKylcXCpcXCovZywgJyQxJyk7XG4gIHBsYWluVGV4dCA9IHBsYWluVGV4dC5yZXBsYWNlKC9cXCooW14qXSspXFwqL2csICckMScpO1xuICBwbGFpblRleHQgPSBwbGFpblRleHQucmVwbGFjZSgvX18oW15fXSspX18vZywgJyQxJyk7XG4gIHBsYWluVGV4dCA9IHBsYWluVGV4dC5yZXBsYWNlKC9fKFteX10rKV8vZywgJyQxJyk7XG4gIFxuICAvLyBSZW1vdmUgc3RyaWtldGhyb3VnaFxuICBwbGFpblRleHQgPSBwbGFpblRleHQucmVwbGFjZSgvfn4oW15+XSspfn4vZywgJyQxJyk7XG4gIFxuICAvLyBSZW1vdmUgaW5saW5lIGNvZGVcbiAgcGxhaW5UZXh0ID0gcGxhaW5UZXh0LnJlcGxhY2UoL2AoW15gXSspYC9nLCAnJDEnKTtcbiAgXG4gIC8vIFJlbW92ZSBjb2RlIGJsb2Nrc1xuICBwbGFpblRleHQgPSBwbGFpblRleHQucmVwbGFjZSgvYGBgW1xcc1xcU10qP2BgYC9nLCAobWF0Y2gpID0+IHtcbiAgICAvLyBFeHRyYWN0IGp1c3QgdGhlIGNvZGUgY29udGVudCwgcmVtb3ZlIHRoZSBgYGAgbWFya2Vyc1xuICAgIGNvbnN0IGxpbmVzID0gbWF0Y2guc3BsaXQoJ1xcbicpO1xuICAgIHJldHVybiBsaW5lcy5zbGljZSgxLCAtMSkuam9pbignXFxuJyk7XG4gIH0pO1xuICBcbiAgLy8gUmVtb3ZlIGxpbmtzLCBrZWVwIGp1c3QgdGhlIHRleHRcbiAgcGxhaW5UZXh0ID0gcGxhaW5UZXh0LnJlcGxhY2UoL1xcWyhbXlxcXV0rKVxcXVxcKFteKV0rXFwpL2csICckMScpO1xuICBcbiAgLy8gUmVtb3ZlIGJsb2NrcXVvdGVzXG4gIHBsYWluVGV4dCA9IHBsYWluVGV4dC5yZXBsYWNlKC9ePlxccyovZ20sICcnKTtcbiAgXG4gIC8vIENvbnZlcnQgbGlzdCBpdGVtcyB0byBzaW1wbGUgYnVsbGV0c1xuICBwbGFpblRleHQgPSBwbGFpblRleHQucmVwbGFjZSgvXlstKitdXFxzKy9nbSwgJ+KAoiAnKTtcbiAgcGxhaW5UZXh0ID0gcGxhaW5UZXh0LnJlcGxhY2UoL15cXGQrXFwuXFxzKy9nbSwgJ+KAoiAnKTtcbiAgXG4gIC8vIENsZWFuIHVwIGV4dHJhIHdoaXRlc3BhY2VcbiAgcGxhaW5UZXh0ID0gcGxhaW5UZXh0LnJlcGxhY2UoL1xcbnszLH0vZywgJ1xcblxcbicpO1xuICBwbGFpblRleHQgPSBwbGFpblRleHQudHJpbSgpO1xuICBcbiAgcmV0dXJuIHBsYWluVGV4dDtcbn1cblxuLyoqXG4gKiBDbGVhbiB1cCBkdXBsaWNhdGUgY29udGVudCBpbiBDbGlja1VwJ3MgY29tbWVudF90ZXh0IGZpZWxkXG4gKiBDbGlja1VwIHNvbWV0aW1lcyBkdXBsaWNhdGVzIGNvbnRlbnQgd2hlbiBwcm9jZXNzaW5nIHN0cnVjdHVyZWQgY29tbWVudHNcbiAqIEBwYXJhbSBjb21tZW50VGV4dCBUaGUgY29tbWVudF90ZXh0IGZpZWxkIGZyb20gQ2xpY2tVcCBBUEkgcmVzcG9uc2VcbiAqIEByZXR1cm5zIENsZWFuZWQgY29tbWVudCB0ZXh0IHdpdGhvdXQgZHVwbGljYXRpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNsZWFuRHVwbGljYXRlQ29tbWVudFRleHQoY29tbWVudFRleHQ6IHN0cmluZyk6IHN0cmluZyB7XG4gIGlmICghY29tbWVudFRleHQgfHwgdHlwZW9mIGNvbW1lbnRUZXh0ICE9PSAnc3RyaW5nJykge1xuICAgIHJldHVybiBjb21tZW50VGV4dDtcbiAgfVxuXG4gIC8vIENsaWNrVXAgb2Z0ZW4gYXBwZW5kcyB0aGUgb3JpZ2luYWwgbWFya2Rvd24gYXQgdGhlIGVuZCBhZnRlciB0aGUgcHJvY2Vzc2VkIHRleHRcbiAgLy8gTG9vayBmb3IgcGF0dGVybnMgd2hlcmUgdGhlIHNhbWUgY29udGVudCBhcHBlYXJzIHR3aWNlXG4gIFxuICAvLyBGaXJzdCwgdHJ5IHRvIGZpbmQgaWYgdGhlcmUncyBhIGNsZWFyIG1hcmtkb3duIHBhdHRlcm4gYXQgdGhlIGVuZFxuICAvLyBDbGlja1VwIHR5cGljYWxseSBhcHBlbmRzIGNvbnRlbnQgdGhhdCBzdGFydHMgd2l0aCBtYXJrZG93biBoZWFkZXJzIG9yIGZvcm1hdHRpbmdcbiAgY29uc3QgbWFya2Rvd25QYXR0ZXJucyA9IFtcbiAgICAv8J+OiSBcXCpcXCouKj9cXCpcXCovLCAgLy8gRW1vamkgKyBib2xkIHBhdHRlcm5cbiAgICAv8J+UpyBcXCpcXCouKj9cXCpcXCovLCAgLy8gRW1vamkgKyBib2xkIHBhdHRlcm5cbiAgICAv8J+OryBcXCpcXCouKj9cXCpcXCovLCAgLy8gRW1vamkgKyBib2xkIHBhdHRlcm5cbiAgICAvIyMjIC4qP1xcKlxcKi8sICAgICAvLyBIZWFkZXIgKyBib2xkIHBhdHRlcm5cbiAgICAvIyMgLio/XFwqXFwqLywgICAgICAvLyBIZWFkZXIgKyBib2xkIHBhdHRlcm5cbiAgICAvIyAuKj9cXCpcXCovICAgICAgICAvLyBIZWFkZXIgKyBib2xkIHBhdHRlcm5cbiAgXTtcbiAgXG4gIGZvciAoY29uc3QgcGF0dGVybiBvZiBtYXJrZG93blBhdHRlcm5zKSB7XG4gICAgY29uc3QgbWF0Y2hlcyA9IGNvbW1lbnRUZXh0Lm1hdGNoKG5ldyBSZWdFeHAocGF0dGVybi5zb3VyY2UsICdnJykpO1xuICAgIGlmIChtYXRjaGVzICYmIG1hdGNoZXMubGVuZ3RoID49IDIpIHtcbiAgICAgIC8vIEZvdW5kIGR1cGxpY2F0ZSBwYXR0ZXJuLCB0cnkgdG8gZmluZCB0aGUgc3BsaXQgcG9pbnRcbiAgICAgIGNvbnN0IGZpcnN0TWF0Y2ggPSBjb21tZW50VGV4dC5pbmRleE9mKG1hdGNoZXNbMF0pO1xuICAgICAgY29uc3QgbGFzdE1hdGNoID0gY29tbWVudFRleHQubGFzdEluZGV4T2YobWF0Y2hlc1ttYXRjaGVzLmxlbmd0aCAtIDFdKTtcbiAgICAgIFxuICAgICAgaWYgKGZpcnN0TWF0Y2ggIT09IGxhc3RNYXRjaCkge1xuICAgICAgICAvLyBUaGVyZSBhcmUgbXVsdGlwbGUgb2NjdXJyZW5jZXMsIGxpa2VseSBhIGR1cGxpY2F0aW9uXG4gICAgICAgIC8vIEtlZXAgZXZlcnl0aGluZyB1cCB0byB0aGUgbGFzdCBvY2N1cnJlbmNlIG9mIHRoZSBmaXJzdCBtYXRjaFxuICAgICAgICBjb25zdCBzcGxpdFBvaW50ID0gY29tbWVudFRleHQuaW5kZXhPZihtYXRjaGVzWzBdLCBmaXJzdE1hdGNoICsgMSk7XG4gICAgICAgIGlmIChzcGxpdFBvaW50ID4gMCkge1xuICAgICAgICAgIHJldHVybiBjb21tZW50VGV4dC5zdWJzdHJpbmcoMCwgc3BsaXRQb2ludCkudHJpbSgpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG4gIFxuICAvLyBBbHRlcm5hdGl2ZSBhcHByb2FjaDogbG9vayBmb3IgdGhlIHBhdHRlcm4gd2hlcmUgY29udGVudCBpcyByZXBlYXRlZFxuICAvLyBTcGxpdCBieSBjb21tb24gc2VwYXJhdG9ycyBhbmQgbG9vayBmb3IgZHVwbGljYXRlc1xuICBjb25zdCBsaW5lcyA9IGNvbW1lbnRUZXh0LnNwbGl0KCdcXG4nKTtcbiAgY29uc3QgdG90YWxMaW5lcyA9IGxpbmVzLmxlbmd0aDtcbiAgXG4gIGlmICh0b3RhbExpbmVzID4gNikge1xuICAgIC8vIExvb2sgZm9yIGEgcG9pbnQgd2hlcmUgY29udGVudCBzdGFydHMgcmVwZWF0aW5nXG4gICAgZm9yIChsZXQgaSA9IE1hdGguZmxvb3IodG90YWxMaW5lcyAvIDMpOyBpIDwgTWF0aC5mbG9vcih0b3RhbExpbmVzICogMiAvIDMpOyBpKyspIHtcbiAgICAgIGNvbnN0IGJlZm9yZVNwbGl0ID0gbGluZXMuc2xpY2UoMCwgaSkuam9pbignXFxuJyk7XG4gICAgICBjb25zdCBhZnRlclNwbGl0ID0gbGluZXMuc2xpY2UoaSkuam9pbignXFxuJyk7XG4gICAgICBcbiAgICAgIC8vIENoZWNrIGlmIHRoZSBhZnRlciBzcGxpdCBjb250YWlucyBzaW1pbGFyIGNvbnRlbnQgdG8gYmVmb3JlIHNwbGl0XG4gICAgICBpZiAoYWZ0ZXJTcGxpdC5sZW5ndGggPiBiZWZvcmVTcGxpdC5sZW5ndGggKiAwLjUgJiYgXG4gICAgICAgICAgYmVmb3JlU3BsaXQubGVuZ3RoID4gNTAgJiYgXG4gICAgICAgICAgYWZ0ZXJTcGxpdC5pbmNsdWRlcyhsaW5lc1swXSkgJiYgXG4gICAgICAgICAgYWZ0ZXJTcGxpdC5pbmNsdWRlcyhsaW5lc1sxXSkpIHtcbiAgICAgICAgcmV0dXJuIGJlZm9yZVNwbGl0LnRyaW0oKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgXG4gIC8vIExhc3QgcmVzb3J0OiBjaGVjayBmb3IgZXhhY3QgZHVwbGljYXRlcyBieSBzcGxpdHRpbmcgaW4gaGFsZlxuICBjb25zdCBsZW5ndGggPSBjb21tZW50VGV4dC5sZW5ndGg7XG4gIGlmIChsZW5ndGggPiAxMDApIHtcbiAgICBjb25zdCBtaWRQb2ludCA9IE1hdGguZmxvb3IobGVuZ3RoIC8gMik7XG4gICAgY29uc3QgZmlyc3RIYWxmID0gY29tbWVudFRleHQuc3Vic3RyaW5nKDAsIG1pZFBvaW50KTtcbiAgICBjb25zdCBzZWNvbmRIYWxmID0gY29tbWVudFRleHQuc3Vic3RyaW5nKG1pZFBvaW50KTtcbiAgICBcbiAgICAvLyBDaGVjayBpZiBzZWNvbmQgaGFsZiBzdGFydHMgd2l0aCBzaW1pbGFyIGNvbnRlbnQgdG8gZmlyc3QgaGFsZlxuICAgIGNvbnN0IGZpcnN0TGluZXMgPSBmaXJzdEhhbGYuc3BsaXQoJ1xcbicpLnNsaWNlKDAsIDMpO1xuICAgIGNvbnN0IHNlY29uZExpbmVzID0gc2Vjb25kSGFsZi5zcGxpdCgnXFxuJykuc2xpY2UoMCwgMyk7XG4gICAgXG4gICAgbGV0IHNpbWlsYXJpdHkgPSAwO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgTWF0aC5taW4oZmlyc3RMaW5lcy5sZW5ndGgsIHNlY29uZExpbmVzLmxlbmd0aCk7IGkrKykge1xuICAgICAgaWYgKGZpcnN0TGluZXNbaV0udHJpbSgpICYmIHNlY29uZExpbmVzW2ldLmluY2x1ZGVzKGZpcnN0TGluZXNbaV0udHJpbSgpLnN1YnN0cmluZygwLCAyMCkpKSB7XG4gICAgICAgIHNpbWlsYXJpdHkrKztcbiAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgaWYgKHNpbWlsYXJpdHkgPj0gMikge1xuICAgICAgcmV0dXJuIGZpcnN0SGFsZi50cmltKCk7XG4gICAgfVxuICB9XG4gIFxuICByZXR1cm4gY29tbWVudFRleHQ7XG59XG5cbi8qKlxuICogUHJvY2VzcyBhIGNvbW1lbnQgcmVzcG9uc2UgZnJvbSBDbGlja1VwIHRvIGNsZWFuIHVwIGFueSBkdXBsaWNhdGlvbiBpc3N1ZXNcbiAqIEBwYXJhbSBjb21tZW50IFRoZSBjb21tZW50IG9iamVjdCBmcm9tIENsaWNrVXAgQVBJXG4gKiBAcmV0dXJucyBDbGVhbmVkIGNvbW1lbnQgb2JqZWN0XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjbGVhbkNsaWNrVXBDb21tZW50UmVzcG9uc2UoY29tbWVudDogYW55KTogYW55IHtcbiAgaWYgKCFjb21tZW50IHx8IHR5cGVvZiBjb21tZW50ICE9PSAnb2JqZWN0Jykge1xuICAgIHJldHVybiBjb21tZW50O1xuICB9XG5cbiAgY29uc3QgY2xlYW5lZCA9IHsgLi4uY29tbWVudCB9O1xuICBcbiAgLy8gQ2xlYW4gdXAgY29tbWVudF90ZXh0IGZpZWxkIGlmIGl0IGV4aXN0c1xuICBpZiAoY2xlYW5lZC5jb21tZW50X3RleHQgJiYgdHlwZW9mIGNsZWFuZWQuY29tbWVudF90ZXh0ID09PSAnc3RyaW5nJykge1xuICAgIGNsZWFuZWQuY29tbWVudF90ZXh0ID0gY2xlYW5EdXBsaWNhdGVDb21tZW50VGV4dChjbGVhbmVkLmNvbW1lbnRfdGV4dCk7XG4gIH1cbiAgXG4gIC8vIENsZWFuIHVwIGNvbW1lbnRfbWFya2Rvd24gZmllbGQgaWYgaXQgZXhpc3RzXG4gIGlmIChjbGVhbmVkLmNvbW1lbnRfbWFya2Rvd24gJiYgdHlwZW9mIGNsZWFuZWQuY29tbWVudF9tYXJrZG93biA9PT0gJ3N0cmluZycpIHtcbiAgICBjbGVhbmVkLmNvbW1lbnRfbWFya2Rvd24gPSBjbGVhbkR1cGxpY2F0ZUNvbW1lbnRUZXh0KGNsZWFuZWQuY29tbWVudF9tYXJrZG93bik7XG4gIH1cbiAgXG4gIHJldHVybiBjbGVhbmVkO1xufVxuXG4vKipcbiAqIEVuc3VyZSBwcm9wZXIgbmV3bGluZSBzZXBhcmF0aW9uIGJlZm9yZSBjb2RlIGJsb2Nrc1xuICogQ2xpY2tVcCByZXF1aXJlcyBhIG5ld2xpbmUgYmVmb3JlIGNvZGUgYmxvY2tzIHRvIHByZXZlbnQgdGhlbSBmcm9tIGJlaW5nIG1lcmdlZCB3aXRoIHByZXZpb3VzIHRleHRcbiAqIEBwYXJhbSBibG9ja3MgQXJyYXkgb2YgY29tbWVudCBibG9ja3MgdG8gcHJvY2Vzc1xuICogQHJldHVybnMgUHJvY2Vzc2VkIGFycmF5IHdpdGggcHJvcGVyIG5ld2xpbmUgc2VwYXJhdGlvblxuICovXG5leHBvcnQgZnVuY3Rpb24gZW5zdXJlQ29kZUJsb2NrU2VwYXJhdGlvbihibG9ja3M6IENsaWNrVXBDb21tZW50QmxvY2tbXSk6IENsaWNrVXBDb21tZW50QmxvY2tbXSB7XG4gIGlmICghYmxvY2tzIHx8ICFBcnJheS5pc0FycmF5KGJsb2NrcykgfHwgYmxvY2tzLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiBibG9ja3M7XG4gIH1cblxuICBjb25zdCBwcm9jZXNzZWRCbG9ja3M6IENsaWNrVXBDb21tZW50QmxvY2tbXSA9IFtdO1xuXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgYmxvY2tzLmxlbmd0aDsgaSsrKSB7XG4gICAgY29uc3QgY3VycmVudEJsb2NrID0gYmxvY2tzW2ldO1xuICAgIGNvbnN0IHByZXZpb3VzQmxvY2sgPSBpID4gMCA/IGJsb2Nrc1tpIC0gMV0gOiBudWxsO1xuXG4gICAgLy8gQ2hlY2sgaWYgY3VycmVudCBibG9jayBpcyBhIGNvZGUgYmxvY2tcbiAgICBjb25zdCBpc0NvZGVCbG9jayA9IGN1cnJlbnRCbG9jay5hdHRyaWJ1dGVzICYmIFxuICAgICAgKGN1cnJlbnRCbG9jay5hdHRyaWJ1dGVzWydjb2RlLWJsb2NrJ10gfHwgY3VycmVudEJsb2NrLmF0dHJpYnV0ZXMuY29kZSk7XG5cbiAgICAvLyBJZiB0aGlzIGlzIGEgY29kZSBibG9jayBhbmQgdGhlcmUncyBhIHByZXZpb3VzIGJsb2NrXG4gICAgaWYgKGlzQ29kZUJsb2NrICYmIHByZXZpb3VzQmxvY2spIHtcbiAgICAgIC8vIENoZWNrIGlmIHRoZSBwcmV2aW91cyBibG9jayBlbmRzIHdpdGggYSBuZXdsaW5lXG4gICAgICBjb25zdCBwcmV2aW91c1RleHQgPSBwcmV2aW91c0Jsb2NrLnRleHQgfHwgJyc7XG4gICAgICBjb25zdCBlbmRzV2l0aE5ld2xpbmUgPSBwcmV2aW91c1RleHQuZW5kc1dpdGgoJ1xcbicpO1xuXG4gICAgICBpZiAoIWVuZHNXaXRoTmV3bGluZSkge1xuICAgICAgICAvLyBBZGQgbmV3bGluZSB0byB0aGUgcHJldmlvdXMgYmxvY2sncyB0ZXh0XG4gICAgICAgIGNvbnN0IHVwZGF0ZWRQcmV2aW91c0Jsb2NrID0ge1xuICAgICAgICAgIC4uLnByZXZpb3VzQmxvY2ssXG4gICAgICAgICAgdGV4dDogcHJldmlvdXNUZXh0ICsgJ1xcbicsXG4gICAgICAgICAgYXR0cmlidXRlczogcHJldmlvdXNCbG9jay5hdHRyaWJ1dGVzIHx8IHt9XG4gICAgICAgIH07XG4gICAgICAgIFxuICAgICAgICAvLyBSZXBsYWNlIHRoZSBwcmV2aW91cyBibG9jayBpbiBvdXIgcHJvY2Vzc2VkIGFycmF5XG4gICAgICAgIGlmIChwcm9jZXNzZWRCbG9ja3MubGVuZ3RoID4gMCkge1xuICAgICAgICAgIHByb2Nlc3NlZEJsb2Nrc1twcm9jZXNzZWRCbG9ja3MubGVuZ3RoIC0gMV0gPSB1cGRhdGVkUHJldmlvdXNCbG9jaztcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHByb2Nlc3NlZEJsb2Nrcy5wdXNoKHtcbiAgICAgIC4uLmN1cnJlbnRCbG9jayxcbiAgICAgIGF0dHJpYnV0ZXM6IGN1cnJlbnRCbG9jay5hdHRyaWJ1dGVzIHx8IHt9XG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4gcHJvY2Vzc2VkQmxvY2tzO1xufVxuXG4vKipcbiAqIFByZXBhcmUgY29tbWVudCBjb250ZW50IGZvciBDbGlja1VwIEFQSSBzdWJtaXNzaW9uXG4gKiBTdXBwb3J0cyBib3RoIHNpbXBsZSB0ZXh0IGFuZCBtYXJrZG93biBpbnB1dFxuICogQHBhcmFtIGNvbnRlbnQgVGhlIGNvbnRlbnQgdG8gcHJlcGFyZSAobWFya2Rvd24gb3IgcGxhaW4gdGV4dClcbiAqIEByZXR1cm5zIE9iamVjdCB3aXRoIE9OTFkgc3RydWN0dXJlZCBjb21tZW50IGZvcm1hdCAobm8gY29tbWVudF90ZXh0IHRvIGF2b2lkIGR1cGxpY2F0aW9uKVxuICovXG5leHBvcnQgZnVuY3Rpb24gcHJlcGFyZUNvbW1lbnRGb3JDbGlja1VwKGNvbnRlbnQ6IHN0cmluZyk6IHtcbiAgY29tbWVudDogQ2xpY2tVcENvbW1lbnRCbG9ja1tdO1xufSB7XG4gIGlmICghY29udGVudCB8fCB0eXBlb2YgY29udGVudCAhPT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4geyBcbiAgICAgIGNvbW1lbnQ6IFt7IHRleHQ6ICcnLCBhdHRyaWJ1dGVzOiB7fSB9XVxuICAgIH07XG4gIH1cblxuICAvLyBDaGVjayBpZiBjb250ZW50IGNvbnRhaW5zIG1hcmtkb3duIGZvcm1hdHRpbmdcbiAgY29uc3QgaGFzTWFya2Rvd24gPSAvWypfYH4jXFxbXFxdKCk+LV0vLnRlc3QoY29udGVudCkgfHwgY29udGVudC5pbmNsdWRlcygnYGBgJyk7XG4gIFxuICBpZiAoaGFzTWFya2Rvd24pIHtcbiAgICBjb25zdCBmb3JtYXR0ZWQgPSBwYXJzZU1hcmtkb3duVG9DbGlja1VwQ29tbWVudChjb250ZW50KTtcbiAgICByZXR1cm4ge1xuICAgICAgY29tbWVudDogZW5zdXJlQ29kZUJsb2NrU2VwYXJhdGlvbihmb3JtYXR0ZWQuY29tbWVudClcbiAgICB9O1xuICB9IGVsc2Uge1xuICAgIC8vIFNpbXBsZSBwbGFpbiB0ZXh0XG4gICAgcmV0dXJuIHtcbiAgICAgIGNvbW1lbnQ6IFt7IHRleHQ6IGNvbnRlbnQsIGF0dHJpYnV0ZXM6IHt9IH1dXG4gICAgfTtcbiAgfVxufVxuXG4vKipcbiAqIFByb2Nlc3Mgc3RydWN0dXJlZCBjb21tZW50IGJsb2NrcyB0byBlbnN1cmUgcHJvcGVyIGNvZGUgYmxvY2sgc2VwYXJhdGlvblxuICogVGhpcyBmdW5jdGlvbiBzaG91bGQgYmUgY2FsbGVkIG9uIGFueSBzdHJ1Y3R1cmVkIGNvbW1lbnQgYXJyYXkgYmVmb3JlIHNlbmRpbmcgdG8gQ2xpY2tVcFxuICogQHBhcmFtIGJsb2NrcyBBcnJheSBvZiBjb21tZW50IGJsb2Nrc1xuICogQHJldHVybnMgUHJvY2Vzc2VkIGFycmF5IHdpdGggcHJvcGVyIG5ld2xpbmUgc2VwYXJhdGlvbiBiZWZvcmUgY29kZSBibG9ja3NcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHByb2Nlc3NDb21tZW50QmxvY2tzKGJsb2NrczogQ2xpY2tVcENvbW1lbnRCbG9ja1tdKTogQ2xpY2tVcENvbW1lbnRCbG9ja1tdIHtcbiAgaWYgKCFibG9ja3MgfHwgIUFycmF5LmlzQXJyYXkoYmxvY2tzKSB8fCBibG9ja3MubGVuZ3RoID09PSAwKSB7XG4gICAgcmV0dXJuIGJsb2NrcztcbiAgfVxuXG4gIC8vIEZpcnN0LCBlbnN1cmUgYWxsIGJsb2NrcyBoYXZlIGF0dHJpYnV0ZXMgKGV2ZW4gaWYgZW1wdHkpXG4gIGNvbnN0IG5vcm1hbGl6ZWRCbG9ja3MgPSBibG9ja3MubWFwKGJsb2NrID0+ICh7XG4gICAgLi4uYmxvY2ssXG4gICAgYXR0cmlidXRlczogYmxvY2suYXR0cmlidXRlcyB8fCB7fVxuICB9KSk7XG5cbiAgcmV0dXJuIGVuc3VyZUNvZGVCbG9ja1NlcGFyYXRpb24obm9ybWFsaXplZEJsb2Nrcyk7XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQXlDRTtJQUFBQSxjQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBQyxjQUFBO0lBQUE7RUFBQTtFQUFBLE9BQUFBLGNBQUE7QUFBQTtBQUFBRCxjQUFBO0FBekNGOzs7OztBQTZCQTs7Ozs7QUFLQSxPQUFNLFNBQVVFLHdCQUF3QkEsQ0FBQ0MsUUFBZ0I7RUFBQTtFQUFBSCxjQUFBLEdBQUFJLENBQUE7RUFBQUosY0FBQSxHQUFBSyxDQUFBO0VBQ3ZEO0VBQUk7RUFBQSxDQUFBTCxjQUFBLEdBQUFNLENBQUEsV0FBQ0gsUUFBUTtFQUFBO0VBQUEsQ0FBQUgsY0FBQSxHQUFBTSxDQUFBLFVBQUksT0FBT0gsUUFBUSxLQUFLLFFBQVEsR0FBRTtJQUFBO0lBQUFILGNBQUEsR0FBQU0sQ0FBQTtJQUFBTixjQUFBLEdBQUFLLENBQUE7SUFDN0MsT0FBTztNQUFFRSxPQUFPLEVBQUUsQ0FBQztRQUFFQyxJQUFJLEVBQUUsRUFBRTtRQUFFQyxVQUFVLEVBQUU7TUFBRSxDQUFFO0lBQUMsQ0FBRTtFQUNwRCxDQUFDO0VBQUE7RUFBQTtJQUFBVCxjQUFBLEdBQUFNLENBQUE7RUFBQTtFQUVELE1BQU1JLE1BQU07RUFBQTtFQUFBLENBQUFWLGNBQUEsR0FBQUssQ0FBQSxPQUEwQixFQUFFO0VBRXhDO0VBQ0EsTUFBTU0sS0FBSztFQUFBO0VBQUEsQ0FBQVgsY0FBQSxHQUFBSyxDQUFBLE9BQUdGLFFBQVEsQ0FBQ1MsS0FBSyxDQUFDLHdGQUF3RixDQUFDO0VBQUM7RUFBQVosY0FBQSxHQUFBSyxDQUFBO0VBRXZILEtBQUssSUFBSVEsQ0FBQztFQUFBO0VBQUEsQ0FBQWIsY0FBQSxHQUFBSyxDQUFBLE9BQUcsQ0FBQyxHQUFFUSxDQUFDLEdBQUdGLEtBQUssQ0FBQ0csTUFBTSxFQUFFRCxDQUFDLEVBQUUsRUFBRTtJQUNyQyxNQUFNRSxJQUFJO0lBQUE7SUFBQSxDQUFBZixjQUFBLEdBQUFLLENBQUEsT0FBR00sS0FBSyxDQUFDRSxDQUFDLENBQUM7SUFBQztJQUFBYixjQUFBLEdBQUFLLENBQUE7SUFDdEIsSUFBSSxDQUFDVSxJQUFJLEVBQUU7TUFBQTtNQUFBZixjQUFBLEdBQUFNLENBQUE7TUFBQU4sY0FBQSxHQUFBSyxDQUFBO01BQUE7SUFBQSxDQUFTO0lBQUE7SUFBQTtNQUFBTCxjQUFBLEdBQUFNLENBQUE7SUFBQTtJQUVwQjtJQUFBTixjQUFBLEdBQUFLLENBQUE7SUFDQTtJQUFJO0lBQUEsQ0FBQUwsY0FBQSxHQUFBTSxDQUFBLFVBQUFTLElBQUksQ0FBQ0MsVUFBVSxDQUFDLElBQUksQ0FBQztJQUFBO0lBQUEsQ0FBQWhCLGNBQUEsR0FBQU0sQ0FBQSxVQUFJUyxJQUFJLENBQUNFLFFBQVEsQ0FBQyxJQUFJLENBQUMsR0FBRTtNQUFBO01BQUFqQixjQUFBLEdBQUFNLENBQUE7TUFDaEQsTUFBTUUsSUFBSTtNQUFBO01BQUEsQ0FBQVIsY0FBQSxHQUFBSyxDQUFBLFFBQUdVLElBQUksQ0FBQ0csS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztNQUFDO01BQUFsQixjQUFBLEdBQUFLLENBQUE7TUFDL0JLLE1BQU0sQ0FBQ1MsSUFBSSxDQUFDO1FBQ1ZYLElBQUk7UUFDSkMsVUFBVSxFQUFFO1VBQUVXLElBQUksRUFBRTtRQUFJO09BQ3pCLENBQUM7SUFDSjtJQUNBO0lBQUEsS0FDSztNQUFBO01BQUFwQixjQUFBLEdBQUFNLENBQUE7TUFBQU4sY0FBQSxHQUFBSyxDQUFBO01BQUE7TUFBSztNQUFBLENBQUFMLGNBQUEsR0FBQU0sQ0FBQSxVQUFBUyxJQUFJLENBQUNDLFVBQVUsQ0FBQyxHQUFHLENBQUM7TUFBQTtNQUFBLENBQUFoQixjQUFBLEdBQUFNLENBQUEsVUFBSVMsSUFBSSxDQUFDRSxRQUFRLENBQUMsR0FBRyxDQUFDO01BQUE7TUFBQSxDQUFBakIsY0FBQSxHQUFBTSxDQUFBLFVBQUksQ0FBQ1MsSUFBSSxDQUFDQyxVQUFVLENBQUMsSUFBSSxDQUFDO01BQ3BFO01BQUEsQ0FBQWhCLGNBQUEsR0FBQU0sQ0FBQSxVQUFBUyxJQUFJLENBQUNDLFVBQVUsQ0FBQyxHQUFHLENBQUM7TUFBQTtNQUFBLENBQUFoQixjQUFBLEdBQUFNLENBQUEsVUFBSVMsSUFBSSxDQUFDRSxRQUFRLENBQUMsR0FBRyxDQUFDO01BQUE7TUFBQSxDQUFBakIsY0FBQSxHQUFBTSxDQUFBLFVBQUksQ0FBQ1MsSUFBSSxDQUFDQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUMsRUFBRTtRQUFBO1FBQUFoQixjQUFBLEdBQUFNLENBQUE7UUFDL0UsTUFBTUUsSUFBSTtRQUFBO1FBQUEsQ0FBQVIsY0FBQSxHQUFBSyxDQUFBLFFBQUdVLElBQUksQ0FBQ0csS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUFDO1FBQUFsQixjQUFBLEdBQUFLLENBQUE7UUFDL0JLLE1BQU0sQ0FBQ1MsSUFBSSxDQUFDO1VBQ1ZYLElBQUk7VUFDSkMsVUFBVSxFQUFFO1lBQUVZLE1BQU0sRUFBRTtVQUFJO1NBQzNCLENBQUM7TUFDSjtNQUNBO01BQUEsS0FDSztRQUFBO1FBQUFyQixjQUFBLEdBQUFNLENBQUE7UUFBQU4sY0FBQSxHQUFBSyxDQUFBO1FBQUE7UUFBSTtRQUFBLENBQUFMLGNBQUEsR0FBQU0sQ0FBQSxVQUFBUyxJQUFJLENBQUNDLFVBQVUsQ0FBQyxJQUFJLENBQUM7UUFBQTtRQUFBLENBQUFoQixjQUFBLEdBQUFNLENBQUEsVUFBSVMsSUFBSSxDQUFDRSxRQUFRLENBQUMsSUFBSSxDQUFDLEdBQUU7VUFBQTtVQUFBakIsY0FBQSxHQUFBTSxDQUFBO1VBQ3JELE1BQU1FLElBQUk7VUFBQTtVQUFBLENBQUFSLGNBQUEsR0FBQUssQ0FBQSxRQUFHVSxJQUFJLENBQUNHLEtBQUssQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7VUFBQztVQUFBbEIsY0FBQSxHQUFBSyxDQUFBO1VBQy9CSyxNQUFNLENBQUNTLElBQUksQ0FBQztZQUNWWCxJQUFJO1lBQ0pDLFVBQVUsRUFBRTtjQUFFYSxTQUFTLEVBQUU7WUFBSTtXQUM5QixDQUFDO1FBQ0o7UUFDQTtRQUFBLEtBQ0s7VUFBQTtVQUFBdEIsY0FBQSxHQUFBTSxDQUFBO1VBQUFOLGNBQUEsR0FBQUssQ0FBQTtVQUFBO1VBQUk7VUFBQSxDQUFBTCxjQUFBLEdBQUFNLENBQUEsV0FBQVMsSUFBSSxDQUFDQyxVQUFVLENBQUMsSUFBSSxDQUFDO1VBQUE7VUFBQSxDQUFBaEIsY0FBQSxHQUFBTSxDQUFBLFdBQUlTLElBQUksQ0FBQ0UsUUFBUSxDQUFDLElBQUksQ0FBQyxHQUFFO1lBQUE7WUFBQWpCLGNBQUEsR0FBQU0sQ0FBQTtZQUNyRCxNQUFNRSxJQUFJO1lBQUE7WUFBQSxDQUFBUixjQUFBLEdBQUFLLENBQUEsUUFBR1UsSUFBSSxDQUFDRyxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1lBQUM7WUFBQWxCLGNBQUEsR0FBQUssQ0FBQTtZQUMvQkssTUFBTSxDQUFDUyxJQUFJLENBQUM7Y0FDVlgsSUFBSTtjQUNKQyxVQUFVLEVBQUU7Z0JBQUVjLGFBQWEsRUFBRTtjQUFJO2FBQ2xDLENBQUM7VUFDSjtVQUNBO1VBQUEsS0FDSztZQUFBO1lBQUF2QixjQUFBLEdBQUFNLENBQUE7WUFBQU4sY0FBQSxHQUFBSyxDQUFBO1lBQUE7WUFBSTtZQUFBLENBQUFMLGNBQUEsR0FBQU0sQ0FBQSxXQUFBUyxJQUFJLENBQUNDLFVBQVUsQ0FBQyxHQUFHLENBQUM7WUFBQTtZQUFBLENBQUFoQixjQUFBLEdBQUFNLENBQUEsV0FBSVMsSUFBSSxDQUFDRSxRQUFRLENBQUMsR0FBRyxDQUFDLEdBQUU7Y0FBQTtjQUFBakIsY0FBQSxHQUFBTSxDQUFBO2NBQ25ELE1BQU1FLElBQUk7Y0FBQTtjQUFBLENBQUFSLGNBQUEsR0FBQUssQ0FBQSxRQUFHVSxJQUFJLENBQUNHLEtBQUssQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7Y0FBQztjQUFBbEIsY0FBQSxHQUFBSyxDQUFBO2NBQy9CSyxNQUFNLENBQUNTLElBQUksQ0FBQztnQkFDVlgsSUFBSTtnQkFDSkMsVUFBVSxFQUFFO2tCQUFFZSxJQUFJLEVBQUU7Z0JBQUk7ZUFDekIsQ0FBQztZQUNKO1lBQ0E7WUFBQSxLQUNLO2NBQUE7Y0FBQXhCLGNBQUEsR0FBQU0sQ0FBQTtjQUFBTixjQUFBLEdBQUFLLENBQUE7Y0FBQSxJQUFJVSxJQUFJLENBQUNVLEtBQUssQ0FBQywyQkFBMkIsQ0FBQyxFQUFFO2dCQUFBO2dCQUFBekIsY0FBQSxHQUFBTSxDQUFBO2dCQUNoRCxNQUFNbUIsS0FBSztnQkFBQTtnQkFBQSxDQUFBekIsY0FBQSxHQUFBSyxDQUFBLFFBQUdVLElBQUksQ0FBQ1UsS0FBSyxDQUFDLDJCQUEyQixDQUFDO2dCQUFDO2dCQUFBekIsY0FBQSxHQUFBSyxDQUFBO2dCQUN0RCxJQUFJb0IsS0FBSyxFQUFFO2tCQUFBO2tCQUFBekIsY0FBQSxHQUFBTSxDQUFBO2tCQUNULE1BQU0sR0FBR29CLFFBQVEsRUFBRUMsR0FBRyxDQUFDO2tCQUFBO2tCQUFBLENBQUEzQixjQUFBLEdBQUFLLENBQUEsUUFBR29CLEtBQUs7a0JBQUM7a0JBQUF6QixjQUFBLEdBQUFLLENBQUE7a0JBQ2hDSyxNQUFNLENBQUNTLElBQUksQ0FBQztvQkFDVlgsSUFBSSxFQUFFa0IsUUFBUTtvQkFDZGpCLFVBQVUsRUFBRTtzQkFBRW1CLElBQUksRUFBRTt3QkFBRUQ7c0JBQUc7b0JBQUU7bUJBQzVCLENBQUM7Z0JBQ0osQ0FBQztnQkFBQTtnQkFBQTtrQkFBQTNCLGNBQUEsR0FBQU0sQ0FBQTtnQkFBQTtjQUNIO2NBQ0E7Y0FBQSxLQUNLO2dCQUFBO2dCQUFBTixjQUFBLEdBQUFNLENBQUE7Z0JBQUFOLGNBQUEsR0FBQUssQ0FBQTtnQkFBQTtnQkFBSTtnQkFBQSxDQUFBTCxjQUFBLEdBQUFNLENBQUEsV0FBQU8sQ0FBQyxHQUFHLENBQUM7Z0JBQUE7Z0JBQUEsQ0FBQWIsY0FBQSxHQUFBTSxDQUFBLFdBQUlLLEtBQUssQ0FBQ0UsQ0FBQyxHQUFDLENBQUMsQ0FBQztnQkFBQTtnQkFBQSxDQUFBYixjQUFBLEdBQUFNLENBQUEsV0FBSUssS0FBSyxDQUFDRSxDQUFDLEdBQUMsQ0FBQyxDQUFDLENBQUNZLEtBQUssQ0FBQywyQkFBMkIsQ0FBQyxHQUFFO2tCQUFBO2tCQUFBekIsY0FBQSxHQUFBTSxDQUFBO2tCQUFBTixjQUFBLEdBQUFLLENBQUE7a0JBQzdFO2tCQUNBO2dCQUNGO2dCQUNBO2dCQUFBLEtBQ0s7a0JBQUE7a0JBQUFMLGNBQUEsR0FBQU0sQ0FBQTtrQkFBQU4sY0FBQSxHQUFBSyxDQUFBO2tCQUNILElBQUlVLElBQUksQ0FBQ2MsSUFBSSxFQUFFLEVBQUU7b0JBQUE7b0JBQUE3QixjQUFBLEdBQUFNLENBQUE7b0JBQUFOLGNBQUEsR0FBQUssQ0FBQTtvQkFDZkssTUFBTSxDQUFDUyxJQUFJLENBQUM7c0JBQ1ZYLElBQUksRUFBRU8sSUFBSTtzQkFDVk4sVUFBVSxFQUFFO3FCQUNiLENBQUM7a0JBQ0osQ0FBQztrQkFBQTtrQkFBQTtvQkFBQVQsY0FBQSxHQUFBTSxDQUFBO2tCQUFBO2dCQUNIO2NBQUE7WUFBQTtVQUFBO1FBQUE7TUFBQTtJQUFBO0VBQ0Y7RUFFQTtFQUFBO0VBQUFOLGNBQUEsR0FBQUssQ0FBQTtFQUNBLElBQUlLLE1BQU0sQ0FBQ0ksTUFBTSxLQUFLLENBQUMsRUFBRTtJQUFBO0lBQUFkLGNBQUEsR0FBQU0sQ0FBQTtJQUFBTixjQUFBLEdBQUFLLENBQUE7SUFDdkJLLE1BQU0sQ0FBQ1MsSUFBSSxDQUFDO01BQ1ZYLElBQUksRUFBRUwsUUFBUTtNQUNkTSxVQUFVLEVBQUU7S0FDYixDQUFDO0VBQ0osQ0FBQztFQUFBO0VBQUE7SUFBQVQsY0FBQSxHQUFBTSxDQUFBO0VBQUE7RUFBQU4sY0FBQSxHQUFBSyxDQUFBO0VBRUQsT0FBTztJQUFFRSxPQUFPLEVBQUVHO0VBQU0sQ0FBRTtBQUM1QjtBQUVBOzs7OztBQUtBLE9BQU0sU0FBVW9CLHdCQUF3QkEsQ0FBQ0MsYUFBbUM7RUFBQTtFQUFBL0IsY0FBQSxHQUFBSSxDQUFBO0VBQUFKLGNBQUEsR0FBQUssQ0FBQTtFQUMxRTtFQUFJO0VBQUEsQ0FBQUwsY0FBQSxHQUFBTSxDQUFBLFlBQUN5QixhQUFhLEVBQUV4QixPQUFPO0VBQUE7RUFBQSxDQUFBUCxjQUFBLEdBQUFNLENBQUEsV0FBSSxDQUFDMEIsS0FBSyxDQUFDQyxPQUFPLENBQUNGLGFBQWEsQ0FBQ3hCLE9BQU8sQ0FBQyxHQUFFO0lBQUE7SUFBQVAsY0FBQSxHQUFBTSxDQUFBO0lBQUFOLGNBQUEsR0FBQUssQ0FBQTtJQUNwRSxPQUFPLEVBQUU7RUFDWCxDQUFDO0VBQUE7RUFBQTtJQUFBTCxjQUFBLEdBQUFNLENBQUE7RUFBQTtFQUFBTixjQUFBLEdBQUFLLENBQUE7RUFFRCxPQUFPMEIsYUFBYSxDQUFDeEIsT0FBTyxDQUFDMkIsR0FBRyxDQUFDQyxLQUFLLElBQUc7SUFBQTtJQUFBbkMsY0FBQSxHQUFBSSxDQUFBO0lBQ3ZDLElBQUlJLElBQUk7SUFBQTtJQUFBLENBQUFSLGNBQUEsR0FBQUssQ0FBQTtJQUFHO0lBQUEsQ0FBQUwsY0FBQSxHQUFBTSxDQUFBLFdBQUE2QixLQUFLLENBQUMzQixJQUFJO0lBQUE7SUFBQSxDQUFBUixjQUFBLEdBQUFNLENBQUEsV0FBSSxFQUFFO0lBQzNCLE1BQU04QixLQUFLO0lBQUE7SUFBQSxDQUFBcEMsY0FBQSxHQUFBSyxDQUFBO0lBQUc7SUFBQSxDQUFBTCxjQUFBLEdBQUFNLENBQUEsV0FBQTZCLEtBQUssQ0FBQzFCLFVBQVU7SUFBQTtJQUFBLENBQUFULGNBQUEsR0FBQU0sQ0FBQSxXQUFJLEVBQUU7SUFFcEM7SUFBQTtJQUFBTixjQUFBLEdBQUFLLENBQUE7SUFDQSxJQUFJK0IsS0FBSyxDQUFDaEIsSUFBSSxFQUFFO01BQUE7TUFBQXBCLGNBQUEsR0FBQU0sQ0FBQTtNQUFBTixjQUFBLEdBQUFLLENBQUE7TUFDZEcsSUFBSSxHQUFHLEtBQUtBLElBQUksSUFBSTtJQUN0QixDQUFDO0lBQUE7SUFBQTtNQUFBUixjQUFBLEdBQUFNLENBQUE7SUFBQTtJQUFBTixjQUFBLEdBQUFLLENBQUE7SUFDRCxJQUFJK0IsS0FBSyxDQUFDZixNQUFNLEVBQUU7TUFBQTtNQUFBckIsY0FBQSxHQUFBTSxDQUFBO01BQUFOLGNBQUEsR0FBQUssQ0FBQTtNQUNoQkcsSUFBSSxHQUFHLElBQUlBLElBQUksR0FBRztJQUNwQixDQUFDO0lBQUE7SUFBQTtNQUFBUixjQUFBLEdBQUFNLENBQUE7SUFBQTtJQUFBTixjQUFBLEdBQUFLLENBQUE7SUFDRCxJQUFJK0IsS0FBSyxDQUFDZCxTQUFTLEVBQUU7TUFBQTtNQUFBdEIsY0FBQSxHQUFBTSxDQUFBO01BQUFOLGNBQUEsR0FBQUssQ0FBQTtNQUNuQkcsSUFBSSxHQUFHLEtBQUtBLElBQUksSUFBSTtJQUN0QixDQUFDO0lBQUE7SUFBQTtNQUFBUixjQUFBLEdBQUFNLENBQUE7SUFBQTtJQUFBTixjQUFBLEdBQUFLLENBQUE7SUFDRCxJQUFJK0IsS0FBSyxDQUFDYixhQUFhLEVBQUU7TUFBQTtNQUFBdkIsY0FBQSxHQUFBTSxDQUFBO01BQUFOLGNBQUEsR0FBQUssQ0FBQTtNQUN2QkcsSUFBSSxHQUFHLEtBQUtBLElBQUksSUFBSTtJQUN0QixDQUFDO0lBQUE7SUFBQTtNQUFBUixjQUFBLEdBQUFNLENBQUE7SUFBQTtJQUFBTixjQUFBLEdBQUFLLENBQUE7SUFDRCxJQUFJK0IsS0FBSyxDQUFDWixJQUFJLEVBQUU7TUFBQTtNQUFBeEIsY0FBQSxHQUFBTSxDQUFBO01BQUFOLGNBQUEsR0FBQUssQ0FBQTtNQUNkRyxJQUFJLEdBQUcsS0FBS0EsSUFBSSxJQUFJO0lBQ3RCLENBQUM7SUFBQTtJQUFBO01BQUFSLGNBQUEsR0FBQU0sQ0FBQTtJQUFBO0lBQUFOLGNBQUEsR0FBQUssQ0FBQTtJQUNELElBQUkrQixLQUFLLENBQUNSLElBQUksRUFBRTtNQUFBO01BQUE1QixjQUFBLEdBQUFNLENBQUE7TUFBQU4sY0FBQSxHQUFBSyxDQUFBO01BQ2RHLElBQUksR0FBRyxJQUFJQSxJQUFJLEtBQUs0QixLQUFLLENBQUNSLElBQUksQ0FBQ0QsR0FBRyxHQUFHO0lBQ3ZDLENBQUM7SUFBQTtJQUFBO01BQUEzQixjQUFBLEdBQUFNLENBQUE7SUFBQTtJQUFBTixjQUFBLEdBQUFLLENBQUE7SUFFRCxPQUFPRyxJQUFJO0VBQ2IsQ0FBQyxDQUFDLENBQUM2QixJQUFJLENBQUMsRUFBRSxDQUFDO0FBQ2I7QUFFQTs7Ozs7QUFLQSxPQUFNLFNBQVVDLHNCQUFzQkEsQ0FBQzlCLElBQVk7RUFBQTtFQUFBUixjQUFBLEdBQUFJLENBQUE7RUFBQUosY0FBQSxHQUFBSyxDQUFBO0VBQ2pELE9BQU87SUFDTEUsT0FBTyxFQUFFLENBQUM7TUFDUkMsSUFBSTtNQUFFO01BQUEsQ0FBQVIsY0FBQSxHQUFBTSxDQUFBLFdBQUFFLElBQUk7TUFBQTtNQUFBLENBQUFSLGNBQUEsR0FBQU0sQ0FBQSxXQUFJLEVBQUU7TUFDaEJHLFVBQVUsRUFBRTtLQUNiO0dBQ0Y7QUFDSDtBQUVBOzs7OztBQUtBLE9BQU0sU0FBVThCLGlCQUFpQkEsQ0FBQy9CLElBQVk7RUFBQTtFQUFBUixjQUFBLEdBQUFJLENBQUE7RUFBQUosY0FBQSxHQUFBSyxDQUFBO0VBQzVDLE9BQU87SUFDTEUsT0FBTyxFQUFFLENBQUM7TUFDUkMsSUFBSTtNQUFFO01BQUEsQ0FBQVIsY0FBQSxHQUFBTSxDQUFBLFdBQUFFLElBQUk7TUFBQTtNQUFBLENBQUFSLGNBQUEsR0FBQU0sQ0FBQSxXQUFJLEVBQUU7TUFDaEJHLFVBQVUsRUFBRTtRQUFFVyxJQUFJLEVBQUU7TUFBSTtLQUN6QjtHQUNGO0FBQ0g7QUFFQTs7Ozs7QUFLQSxPQUFNLFNBQVVvQixtQkFBbUJBLENBQUNoQyxJQUFZO0VBQUE7RUFBQVIsY0FBQSxHQUFBSSxDQUFBO0VBQUFKLGNBQUEsR0FBQUssQ0FBQTtFQUM5QyxPQUFPO0lBQ0xFLE9BQU8sRUFBRSxDQUFDO01BQ1JDLElBQUk7TUFBRTtNQUFBLENBQUFSLGNBQUEsR0FBQU0sQ0FBQSxXQUFBRSxJQUFJO01BQUE7TUFBQSxDQUFBUixjQUFBLEdBQUFNLENBQUEsV0FBSSxFQUFFO01BQ2hCRyxVQUFVLEVBQUU7UUFBRVksTUFBTSxFQUFFO01BQUk7S0FDM0I7R0FDRjtBQUNIO0FBRUE7Ozs7O0FBS0EsT0FBTSxTQUFVb0IsaUJBQWlCQSxDQUFDakMsSUFBWTtFQUFBO0VBQUFSLGNBQUEsR0FBQUksQ0FBQTtFQUFBSixjQUFBLEdBQUFLLENBQUE7RUFDNUMsT0FBTztJQUNMRSxPQUFPLEVBQUUsQ0FBQztNQUNSQyxJQUFJO01BQUU7TUFBQSxDQUFBUixjQUFBLEdBQUFNLENBQUEsV0FBQUUsSUFBSTtNQUFBO01BQUEsQ0FBQVIsY0FBQSxHQUFBTSxDQUFBLFdBQUksRUFBRTtNQUNoQkcsVUFBVSxFQUFFO1FBQUVlLElBQUksRUFBRTtNQUFJO0tBQ3pCO0dBQ0Y7QUFDSDtBQUVBOzs7Ozs7QUFNQSxPQUFNLFNBQVVrQixpQkFBaUJBLENBQUNsQyxJQUFZLEVBQUVtQixHQUFXO0VBQUE7RUFBQTNCLGNBQUEsR0FBQUksQ0FBQTtFQUFBSixjQUFBLEdBQUFLLENBQUE7RUFDekQsT0FBTztJQUNMRSxPQUFPLEVBQUUsQ0FBQztNQUNSQyxJQUFJO01BQUU7TUFBQSxDQUFBUixjQUFBLEdBQUFNLENBQUEsV0FBQUUsSUFBSTtNQUFBO01BQUEsQ0FBQVIsY0FBQSxHQUFBTSxDQUFBLFdBQUksRUFBRTtNQUNoQkcsVUFBVSxFQUFFO1FBQUVtQixJQUFJLEVBQUU7VUFBRUQ7UUFBRztNQUFFO0tBQzVCO0dBQ0Y7QUFDSDtBQUVBOzs7OztBQUtBLE9BQU0sU0FBVWdCLG9CQUFvQkEsQ0FBQ2pDLE1BQTZCO0VBQUE7RUFBQVYsY0FBQSxHQUFBSSxDQUFBO0VBQUFKLGNBQUEsR0FBQUssQ0FBQTtFQUNoRSxPQUFPO0lBQUVFLE9BQU8sRUFBRUc7RUFBTSxDQUFFO0FBQzVCO0FBRUE7Ozs7OztBQU1BLE9BQU0sU0FBVWtDLDZCQUE2QkEsQ0FBQ3pDLFFBQWdCO0VBQUE7RUFBQUgsY0FBQSxHQUFBSSxDQUFBO0VBQUFKLGNBQUEsR0FBQUssQ0FBQTtFQUM1RDtFQUFJO0VBQUEsQ0FBQUwsY0FBQSxHQUFBTSxDQUFBLFlBQUNILFFBQVE7RUFBQTtFQUFBLENBQUFILGNBQUEsR0FBQU0sQ0FBQSxXQUFJLE9BQU9ILFFBQVEsS0FBSyxRQUFRLEdBQUU7SUFBQTtJQUFBSCxjQUFBLEdBQUFNLENBQUE7SUFBQU4sY0FBQSxHQUFBSyxDQUFBO0lBQzdDLE9BQU9pQyxzQkFBc0IsQ0FBQyxFQUFFLENBQUM7RUFDbkMsQ0FBQztFQUFBO0VBQUE7SUFBQXRDLGNBQUEsR0FBQU0sQ0FBQTtFQUFBO0VBRUQ7RUFDQSxNQUFNdUMsS0FBSztFQUFBO0VBQUEsQ0FBQTdDLGNBQUEsR0FBQUssQ0FBQSxRQUFHRixRQUFRLENBQUNTLEtBQUssQ0FBQyxJQUFJLENBQUM7RUFDbEMsTUFBTUYsTUFBTTtFQUFBO0VBQUEsQ0FBQVYsY0FBQSxHQUFBSyxDQUFBLFFBQTBCLEVBQUU7RUFBQztFQUFBTCxjQUFBLEdBQUFLLENBQUE7RUFFekMsS0FBSyxJQUFJUSxDQUFDO0VBQUE7RUFBQSxDQUFBYixjQUFBLEdBQUFLLENBQUEsUUFBRyxDQUFDLEdBQUVRLENBQUMsR0FBR2dDLEtBQUssQ0FBQy9CLE1BQU0sRUFBRUQsQ0FBQyxFQUFFLEVBQUU7SUFDckMsTUFBTWlDLElBQUk7SUFBQTtJQUFBLENBQUE5QyxjQUFBLEdBQUFLLENBQUEsUUFBR3dDLEtBQUssQ0FBQ2hDLENBQUMsQ0FBQyxDQUFDZ0IsSUFBSSxFQUFFO0lBQUM7SUFBQTdCLGNBQUEsR0FBQUssQ0FBQTtJQUU3QixJQUFJLENBQUN5QyxJQUFJLEVBQUU7TUFBQTtNQUFBOUMsY0FBQSxHQUFBTSxDQUFBO01BQUFOLGNBQUEsR0FBQUssQ0FBQTtNQUNUO01BQ0EsSUFBSVEsQ0FBQyxHQUFHZ0MsS0FBSyxDQUFDL0IsTUFBTSxHQUFHLENBQUMsRUFBRTtRQUFBO1FBQUFkLGNBQUEsR0FBQU0sQ0FBQTtRQUFBTixjQUFBLEdBQUFLLENBQUE7UUFDeEJLLE1BQU0sQ0FBQ1MsSUFBSSxDQUFDO1VBQUVYLElBQUksRUFBRSxJQUFJO1VBQUVDLFVBQVUsRUFBRTtRQUFFLENBQUUsQ0FBQztNQUM3QyxDQUFDO01BQUE7TUFBQTtRQUFBVCxjQUFBLEdBQUFNLENBQUE7TUFBQTtNQUFBTixjQUFBLEdBQUFLLENBQUE7TUFDRDtJQUNGLENBQUM7SUFBQTtJQUFBO01BQUFMLGNBQUEsR0FBQU0sQ0FBQTtJQUFBO0lBRUQ7SUFBQU4sY0FBQSxHQUFBSyxDQUFBO0lBQ0EsSUFBSXlDLElBQUksQ0FBQzlCLFVBQVUsQ0FBQyxHQUFHLENBQUMsRUFBRTtNQUFBO01BQUFoQixjQUFBLEdBQUFNLENBQUE7TUFDeEIsTUFBTXlDLEtBQUs7TUFBQTtNQUFBLENBQUEvQyxjQUFBLEdBQUFLLENBQUE7TUFBRztNQUFBLENBQUFMLGNBQUEsR0FBQU0sQ0FBQSxXQUFBd0MsSUFBSSxDQUFDckIsS0FBSyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDWCxNQUFNO01BQUE7TUFBQSxDQUFBZCxjQUFBLEdBQUFNLENBQUEsV0FBSSxDQUFDO01BQ2hELE1BQU0wQyxVQUFVO01BQUE7TUFBQSxDQUFBaEQsY0FBQSxHQUFBSyxDQUFBLFFBQUd5QyxJQUFJLENBQUNHLE9BQU8sQ0FBQyxRQUFRLEVBQUUsRUFBRSxDQUFDO01BQUM7TUFBQWpELGNBQUEsR0FBQUssQ0FBQTtNQUM5Q0ssTUFBTSxDQUFDUyxJQUFJLENBQUM7UUFDVlgsSUFBSSxFQUFFd0MsVUFBVTtRQUNoQnZDLFVBQVUsRUFBRTtVQUFFVyxJQUFJLEVBQUU7UUFBSSxDQUFFLENBQUM7T0FDNUIsQ0FBQztNQUFDO01BQUFwQixjQUFBLEdBQUFLLENBQUE7TUFDSEssTUFBTSxDQUFDUyxJQUFJLENBQUM7UUFBRVgsSUFBSSxFQUFFLElBQUk7UUFBRUMsVUFBVSxFQUFFO01BQUUsQ0FBRSxDQUFDO01BQUM7TUFBQVQsY0FBQSxHQUFBSyxDQUFBO01BQzVDO0lBQ0YsQ0FBQztJQUFBO0lBQUE7TUFBQUwsY0FBQSxHQUFBTSxDQUFBO0lBQUE7SUFFRDtJQUFBTixjQUFBLEdBQUFLLENBQUE7SUFDQTtJQUFJO0lBQUEsQ0FBQUwsY0FBQSxHQUFBTSxDQUFBLFdBQUF3QyxJQUFJLENBQUNyQixLQUFLLENBQUMsV0FBVyxDQUFDO0lBQUE7SUFBQSxDQUFBekIsY0FBQSxHQUFBTSxDQUFBLFdBQUl3QyxJQUFJLENBQUNyQixLQUFLLENBQUMsV0FBVyxDQUFDLEdBQUU7TUFBQTtNQUFBekIsY0FBQSxHQUFBTSxDQUFBO01BQ3RELE1BQU00QyxRQUFRO01BQUE7TUFBQSxDQUFBbEQsY0FBQSxHQUFBSyxDQUFBLFFBQUd5QyxJQUFJLENBQUNHLE9BQU8sQ0FBQyxjQUFjLEVBQUUsSUFBSSxDQUFDO01BQ25ELE1BQU1FLFNBQVM7TUFBQTtNQUFBLENBQUFuRCxjQUFBLEdBQUFLLENBQUEsUUFBR0gsd0JBQXdCLENBQUNnRCxRQUFRLENBQUM7TUFBQztNQUFBbEQsY0FBQSxHQUFBSyxDQUFBO01BQ3JESyxNQUFNLENBQUNTLElBQUksQ0FBQyxHQUFHZ0MsU0FBUyxDQUFDNUMsT0FBTyxDQUFDO01BQUM7TUFBQVAsY0FBQSxHQUFBSyxDQUFBO01BQ2xDSyxNQUFNLENBQUNTLElBQUksQ0FBQztRQUFFWCxJQUFJLEVBQUUsSUFBSTtRQUFFQyxVQUFVLEVBQUU7TUFBRSxDQUFFLENBQUM7TUFBQztNQUFBVCxjQUFBLEdBQUFLLENBQUE7TUFDNUM7SUFDRixDQUFDO0lBQUE7SUFBQTtNQUFBTCxjQUFBLEdBQUFNLENBQUE7SUFBQTtJQUVEO0lBQUFOLGNBQUEsR0FBQUssQ0FBQTtJQUNBLElBQUl5QyxJQUFJLENBQUM5QixVQUFVLENBQUMsR0FBRyxDQUFDLEVBQUU7TUFBQTtNQUFBaEIsY0FBQSxHQUFBTSxDQUFBO01BQ3hCLE1BQU04QyxTQUFTO01BQUE7TUFBQSxDQUFBcEQsY0FBQSxHQUFBSyxDQUFBLFFBQUd5QyxJQUFJLENBQUNHLE9BQU8sQ0FBQyxPQUFPLEVBQUUsRUFBRSxDQUFDO01BQUM7TUFBQWpELGNBQUEsR0FBQUssQ0FBQTtNQUM1Q0ssTUFBTSxDQUFDUyxJQUFJLENBQUM7UUFBRVgsSUFBSSxFQUFFLElBQUk7UUFBRUMsVUFBVSxFQUFFO01BQUUsQ0FBRSxDQUFDO01BQzNDLE1BQU0wQyxTQUFTO01BQUE7TUFBQSxDQUFBbkQsY0FBQSxHQUFBSyxDQUFBLFFBQUdILHdCQUF3QixDQUFDa0QsU0FBUyxDQUFDO01BQUM7TUFBQXBELGNBQUEsR0FBQUssQ0FBQTtNQUN0REssTUFBTSxDQUFDUyxJQUFJLENBQUMsR0FBR2dDLFNBQVMsQ0FBQzVDLE9BQU8sQ0FBQztNQUFDO01BQUFQLGNBQUEsR0FBQUssQ0FBQTtNQUNsQ0ssTUFBTSxDQUFDUyxJQUFJLENBQUM7UUFBRVgsSUFBSSxFQUFFLElBQUk7UUFBRUMsVUFBVSxFQUFFO01BQUUsQ0FBRSxDQUFDO01BQUM7TUFBQVQsY0FBQSxHQUFBSyxDQUFBO01BQzVDO0lBQ0YsQ0FBQztJQUFBO0lBQUE7TUFBQUwsY0FBQSxHQUFBTSxDQUFBO0lBQUE7SUFFRDtJQUFBTixjQUFBLEdBQUFLLENBQUE7SUFDQSxJQUFJeUMsSUFBSSxDQUFDOUIsVUFBVSxDQUFDLEtBQUssQ0FBQyxFQUFFO01BQUE7TUFBQWhCLGNBQUEsR0FBQU0sQ0FBQTtNQUMxQjtNQUNBLE1BQU0rQyxTQUFTO01BQUE7TUFBQSxDQUFBckQsY0FBQSxHQUFBSyxDQUFBLFFBQUcsRUFBRTtNQUFDO01BQUFMLGNBQUEsR0FBQUssQ0FBQTtNQUNyQlEsQ0FBQyxFQUFFLENBQUMsQ0FBQztNQUFBO01BQUFiLGNBQUEsR0FBQUssQ0FBQTtNQUNMO01BQU87TUFBQSxDQUFBTCxjQUFBLEdBQUFNLENBQUEsV0FBQU8sQ0FBQyxHQUFHZ0MsS0FBSyxDQUFDL0IsTUFBTTtNQUFBO01BQUEsQ0FBQWQsY0FBQSxHQUFBTSxDQUFBLFdBQUksQ0FBQ3VDLEtBQUssQ0FBQ2hDLENBQUMsQ0FBQyxDQUFDZ0IsSUFBSSxFQUFFLENBQUNiLFVBQVUsQ0FBQyxLQUFLLENBQUMsR0FBRTtRQUFBO1FBQUFoQixjQUFBLEdBQUFLLENBQUE7UUFDN0RnRCxTQUFTLENBQUNsQyxJQUFJLENBQUMwQixLQUFLLENBQUNoQyxDQUFDLENBQUMsQ0FBQztRQUFDO1FBQUFiLGNBQUEsR0FBQUssQ0FBQTtRQUN6QlEsQ0FBQyxFQUFFO01BQ0w7TUFBQztNQUFBYixjQUFBLEdBQUFLLENBQUE7TUFFRCxJQUFJZ0QsU0FBUyxDQUFDdkMsTUFBTSxHQUFHLENBQUMsRUFBRTtRQUFBO1FBQUFkLGNBQUEsR0FBQU0sQ0FBQTtRQUFBTixjQUFBLEdBQUFLLENBQUE7UUFDeEJLLE1BQU0sQ0FBQ1MsSUFBSSxDQUFDO1VBQ1ZYLElBQUksRUFBRTZDLFNBQVMsQ0FBQ2hCLElBQUksQ0FBQyxJQUFJLENBQUM7VUFDMUI1QixVQUFVLEVBQUU7WUFBRWUsSUFBSSxFQUFFO1VBQUk7U0FDekIsQ0FBQztRQUFDO1FBQUF4QixjQUFBLEdBQUFLLENBQUE7UUFDSEssTUFBTSxDQUFDUyxJQUFJLENBQUM7VUFBRVgsSUFBSSxFQUFFLElBQUk7VUFBRUMsVUFBVSxFQUFFO1FBQUUsQ0FBRSxDQUFDO01BQzdDLENBQUM7TUFBQTtNQUFBO1FBQUFULGNBQUEsR0FBQU0sQ0FBQTtNQUFBO01BQUFOLGNBQUEsR0FBQUssQ0FBQTtNQUNEO0lBQ0YsQ0FBQztJQUFBO0lBQUE7TUFBQUwsY0FBQSxHQUFBTSxDQUFBO0lBQUE7SUFFRDtJQUNBLE1BQU02QyxTQUFTO0lBQUE7SUFBQSxDQUFBbkQsY0FBQSxHQUFBSyxDQUFBLFNBQUdILHdCQUF3QixDQUFDNEMsSUFBSSxDQUFDO0lBQUM7SUFBQTlDLGNBQUEsR0FBQUssQ0FBQTtJQUNqREssTUFBTSxDQUFDUyxJQUFJLENBQUMsR0FBR2dDLFNBQVMsQ0FBQzVDLE9BQU8sQ0FBQztJQUVqQztJQUFBO0lBQUFQLGNBQUEsR0FBQUssQ0FBQTtJQUNBLElBQUlRLENBQUMsR0FBR2dDLEtBQUssQ0FBQy9CLE1BQU0sR0FBRyxDQUFDLEVBQUU7TUFBQTtNQUFBZCxjQUFBLEdBQUFNLENBQUE7TUFBQU4sY0FBQSxHQUFBSyxDQUFBO01BQ3hCSyxNQUFNLENBQUNTLElBQUksQ0FBQztRQUFFWCxJQUFJLEVBQUUsSUFBSTtRQUFFQyxVQUFVLEVBQUU7TUFBRSxDQUFFLENBQUM7SUFDN0MsQ0FBQztJQUFBO0lBQUE7TUFBQVQsY0FBQSxHQUFBTSxDQUFBO0lBQUE7RUFDSDtFQUFDO0VBQUFOLGNBQUEsR0FBQUssQ0FBQTtFQUVELE9BQU87SUFBRUUsT0FBTyxFQUFFRztFQUFNLENBQUU7QUFDNUI7QUFFQTs7Ozs7QUFLQSxPQUFNLFNBQVU0QyxtQkFBbUJBLENBQUNuRCxRQUFnQjtFQUFBO0VBQUFILGNBQUEsR0FBQUksQ0FBQTtFQUFBSixjQUFBLEdBQUFLLENBQUE7RUFDbEQ7RUFBSTtFQUFBLENBQUFMLGNBQUEsR0FBQU0sQ0FBQSxZQUFDSCxRQUFRO0VBQUE7RUFBQSxDQUFBSCxjQUFBLEdBQUFNLENBQUEsV0FBSSxPQUFPSCxRQUFRLEtBQUssUUFBUSxHQUFFO0lBQUE7SUFBQUgsY0FBQSxHQUFBTSxDQUFBO0lBQUFOLGNBQUEsR0FBQUssQ0FBQTtJQUM3QyxPQUFPLEVBQUU7RUFDWCxDQUFDO0VBQUE7RUFBQTtJQUFBTCxjQUFBLEdBQUFNLENBQUE7RUFBQTtFQUVELElBQUlpRCxTQUFTO0VBQUE7RUFBQSxDQUFBdkQsY0FBQSxHQUFBSyxDQUFBLFNBQUdGLFFBQVE7RUFFeEI7RUFBQTtFQUFBSCxjQUFBLEdBQUFLLENBQUE7RUFDQWtELFNBQVMsR0FBR0EsU0FBUyxDQUFDTixPQUFPLENBQUMsY0FBYyxFQUFFLEVBQUUsQ0FBQztFQUVqRDtFQUFBO0VBQUFqRCxjQUFBLEdBQUFLLENBQUE7RUFDQWtELFNBQVMsR0FBR0EsU0FBUyxDQUFDTixPQUFPLENBQUMsa0JBQWtCLEVBQUUsSUFBSSxDQUFDO0VBQUM7RUFBQWpELGNBQUEsR0FBQUssQ0FBQTtFQUN4RGtELFNBQVMsR0FBR0EsU0FBUyxDQUFDTixPQUFPLENBQUMsY0FBYyxFQUFFLElBQUksQ0FBQztFQUFDO0VBQUFqRCxjQUFBLEdBQUFLLENBQUE7RUFDcERrRCxTQUFTLEdBQUdBLFNBQVMsQ0FBQ04sT0FBTyxDQUFDLGNBQWMsRUFBRSxJQUFJLENBQUM7RUFBQztFQUFBakQsY0FBQSxHQUFBSyxDQUFBO0VBQ3BEa0QsU0FBUyxHQUFHQSxTQUFTLENBQUNOLE9BQU8sQ0FBQyxZQUFZLEVBQUUsSUFBSSxDQUFDO0VBRWpEO0VBQUE7RUFBQWpELGNBQUEsR0FBQUssQ0FBQTtFQUNBa0QsU0FBUyxHQUFHQSxTQUFTLENBQUNOLE9BQU8sQ0FBQyxjQUFjLEVBQUUsSUFBSSxDQUFDO0VBRW5EO0VBQUE7RUFBQWpELGNBQUEsR0FBQUssQ0FBQTtFQUNBa0QsU0FBUyxHQUFHQSxTQUFTLENBQUNOLE9BQU8sQ0FBQyxZQUFZLEVBQUUsSUFBSSxDQUFDO0VBRWpEO0VBQUE7RUFBQWpELGNBQUEsR0FBQUssQ0FBQTtFQUNBa0QsU0FBUyxHQUFHQSxTQUFTLENBQUNOLE9BQU8sQ0FBQyxpQkFBaUIsRUFBR3hCLEtBQUssSUFBSTtJQUFBO0lBQUF6QixjQUFBLEdBQUFJLENBQUE7SUFDekQ7SUFDQSxNQUFNeUMsS0FBSztJQUFBO0lBQUEsQ0FBQTdDLGNBQUEsR0FBQUssQ0FBQSxTQUFHb0IsS0FBSyxDQUFDYixLQUFLLENBQUMsSUFBSSxDQUFDO0lBQUM7SUFBQVosY0FBQSxHQUFBSyxDQUFBO0lBQ2hDLE9BQU93QyxLQUFLLENBQUMzQixLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUNtQixJQUFJLENBQUMsSUFBSSxDQUFDO0VBQ3RDLENBQUMsQ0FBQztFQUVGO0VBQUE7RUFBQXJDLGNBQUEsR0FBQUssQ0FBQTtFQUNBa0QsU0FBUyxHQUFHQSxTQUFTLENBQUNOLE9BQU8sQ0FBQyx3QkFBd0IsRUFBRSxJQUFJLENBQUM7RUFFN0Q7RUFBQTtFQUFBakQsY0FBQSxHQUFBSyxDQUFBO0VBQ0FrRCxTQUFTLEdBQUdBLFNBQVMsQ0FBQ04sT0FBTyxDQUFDLFNBQVMsRUFBRSxFQUFFLENBQUM7RUFFNUM7RUFBQTtFQUFBakQsY0FBQSxHQUFBSyxDQUFBO0VBQ0FrRCxTQUFTLEdBQUdBLFNBQVMsQ0FBQ04sT0FBTyxDQUFDLGFBQWEsRUFBRSxJQUFJLENBQUM7RUFBQztFQUFBakQsY0FBQSxHQUFBSyxDQUFBO0VBQ25Ea0QsU0FBUyxHQUFHQSxTQUFTLENBQUNOLE9BQU8sQ0FBQyxhQUFhLEVBQUUsSUFBSSxDQUFDO0VBRWxEO0VBQUE7RUFBQWpELGNBQUEsR0FBQUssQ0FBQTtFQUNBa0QsU0FBUyxHQUFHQSxTQUFTLENBQUNOLE9BQU8sQ0FBQyxTQUFTLEVBQUUsTUFBTSxDQUFDO0VBQUM7RUFBQWpELGNBQUEsR0FBQUssQ0FBQTtFQUNqRGtELFNBQVMsR0FBR0EsU0FBUyxDQUFDMUIsSUFBSSxFQUFFO0VBQUM7RUFBQTdCLGNBQUEsR0FBQUssQ0FBQTtFQUU3QixPQUFPa0QsU0FBUztBQUNsQjtBQUVBOzs7Ozs7QUFNQSxPQUFNLFNBQVVDLHlCQUF5QkEsQ0FBQ0MsV0FBbUI7RUFBQTtFQUFBekQsY0FBQSxHQUFBSSxDQUFBO0VBQUFKLGNBQUEsR0FBQUssQ0FBQTtFQUMzRDtFQUFJO0VBQUEsQ0FBQUwsY0FBQSxHQUFBTSxDQUFBLFlBQUNtRCxXQUFXO0VBQUE7RUFBQSxDQUFBekQsY0FBQSxHQUFBTSxDQUFBLFdBQUksT0FBT21ELFdBQVcsS0FBSyxRQUFRLEdBQUU7SUFBQTtJQUFBekQsY0FBQSxHQUFBTSxDQUFBO0lBQUFOLGNBQUEsR0FBQUssQ0FBQTtJQUNuRCxPQUFPb0QsV0FBVztFQUNwQixDQUFDO0VBQUE7RUFBQTtJQUFBekQsY0FBQSxHQUFBTSxDQUFBO0VBQUE7RUFFRDtFQUNBO0VBRUE7RUFDQTtFQUNBLE1BQU1vRCxnQkFBZ0I7RUFBQTtFQUFBLENBQUExRCxjQUFBLEdBQUFLLENBQUEsU0FBRyxDQUN2QixnQkFBZ0I7RUFBRztFQUNuQixnQkFBZ0I7RUFBRztFQUNuQixnQkFBZ0I7RUFBRztFQUNuQixhQUFhO0VBQU07RUFDbkIsWUFBWTtFQUFPO0VBQ25CLFdBQVcsQ0FBUTtFQUFBLENBQ3BCO0VBQUM7RUFBQUwsY0FBQSxHQUFBSyxDQUFBO0VBRUYsS0FBSyxNQUFNc0QsT0FBTyxJQUFJRCxnQkFBZ0IsRUFBRTtJQUN0QyxNQUFNRSxPQUFPO0lBQUE7SUFBQSxDQUFBNUQsY0FBQSxHQUFBSyxDQUFBLFNBQUdvRCxXQUFXLENBQUNoQyxLQUFLLENBQUMsSUFBSW9DLE1BQU0sQ0FBQ0YsT0FBTyxDQUFDRyxNQUFNLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFBQztJQUFBOUQsY0FBQSxHQUFBSyxDQUFBO0lBQ25FO0lBQUk7SUFBQSxDQUFBTCxjQUFBLEdBQUFNLENBQUEsV0FBQXNELE9BQU87SUFBQTtJQUFBLENBQUE1RCxjQUFBLEdBQUFNLENBQUEsV0FBSXNELE9BQU8sQ0FBQzlDLE1BQU0sSUFBSSxDQUFDLEdBQUU7TUFBQTtNQUFBZCxjQUFBLEdBQUFNLENBQUE7TUFDbEM7TUFDQSxNQUFNeUQsVUFBVTtNQUFBO01BQUEsQ0FBQS9ELGNBQUEsR0FBQUssQ0FBQSxTQUFHb0QsV0FBVyxDQUFDTyxPQUFPLENBQUNKLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQztNQUNsRCxNQUFNSyxTQUFTO01BQUE7TUFBQSxDQUFBakUsY0FBQSxHQUFBSyxDQUFBLFNBQUdvRCxXQUFXLENBQUNTLFdBQVcsQ0FBQ04sT0FBTyxDQUFDQSxPQUFPLENBQUM5QyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUM7TUFBQztNQUFBZCxjQUFBLEdBQUFLLENBQUE7TUFFdkUsSUFBSTBELFVBQVUsS0FBS0UsU0FBUyxFQUFFO1FBQUE7UUFBQWpFLGNBQUEsR0FBQU0sQ0FBQTtRQUM1QjtRQUNBO1FBQ0EsTUFBTTZELFVBQVU7UUFBQTtRQUFBLENBQUFuRSxjQUFBLEdBQUFLLENBQUEsU0FBR29ELFdBQVcsQ0FBQ08sT0FBTyxDQUFDSixPQUFPLENBQUMsQ0FBQyxDQUFDLEVBQUVHLFVBQVUsR0FBRyxDQUFDLENBQUM7UUFBQztRQUFBL0QsY0FBQSxHQUFBSyxDQUFBO1FBQ25FLElBQUk4RCxVQUFVLEdBQUcsQ0FBQyxFQUFFO1VBQUE7VUFBQW5FLGNBQUEsR0FBQU0sQ0FBQTtVQUFBTixjQUFBLEdBQUFLLENBQUE7VUFDbEIsT0FBT29ELFdBQVcsQ0FBQ1csU0FBUyxDQUFDLENBQUMsRUFBRUQsVUFBVSxDQUFDLENBQUN0QyxJQUFJLEVBQUU7UUFDcEQsQ0FBQztRQUFBO1FBQUE7VUFBQTdCLGNBQUEsR0FBQU0sQ0FBQTtRQUFBO01BQ0gsQ0FBQztNQUFBO01BQUE7UUFBQU4sY0FBQSxHQUFBTSxDQUFBO01BQUE7SUFDSCxDQUFDO0lBQUE7SUFBQTtNQUFBTixjQUFBLEdBQUFNLENBQUE7SUFBQTtFQUNIO0VBRUE7RUFDQTtFQUNBLE1BQU11QyxLQUFLO0VBQUE7RUFBQSxDQUFBN0MsY0FBQSxHQUFBSyxDQUFBLFNBQUdvRCxXQUFXLENBQUM3QyxLQUFLLENBQUMsSUFBSSxDQUFDO0VBQ3JDLE1BQU15RCxVQUFVO0VBQUE7RUFBQSxDQUFBckUsY0FBQSxHQUFBSyxDQUFBLFNBQUd3QyxLQUFLLENBQUMvQixNQUFNO0VBQUM7RUFBQWQsY0FBQSxHQUFBSyxDQUFBO0VBRWhDLElBQUlnRSxVQUFVLEdBQUcsQ0FBQyxFQUFFO0lBQUE7SUFBQXJFLGNBQUEsR0FBQU0sQ0FBQTtJQUFBTixjQUFBLEdBQUFLLENBQUE7SUFDbEI7SUFDQSxLQUFLLElBQUlRLENBQUM7SUFBQTtJQUFBLENBQUFiLGNBQUEsR0FBQUssQ0FBQSxTQUFHaUUsSUFBSSxDQUFDQyxLQUFLLENBQUNGLFVBQVUsR0FBRyxDQUFDLENBQUMsR0FBRXhELENBQUMsR0FBR3lELElBQUksQ0FBQ0MsS0FBSyxDQUFDRixVQUFVLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFeEQsQ0FBQyxFQUFFLEVBQUU7TUFDaEYsTUFBTTJELFdBQVc7TUFBQTtNQUFBLENBQUF4RSxjQUFBLEdBQUFLLENBQUEsU0FBR3dDLEtBQUssQ0FBQzNCLEtBQUssQ0FBQyxDQUFDLEVBQUVMLENBQUMsQ0FBQyxDQUFDd0IsSUFBSSxDQUFDLElBQUksQ0FBQztNQUNoRCxNQUFNb0MsVUFBVTtNQUFBO01BQUEsQ0FBQXpFLGNBQUEsR0FBQUssQ0FBQSxTQUFHd0MsS0FBSyxDQUFDM0IsS0FBSyxDQUFDTCxDQUFDLENBQUMsQ0FBQ3dCLElBQUksQ0FBQyxJQUFJLENBQUM7TUFFNUM7TUFBQTtNQUFBckMsY0FBQSxHQUFBSyxDQUFBO01BQ0E7TUFBSTtNQUFBLENBQUFMLGNBQUEsR0FBQU0sQ0FBQSxXQUFBbUUsVUFBVSxDQUFDM0QsTUFBTSxHQUFHMEQsV0FBVyxDQUFDMUQsTUFBTSxHQUFHLEdBQUc7TUFBQTtNQUFBLENBQUFkLGNBQUEsR0FBQU0sQ0FBQSxXQUM1Q2tFLFdBQVcsQ0FBQzFELE1BQU0sR0FBRyxFQUFFO01BQUE7TUFBQSxDQUFBZCxjQUFBLEdBQUFNLENBQUEsV0FDdkJtRSxVQUFVLENBQUNDLFFBQVEsQ0FBQzdCLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztNQUFBO01BQUEsQ0FBQTdDLGNBQUEsR0FBQU0sQ0FBQSxXQUM3Qm1FLFVBQVUsQ0FBQ0MsUUFBUSxDQUFDN0IsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUU7UUFBQTtRQUFBN0MsY0FBQSxHQUFBTSxDQUFBO1FBQUFOLGNBQUEsR0FBQUssQ0FBQTtRQUNqQyxPQUFPbUUsV0FBVyxDQUFDM0MsSUFBSSxFQUFFO01BQzNCLENBQUM7TUFBQTtNQUFBO1FBQUE3QixjQUFBLEdBQUFNLENBQUE7TUFBQTtJQUNIO0VBQ0YsQ0FBQztFQUFBO0VBQUE7SUFBQU4sY0FBQSxHQUFBTSxDQUFBO0VBQUE7RUFFRDtFQUNBLE1BQU1RLE1BQU07RUFBQTtFQUFBLENBQUFkLGNBQUEsR0FBQUssQ0FBQSxTQUFHb0QsV0FBVyxDQUFDM0MsTUFBTTtFQUFDO0VBQUFkLGNBQUEsR0FBQUssQ0FBQTtFQUNsQyxJQUFJUyxNQUFNLEdBQUcsR0FBRyxFQUFFO0lBQUE7SUFBQWQsY0FBQSxHQUFBTSxDQUFBO0lBQ2hCLE1BQU1xRSxRQUFRO0lBQUE7SUFBQSxDQUFBM0UsY0FBQSxHQUFBSyxDQUFBLFNBQUdpRSxJQUFJLENBQUNDLEtBQUssQ0FBQ3pELE1BQU0sR0FBRyxDQUFDLENBQUM7SUFDdkMsTUFBTThELFNBQVM7SUFBQTtJQUFBLENBQUE1RSxjQUFBLEdBQUFLLENBQUEsU0FBR29ELFdBQVcsQ0FBQ1csU0FBUyxDQUFDLENBQUMsRUFBRU8sUUFBUSxDQUFDO0lBQ3BELE1BQU1FLFVBQVU7SUFBQTtJQUFBLENBQUE3RSxjQUFBLEdBQUFLLENBQUEsU0FBR29ELFdBQVcsQ0FBQ1csU0FBUyxDQUFDTyxRQUFRLENBQUM7SUFFbEQ7SUFDQSxNQUFNRyxVQUFVO0lBQUE7SUFBQSxDQUFBOUUsY0FBQSxHQUFBSyxDQUFBLFNBQUd1RSxTQUFTLENBQUNoRSxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUNNLEtBQUssQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQ3BELE1BQU02RCxXQUFXO0lBQUE7SUFBQSxDQUFBL0UsY0FBQSxHQUFBSyxDQUFBLFNBQUd3RSxVQUFVLENBQUNqRSxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUNNLEtBQUssQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBRXRELElBQUk4RCxVQUFVO0lBQUE7SUFBQSxDQUFBaEYsY0FBQSxHQUFBSyxDQUFBLFNBQUcsQ0FBQztJQUFDO0lBQUFMLGNBQUEsR0FBQUssQ0FBQTtJQUNuQixLQUFLLElBQUlRLENBQUM7SUFBQTtJQUFBLENBQUFiLGNBQUEsR0FBQUssQ0FBQSxTQUFHLENBQUMsR0FBRVEsQ0FBQyxHQUFHeUQsSUFBSSxDQUFDVyxHQUFHLENBQUNILFVBQVUsQ0FBQ2hFLE1BQU0sRUFBRWlFLFdBQVcsQ0FBQ2pFLE1BQU0sQ0FBQyxFQUFFRCxDQUFDLEVBQUUsRUFBRTtNQUFBO01BQUFiLGNBQUEsR0FBQUssQ0FBQTtNQUN4RTtNQUFJO01BQUEsQ0FBQUwsY0FBQSxHQUFBTSxDQUFBLFdBQUF3RSxVQUFVLENBQUNqRSxDQUFDLENBQUMsQ0FBQ2dCLElBQUksRUFBRTtNQUFBO01BQUEsQ0FBQTdCLGNBQUEsR0FBQU0sQ0FBQSxXQUFJeUUsV0FBVyxDQUFDbEUsQ0FBQyxDQUFDLENBQUM2RCxRQUFRLENBQUNJLFVBQVUsQ0FBQ2pFLENBQUMsQ0FBQyxDQUFDZ0IsSUFBSSxFQUFFLENBQUN1QyxTQUFTLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLEdBQUU7UUFBQTtRQUFBcEUsY0FBQSxHQUFBTSxDQUFBO1FBQUFOLGNBQUEsR0FBQUssQ0FBQTtRQUMxRjJFLFVBQVUsRUFBRTtNQUNkLENBQUM7TUFBQTtNQUFBO1FBQUFoRixjQUFBLEdBQUFNLENBQUE7TUFBQTtJQUNIO0lBQUM7SUFBQU4sY0FBQSxHQUFBSyxDQUFBO0lBRUQsSUFBSTJFLFVBQVUsSUFBSSxDQUFDLEVBQUU7TUFBQTtNQUFBaEYsY0FBQSxHQUFBTSxDQUFBO01BQUFOLGNBQUEsR0FBQUssQ0FBQTtNQUNuQixPQUFPdUUsU0FBUyxDQUFDL0MsSUFBSSxFQUFFO0lBQ3pCLENBQUM7SUFBQTtJQUFBO01BQUE3QixjQUFBLEdBQUFNLENBQUE7SUFBQTtFQUNILENBQUM7RUFBQTtFQUFBO0lBQUFOLGNBQUEsR0FBQU0sQ0FBQTtFQUFBO0VBQUFOLGNBQUEsR0FBQUssQ0FBQTtFQUVELE9BQU9vRCxXQUFXO0FBQ3BCO0FBRUE7Ozs7O0FBS0EsT0FBTSxTQUFVeUIsMkJBQTJCQSxDQUFDM0UsT0FBWTtFQUFBO0VBQUFQLGNBQUEsR0FBQUksQ0FBQTtFQUFBSixjQUFBLEdBQUFLLENBQUE7RUFDdEQ7RUFBSTtFQUFBLENBQUFMLGNBQUEsR0FBQU0sQ0FBQSxZQUFDQyxPQUFPO0VBQUE7RUFBQSxDQUFBUCxjQUFBLEdBQUFNLENBQUEsV0FBSSxPQUFPQyxPQUFPLEtBQUssUUFBUSxHQUFFO0lBQUE7SUFBQVAsY0FBQSxHQUFBTSxDQUFBO0lBQUFOLGNBQUEsR0FBQUssQ0FBQTtJQUMzQyxPQUFPRSxPQUFPO0VBQ2hCLENBQUM7RUFBQTtFQUFBO0lBQUFQLGNBQUEsR0FBQU0sQ0FBQTtFQUFBO0VBRUQsTUFBTTZFLE9BQU87RUFBQTtFQUFBLENBQUFuRixjQUFBLEdBQUFLLENBQUEsU0FBRztJQUFFLEdBQUdFO0VBQU8sQ0FBRTtFQUU5QjtFQUFBO0VBQUFQLGNBQUEsR0FBQUssQ0FBQTtFQUNBO0VBQUk7RUFBQSxDQUFBTCxjQUFBLEdBQUFNLENBQUEsV0FBQTZFLE9BQU8sQ0FBQ0MsWUFBWTtFQUFBO0VBQUEsQ0FBQXBGLGNBQUEsR0FBQU0sQ0FBQSxXQUFJLE9BQU82RSxPQUFPLENBQUNDLFlBQVksS0FBSyxRQUFRLEdBQUU7SUFBQTtJQUFBcEYsY0FBQSxHQUFBTSxDQUFBO0lBQUFOLGNBQUEsR0FBQUssQ0FBQTtJQUNwRThFLE9BQU8sQ0FBQ0MsWUFBWSxHQUFHNUIseUJBQXlCLENBQUMyQixPQUFPLENBQUNDLFlBQVksQ0FBQztFQUN4RSxDQUFDO0VBQUE7RUFBQTtJQUFBcEYsY0FBQSxHQUFBTSxDQUFBO0VBQUE7RUFFRDtFQUFBTixjQUFBLEdBQUFLLENBQUE7RUFDQTtFQUFJO0VBQUEsQ0FBQUwsY0FBQSxHQUFBTSxDQUFBLFdBQUE2RSxPQUFPLENBQUNFLGdCQUFnQjtFQUFBO0VBQUEsQ0FBQXJGLGNBQUEsR0FBQU0sQ0FBQSxXQUFJLE9BQU82RSxPQUFPLENBQUNFLGdCQUFnQixLQUFLLFFBQVEsR0FBRTtJQUFBO0lBQUFyRixjQUFBLEdBQUFNLENBQUE7SUFBQU4sY0FBQSxHQUFBSyxDQUFBO0lBQzVFOEUsT0FBTyxDQUFDRSxnQkFBZ0IsR0FBRzdCLHlCQUF5QixDQUFDMkIsT0FBTyxDQUFDRSxnQkFBZ0IsQ0FBQztFQUNoRixDQUFDO0VBQUE7RUFBQTtJQUFBckYsY0FBQSxHQUFBTSxDQUFBO0VBQUE7RUFBQU4sY0FBQSxHQUFBSyxDQUFBO0VBRUQsT0FBTzhFLE9BQU87QUFDaEI7QUFFQTs7Ozs7O0FBTUEsT0FBTSxTQUFVRyx5QkFBeUJBLENBQUM1RSxNQUE2QjtFQUFBO0VBQUFWLGNBQUEsR0FBQUksQ0FBQTtFQUFBSixjQUFBLEdBQUFLLENBQUE7RUFDckU7RUFBSTtFQUFBLENBQUFMLGNBQUEsR0FBQU0sQ0FBQSxZQUFDSSxNQUFNO0VBQUE7RUFBQSxDQUFBVixjQUFBLEdBQUFNLENBQUEsV0FBSSxDQUFDMEIsS0FBSyxDQUFDQyxPQUFPLENBQUN2QixNQUFNLENBQUM7RUFBQTtFQUFBLENBQUFWLGNBQUEsR0FBQU0sQ0FBQSxXQUFJSSxNQUFNLENBQUNJLE1BQU0sS0FBSyxDQUFDLEdBQUU7SUFBQTtJQUFBZCxjQUFBLEdBQUFNLENBQUE7SUFBQU4sY0FBQSxHQUFBSyxDQUFBO0lBQzVELE9BQU9LLE1BQU07RUFDZixDQUFDO0VBQUE7RUFBQTtJQUFBVixjQUFBLEdBQUFNLENBQUE7RUFBQTtFQUVELE1BQU1pRixlQUFlO0VBQUE7RUFBQSxDQUFBdkYsY0FBQSxHQUFBSyxDQUFBLFNBQTBCLEVBQUU7RUFBQztFQUFBTCxjQUFBLEdBQUFLLENBQUE7RUFFbEQsS0FBSyxJQUFJUSxDQUFDO0VBQUE7RUFBQSxDQUFBYixjQUFBLEdBQUFLLENBQUEsU0FBRyxDQUFDLEdBQUVRLENBQUMsR0FBR0gsTUFBTSxDQUFDSSxNQUFNLEVBQUVELENBQUMsRUFBRSxFQUFFO0lBQ3RDLE1BQU0yRSxZQUFZO0lBQUE7SUFBQSxDQUFBeEYsY0FBQSxHQUFBSyxDQUFBLFNBQUdLLE1BQU0sQ0FBQ0csQ0FBQyxDQUFDO0lBQzlCLE1BQU00RSxhQUFhO0lBQUE7SUFBQSxDQUFBekYsY0FBQSxHQUFBSyxDQUFBLFNBQUdRLENBQUMsR0FBRyxDQUFDO0lBQUE7SUFBQSxDQUFBYixjQUFBLEdBQUFNLENBQUEsV0FBR0ksTUFBTSxDQUFDRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQUE7SUFBQSxDQUFBYixjQUFBLEdBQUFNLENBQUEsV0FBRyxJQUFJO0lBRWxEO0lBQ0EsTUFBTW9GLFdBQVc7SUFBQTtJQUFBLENBQUExRixjQUFBLEdBQUFLLENBQUE7SUFBRztJQUFBLENBQUFMLGNBQUEsR0FBQU0sQ0FBQSxXQUFBa0YsWUFBWSxDQUFDL0UsVUFBVTtJQUN4QztJQUFBLENBQUFULGNBQUEsR0FBQU0sQ0FBQSxXQUFBa0YsWUFBWSxDQUFDL0UsVUFBVSxDQUFDLFlBQVksQ0FBQztJQUFBO0lBQUEsQ0FBQVQsY0FBQSxHQUFBTSxDQUFBLFdBQUlrRixZQUFZLENBQUMvRSxVQUFVLENBQUNlLElBQUksRUFBQztJQUV6RTtJQUFBO0lBQUF4QixjQUFBLEdBQUFLLENBQUE7SUFDQTtJQUFJO0lBQUEsQ0FBQUwsY0FBQSxHQUFBTSxDQUFBLFdBQUFvRixXQUFXO0lBQUE7SUFBQSxDQUFBMUYsY0FBQSxHQUFBTSxDQUFBLFdBQUltRixhQUFhLEdBQUU7TUFBQTtNQUFBekYsY0FBQSxHQUFBTSxDQUFBO01BQ2hDO01BQ0EsTUFBTXFGLFlBQVk7TUFBQTtNQUFBLENBQUEzRixjQUFBLEdBQUFLLENBQUE7TUFBRztNQUFBLENBQUFMLGNBQUEsR0FBQU0sQ0FBQSxXQUFBbUYsYUFBYSxDQUFDakYsSUFBSTtNQUFBO01BQUEsQ0FBQVIsY0FBQSxHQUFBTSxDQUFBLFdBQUksRUFBRTtNQUM3QyxNQUFNc0YsZUFBZTtNQUFBO01BQUEsQ0FBQTVGLGNBQUEsR0FBQUssQ0FBQSxTQUFHc0YsWUFBWSxDQUFDMUUsUUFBUSxDQUFDLElBQUksQ0FBQztNQUFDO01BQUFqQixjQUFBLEdBQUFLLENBQUE7TUFFcEQsSUFBSSxDQUFDdUYsZUFBZSxFQUFFO1FBQUE7UUFBQTVGLGNBQUEsR0FBQU0sQ0FBQTtRQUNwQjtRQUNBLE1BQU11RixvQkFBb0I7UUFBQTtRQUFBLENBQUE3RixjQUFBLEdBQUFLLENBQUEsU0FBRztVQUMzQixHQUFHb0YsYUFBYTtVQUNoQmpGLElBQUksRUFBRW1GLFlBQVksR0FBRyxJQUFJO1VBQ3pCbEYsVUFBVTtVQUFFO1VBQUEsQ0FBQVQsY0FBQSxHQUFBTSxDQUFBLFdBQUFtRixhQUFhLENBQUNoRixVQUFVO1VBQUE7VUFBQSxDQUFBVCxjQUFBLEdBQUFNLENBQUEsV0FBSSxFQUFFO1NBQzNDO1FBRUQ7UUFBQTtRQUFBTixjQUFBLEdBQUFLLENBQUE7UUFDQSxJQUFJa0YsZUFBZSxDQUFDekUsTUFBTSxHQUFHLENBQUMsRUFBRTtVQUFBO1VBQUFkLGNBQUEsR0FBQU0sQ0FBQTtVQUFBTixjQUFBLEdBQUFLLENBQUE7VUFDOUJrRixlQUFlLENBQUNBLGVBQWUsQ0FBQ3pFLE1BQU0sR0FBRyxDQUFDLENBQUMsR0FBRytFLG9CQUFvQjtRQUNwRSxDQUFDO1FBQUE7UUFBQTtVQUFBN0YsY0FBQSxHQUFBTSxDQUFBO1FBQUE7TUFDSCxDQUFDO01BQUE7TUFBQTtRQUFBTixjQUFBLEdBQUFNLENBQUE7TUFBQTtJQUNILENBQUM7SUFBQTtJQUFBO01BQUFOLGNBQUEsR0FBQU0sQ0FBQTtJQUFBO0lBQUFOLGNBQUEsR0FBQUssQ0FBQTtJQUVEa0YsZUFBZSxDQUFDcEUsSUFBSSxDQUFDO01BQ25CLEdBQUdxRSxZQUFZO01BQ2YvRSxVQUFVO01BQUU7TUFBQSxDQUFBVCxjQUFBLEdBQUFNLENBQUEsV0FBQWtGLFlBQVksQ0FBQy9FLFVBQVU7TUFBQTtNQUFBLENBQUFULGNBQUEsR0FBQU0sQ0FBQSxXQUFJLEVBQUU7S0FDMUMsQ0FBQztFQUNKO0VBQUM7RUFBQU4sY0FBQSxHQUFBSyxDQUFBO0VBRUQsT0FBT2tGLGVBQWU7QUFDeEI7QUFFQTs7Ozs7O0FBTUEsT0FBTSxTQUFVTyx3QkFBd0JBLENBQUNDLE9BQWU7RUFBQTtFQUFBL0YsY0FBQSxHQUFBSSxDQUFBO0VBQUFKLGNBQUEsR0FBQUssQ0FBQTtFQUd0RDtFQUFJO0VBQUEsQ0FBQUwsY0FBQSxHQUFBTSxDQUFBLFlBQUN5RixPQUFPO0VBQUE7RUFBQSxDQUFBL0YsY0FBQSxHQUFBTSxDQUFBLFdBQUksT0FBT3lGLE9BQU8sS0FBSyxRQUFRLEdBQUU7SUFBQTtJQUFBL0YsY0FBQSxHQUFBTSxDQUFBO0lBQUFOLGNBQUEsR0FBQUssQ0FBQTtJQUMzQyxPQUFPO01BQ0xFLE9BQU8sRUFBRSxDQUFDO1FBQUVDLElBQUksRUFBRSxFQUFFO1FBQUVDLFVBQVUsRUFBRTtNQUFFLENBQUU7S0FDdkM7RUFDSCxDQUFDO0VBQUE7RUFBQTtJQUFBVCxjQUFBLEdBQUFNLENBQUE7RUFBQTtFQUVEO0VBQ0EsTUFBTTBGLFdBQVc7RUFBQTtFQUFBLENBQUFoRyxjQUFBLEdBQUFLLENBQUE7RUFBRztFQUFBLENBQUFMLGNBQUEsR0FBQU0sQ0FBQSw0QkFBaUIsQ0FBQzJGLElBQUksQ0FBQ0YsT0FBTyxDQUFDO0VBQUE7RUFBQSxDQUFBL0YsY0FBQSxHQUFBTSxDQUFBLFdBQUl5RixPQUFPLENBQUNyQixRQUFRLENBQUMsS0FBSyxDQUFDO0VBQUM7RUFBQTFFLGNBQUEsR0FBQUssQ0FBQTtFQUUvRSxJQUFJMkYsV0FBVyxFQUFFO0lBQUE7SUFBQWhHLGNBQUEsR0FBQU0sQ0FBQTtJQUNmLE1BQU00RixTQUFTO0lBQUE7SUFBQSxDQUFBbEcsY0FBQSxHQUFBSyxDQUFBLFNBQUd1Qyw2QkFBNkIsQ0FBQ21ELE9BQU8sQ0FBQztJQUFDO0lBQUEvRixjQUFBLEdBQUFLLENBQUE7SUFDekQsT0FBTztNQUNMRSxPQUFPLEVBQUUrRSx5QkFBeUIsQ0FBQ1ksU0FBUyxDQUFDM0YsT0FBTztLQUNyRDtFQUNILENBQUMsTUFBTTtJQUFBO0lBQUFQLGNBQUEsR0FBQU0sQ0FBQTtJQUFBTixjQUFBLEdBQUFLLENBQUE7SUFDTDtJQUNBLE9BQU87TUFDTEUsT0FBTyxFQUFFLENBQUM7UUFBRUMsSUFBSSxFQUFFdUYsT0FBTztRQUFFdEYsVUFBVSxFQUFFO01BQUUsQ0FBRTtLQUM1QztFQUNIO0FBQ0Y7QUFFQTs7Ozs7O0FBTUEsT0FBTSxTQUFVMEYsb0JBQW9CQSxDQUFDekYsTUFBNkI7RUFBQTtFQUFBVixjQUFBLEdBQUFJLENBQUE7RUFBQUosY0FBQSxHQUFBSyxDQUFBO0VBQ2hFO0VBQUk7RUFBQSxDQUFBTCxjQUFBLEdBQUFNLENBQUEsWUFBQ0ksTUFBTTtFQUFBO0VBQUEsQ0FBQVYsY0FBQSxHQUFBTSxDQUFBLFdBQUksQ0FBQzBCLEtBQUssQ0FBQ0MsT0FBTyxDQUFDdkIsTUFBTSxDQUFDO0VBQUE7RUFBQSxDQUFBVixjQUFBLEdBQUFNLENBQUEsV0FBSUksTUFBTSxDQUFDSSxNQUFNLEtBQUssQ0FBQyxHQUFFO0lBQUE7SUFBQWQsY0FBQSxHQUFBTSxDQUFBO0lBQUFOLGNBQUEsR0FBQUssQ0FBQTtJQUM1RCxPQUFPSyxNQUFNO0VBQ2YsQ0FBQztFQUFBO0VBQUE7SUFBQVYsY0FBQSxHQUFBTSxDQUFBO0VBQUE7RUFFRDtFQUNBLE1BQU04RixnQkFBZ0I7RUFBQTtFQUFBLENBQUFwRyxjQUFBLEdBQUFLLENBQUEsU0FBR0ssTUFBTSxDQUFDd0IsR0FBRyxDQUFDQyxLQUFLLElBQUs7SUFBQTtJQUFBbkMsY0FBQSxHQUFBSSxDQUFBO0lBQUFKLGNBQUEsR0FBQUssQ0FBQTtJQUFBO01BQzVDLEdBQUc4QixLQUFLO01BQ1IxQixVQUFVO01BQUU7TUFBQSxDQUFBVCxjQUFBLEdBQUFNLENBQUEsV0FBQTZCLEtBQUssQ0FBQzFCLFVBQVU7TUFBQTtNQUFBLENBQUFULGNBQUEsR0FBQU0sQ0FBQSxXQUFJLEVBQUU7S0FDbkM7R0FBQyxDQUFDO0VBQUM7RUFBQU4sY0FBQSxHQUFBSyxDQUFBO0VBRUosT0FBT2lGLHlCQUF5QixDQUFDYyxnQkFBZ0IsQ0FBQztBQUNwRCIsImlnbm9yZUxpc3QiOltdfQ==