{"version":3,"names":["axios","EnhancedGoalsClient","constructor","client","cov_24xqkfl5t1","f","s","getAxiosInstance","getGoals","teamId","includeCompleted","b","queryParams","URLSearchParams","append","endpoint","toString","response","get","data","goals","error","console","handleError","createGoal","params","post","goal","updateGoal","goalId","put","deleteGoal","delete","getGoal","createGoalTarget","target","updateGoalTarget","targetId","deleteGoalTarget","getGoalSummary","totalGoals","length","completedGoals","inProgressGoals","overdueGoals","totalProgress","goalsByStatus","upcomingDeadlines","now","Date","dueDate","due_date","getTime","progress","percent_completed","status","getGoalStatus","daysRemaining","Math","ceil","push","goal_id","id","name","days_remaining","sort","a","total_goals","completed_goals","in_progress_goals","overdue_goals","average_progress","round","goals_by_status","upcoming_deadlines","calculateTargetProgress","startValue","currentValue","targetValue","min","max","isTargetCompleted","type","formatCurrencyValue","value","unit","formatter","Intl","NumberFormat","style","currency","toUpperCase","minimumFractionDigits","maximumFractionDigits","format","toLocaleString","formatNumberValue","formattedNumber","percentCompleted","due","timeElapsed","totalTime","expectedProgress","getDaysUntilDue","validateGoalDate","context","isAxiosError","message","Error","createEnhancedGoalsClient"],"sources":["/Users/peterkrzyzek/Development/clickup-mcp-server/src/clickup-client/goals-enhanced.ts"],"sourcesContent":["import { ClickUpClient } from './index.js';\nimport axios from 'axios';\n\n// ========================================\n// GOALS TYPE DEFINITIONS\n// ========================================\n\nexport interface GoalMember {\n  id: number;\n  username: string;\n  email: string;\n  color: string;\n  initials: string;\n  profilePicture: string;\n}\n\nexport interface CreateGoalParams {\n  name: string;\n  due_date: number; // Unix timestamp\n  description?: string;\n  multiple_owners: boolean;\n  owners: number[];\n  color?: string;\n}\n\nexport interface UpdateGoalParams {\n  name?: string;\n  due_date?: number;\n  description?: string;\n  rem_owners?: number[];\n  add_owners?: number[];\n  color?: string;\n}\n\nexport interface GoalTarget {\n  id: string;\n  goal_id: string;\n  name: string;\n  creator: number;\n  type: 'number' | 'currency' | 'boolean' | 'task' | 'list';\n  date_created: string;\n  start_value: number;\n  target_value: number;\n  current_value: number;\n  unit: string | null;\n  task_statuses: string[] | null;\n  list_ids: string[] | null;\n  completed: boolean;\n  percent_completed: number;\n}\n\nexport interface Goal {\n  id: string;\n  name: string;\n  team_id: string;\n  date_created: string;\n  start_date: string | null;\n  due_date: string;\n  description: string;\n  private: boolean;\n  archived: boolean;\n  creator: number;\n  color: string;\n  pretty_id: string;\n  multiple_owners: boolean;\n  folder_id: string | null;\n  members: GoalMember[];\n  owners: GoalMember[];\n  key_results: GoalTarget[];\n  percent_completed: number;\n  pretty_url: string;\n}\n\nexport interface CreateGoalTargetParams {\n  name: string;\n  type: 'number' | 'currency' | 'boolean' | 'task' | 'list';\n  target_value: number;\n  start_value?: number;\n  unit?: string;\n  task_statuses?: string[];\n  list_ids?: string[];\n}\n\nexport interface UpdateGoalTargetParams {\n  name?: string;\n  target_value?: number;\n  unit?: string;\n  task_statuses?: string[];\n  list_ids?: string[];\n}\n\nexport interface GoalSummary {\n  total_goals: number;\n  completed_goals: number;\n  in_progress_goals: number;\n  overdue_goals: number;\n  average_progress: number;\n  goals_by_status: Record<string, number>;\n  upcoming_deadlines: Array<{\n    goal_id: string;\n    name: string;\n    due_date: string;\n    days_remaining: number;\n  }>;\n}\n\n// ========================================\n// ENHANCED GOALS CLIENT\n// ========================================\n\nexport class EnhancedGoalsClient {\n  private client: ClickUpClient;\n\n  constructor(client: ClickUpClient) {\n    this.client = client;\n  }\n\n  private getAxiosInstance() {\n    return this.client.getAxiosInstance();\n  }\n\n  // ========================================\n  // GOAL MANAGEMENT\n  // ========================================\n\n  /**\n   * Get goals for a team\n   */\n  async getGoals(teamId: string, includeCompleted: boolean = false): Promise<Goal[]> {\n    try {\n      const queryParams = new URLSearchParams();\n      if (includeCompleted) queryParams.append('include_completed', 'true');\n\n      const endpoint = `/team/${teamId}/goal?${queryParams.toString()}`;\n      const response = await this.getAxiosInstance().get(endpoint);\n      \n      return response.data.goals || [];\n    } catch (error) {\n      console.error('Error getting goals:', error);\n      throw this.handleError(error, `Failed to get goals for team ${teamId}`);\n    }\n  }\n\n  /**\n   * Create a new goal\n   */\n  async createGoal(teamId: string, params: CreateGoalParams): Promise<Goal> {\n    try {\n      const endpoint = `/team/${teamId}/goal`;\n      const response = await this.getAxiosInstance().post(endpoint, params);\n      \n      return response.data.goal;\n    } catch (error) {\n      console.error('Error creating goal:', error);\n      throw this.handleError(error, `Failed to create goal for team ${teamId}`);\n    }\n  }\n\n  /**\n   * Update an existing goal\n   */\n  async updateGoal(goalId: string, params: UpdateGoalParams): Promise<Goal> {\n    try {\n      const endpoint = `/goal/${goalId}`;\n      const response = await this.getAxiosInstance().put(endpoint, params);\n      \n      return response.data.goal;\n    } catch (error) {\n      console.error('Error updating goal:', error);\n      throw this.handleError(error, `Failed to update goal ${goalId}`);\n    }\n  }\n\n  /**\n   * Delete a goal\n   */\n  async deleteGoal(goalId: string): Promise<void> {\n    try {\n      const endpoint = `/goal/${goalId}`;\n      await this.getAxiosInstance().delete(endpoint);\n    } catch (error) {\n      console.error('Error deleting goal:', error);\n      throw this.handleError(error, `Failed to delete goal ${goalId}`);\n    }\n  }\n\n  /**\n   * Get a specific goal by ID\n   */\n  async getGoal(goalId: string): Promise<Goal> {\n    try {\n      const endpoint = `/goal/${goalId}`;\n      const response = await this.getAxiosInstance().get(endpoint);\n      \n      return response.data.goal;\n    } catch (error) {\n      console.error('Error getting goal:', error);\n      throw this.handleError(error, `Failed to get goal ${goalId}`);\n    }\n  }\n\n  // ========================================\n  // GOAL TARGET MANAGEMENT\n  // ========================================\n\n  /**\n   * Create a goal target (key result)\n   */\n  async createGoalTarget(goalId: string, params: CreateGoalTargetParams): Promise<GoalTarget> {\n    try {\n      const endpoint = `/goal/${goalId}/target`;\n      const response = await this.getAxiosInstance().post(endpoint, params);\n      \n      return response.data.target;\n    } catch (error) {\n      console.error('Error creating goal target:', error);\n      throw this.handleError(error, `Failed to create target for goal ${goalId}`);\n    }\n  }\n\n  /**\n   * Update a goal target\n   */\n  async updateGoalTarget(goalId: string, targetId: string, params: UpdateGoalTargetParams): Promise<GoalTarget> {\n    try {\n      const endpoint = `/goal/${goalId}/target/${targetId}`;\n      const response = await this.getAxiosInstance().put(endpoint, params);\n      \n      return response.data.target;\n    } catch (error) {\n      console.error('Error updating goal target:', error);\n      throw this.handleError(error, `Failed to update target ${targetId} for goal ${goalId}`);\n    }\n  }\n\n  /**\n   * Delete a goal target\n   */\n  async deleteGoalTarget(goalId: string, targetId: string): Promise<void> {\n    try {\n      const endpoint = `/goal/${goalId}/target/${targetId}`;\n      await this.getAxiosInstance().delete(endpoint);\n    } catch (error) {\n      console.error('Error deleting goal target:', error);\n      throw this.handleError(error, `Failed to delete target ${targetId} for goal ${goalId}`);\n    }\n  }\n\n  // ========================================\n  // GOAL ANALYTICS & REPORTING\n  // ========================================\n\n  /**\n   * Get goal summary and analytics for a team\n   */\n  async getGoalSummary(teamId: string): Promise<GoalSummary> {\n    try {\n      const goals = await this.getGoals(teamId, true);\n      \n      let totalGoals = goals.length;\n      let completedGoals = 0;\n      let inProgressGoals = 0;\n      let overdueGoals = 0;\n      let totalProgress = 0;\n      const goalsByStatus: Record<string, number> = {};\n      const upcomingDeadlines: Array<{\n        goal_id: string;\n        name: string;\n        due_date: string;\n        days_remaining: number;\n      }> = [];\n\n      const now = Date.now();\n\n      for (const goal of goals) {\n        const dueDate = new Date(goal.due_date).getTime();\n        const progress = goal.percent_completed;\n        totalProgress += progress;\n\n        // Categorize goals\n        if (progress >= 100) {\n          completedGoals++;\n        } else if (now > dueDate) {\n          overdueGoals++;\n        } else {\n          inProgressGoals++;\n        }\n\n        // Get goal status\n        const status = this.getGoalStatus(progress, goal.due_date);\n        goalsByStatus[status] = (goalsByStatus[status] || 0) + 1;\n\n        // Check for upcoming deadlines (within 7 days)\n        const daysRemaining = Math.ceil((dueDate - now) / (1000 * 60 * 60 * 24));\n        if (daysRemaining > 0 && daysRemaining <= 7 && progress < 100) {\n          upcomingDeadlines.push({\n            goal_id: goal.id,\n            name: goal.name,\n            due_date: goal.due_date,\n            days_remaining: daysRemaining\n          });\n        }\n      }\n\n      // Sort upcoming deadlines by days remaining\n      upcomingDeadlines.sort((a, b) => a.days_remaining - b.days_remaining);\n\n      return {\n        total_goals: totalGoals,\n        completed_goals: completedGoals,\n        in_progress_goals: inProgressGoals,\n        overdue_goals: overdueGoals,\n        average_progress: totalGoals > 0 ? Math.round(totalProgress / totalGoals) : 0,\n        goals_by_status: goalsByStatus,\n        upcoming_deadlines: upcomingDeadlines\n      };\n    } catch (error) {\n      console.error('Error getting goal summary:', error);\n      throw this.handleError(error, `Failed to get goal summary for team ${teamId}`);\n    }\n  }\n\n  // ========================================\n  // UTILITY METHODS\n  // ========================================\n\n  /**\n   * Calculate progress percentage for a target\n   */\n  calculateTargetProgress(startValue: number, currentValue: number, targetValue: number): number {\n    if (targetValue === startValue) return 100; // Avoid division by zero\n    \n    const progress = ((currentValue - startValue) / (targetValue - startValue)) * 100;\n    return Math.min(Math.max(progress, 0), 100); // Clamp between 0 and 100\n  }\n\n  /**\n   * Check if a target is completed\n   */\n  isTargetCompleted(currentValue: number, targetValue: number, type: string): boolean {\n    switch (type) {\n      case 'boolean':\n        return currentValue >= 1;\n      case 'number':\n      case 'currency':\n      case 'task':\n      case 'list':\n        return currentValue >= targetValue;\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Format currency value with unit\n   */\n  formatCurrencyValue(value: number, unit: string = 'USD'): string {\n    const formatter = new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: unit.toUpperCase(),\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 2\n    });\n    \n    try {\n      return formatter.format(value);\n    } catch (error) {\n      // Fallback for invalid currency codes\n      return `${unit} ${value.toLocaleString()}`;\n    }\n  }\n\n  /**\n   * Format number value with unit\n   */\n  formatNumberValue(value: number, unit?: string): string {\n    const formattedNumber = value.toLocaleString();\n    return unit ? `${formattedNumber} ${unit}` : formattedNumber;\n  }\n\n  /**\n   * Get goal status based on progress and due date\n   */\n  getGoalStatus(percentCompleted: number, dueDate: string): 'completed' | 'on_track' | 'at_risk' | 'overdue' {\n    const now = Date.now();\n    const due = new Date(dueDate).getTime();\n    \n    if (percentCompleted >= 100) return 'completed';\n    if (now > due) return 'overdue';\n    \n    // Calculate if on track (simple heuristic: progress should match time elapsed)\n    const timeElapsed = now;\n    const totalTime = due;\n    const expectedProgress = (timeElapsed / totalTime) * 100;\n    \n    if (percentCompleted >= expectedProgress * 0.8) return 'on_track';\n    return 'at_risk';\n  }\n\n  /**\n   * Calculate days until due date\n   */\n  getDaysUntilDue(dueDate: string): number {\n    const now = Date.now();\n    const due = new Date(dueDate).getTime();\n    return Math.ceil((due - now) / (1000 * 60 * 60 * 24));\n  }\n\n  /**\n   * Validate goal date (must be in the future)\n   */\n  validateGoalDate(dueDate: number): boolean {\n    const now = Date.now();\n    return dueDate > now;\n  }\n\n  // ========================================\n  // ERROR HANDLING\n  // ========================================\n\n  private handleError(error: any, context: string): Error {\n    if (axios.isAxiosError(error)) {\n      const status = error.response?.status;\n      const message = error.response?.data?.message || error.message;\n      \n      switch (status) {\n        case 400:\n          return new Error(`${context}: Invalid request - ${message}`);\n        case 401:\n          return new Error(`${context}: Authentication failed - check API token`);\n        case 403:\n          return new Error(`${context}: Permission denied - insufficient access rights`);\n        case 404:\n          return new Error(`${context}: Resource not found - ${message}`);\n        case 429:\n          return new Error(`${context}: Rate limit exceeded - please retry later`);\n        case 500:\n          return new Error(`${context}: Server error - please try again`);\n        default:\n          return new Error(`${context}: ${message}`);\n      }\n    }\n    \n    return new Error(`${context}: ${error.message || 'Unknown error'}`);\n  }\n}\n\nexport const createEnhancedGoalsClient = (client: ClickUpClient): EnhancedGoalsClient => {\n  return new EnhancedGoalsClient(client);\n};\n"],"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","ignoreList":[]}