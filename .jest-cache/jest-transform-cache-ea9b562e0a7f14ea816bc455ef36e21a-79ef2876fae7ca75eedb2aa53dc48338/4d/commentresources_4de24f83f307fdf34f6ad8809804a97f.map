{"version":3,"names":["cov_10wl53tf1o","actualCoverage","ResourceTemplate","createClickUpClient","createCommentsClient","clickUpClient","s","commentsClient","setupCommentResources","server","f","resource","list","undefined","description","uri","params","task_id","console","log","comments","getTaskComments","contents","toString","mimeType","text","JSON","stringify","error","Error","message","view_id","getChatViewComments","list_id","getListComments","comment_id","getThreadedComments"],"sources":["/Users/peterkrzyzek/Development/clickup-mcp-server/src/resources/comment-resources.ts"],"sourcesContent":["import { McpServer, ResourceTemplate } from '@modelcontextprotocol/sdk/server/mcp.js';\nimport { createClickUpClient } from '../clickup-client/index.js';\nimport { createCommentsClient } from '../clickup-client/comments.js';\n\n// Create clients\nconst clickUpClient = createClickUpClient();\nconst commentsClient = createCommentsClient(clickUpClient);\n\nexport function setupCommentResources(server: McpServer): void {\n  // Register task comments resource\n  server.resource(\n    'task-comments',\n    new ResourceTemplate('clickup://task/{task_id}/comments', { list: undefined }),\n    {\n      description: 'Get comments for a ClickUp task, including text content, author information, and timestamps.'\n    },\n    async (uri, params) => {\n      try {\n        const task_id = params.task_id as string;\n        console.log('[CommentResources] Fetching comments for task:', task_id);\n        const comments = await commentsClient.getTaskComments(task_id);\n        console.log('[CommentResources] Got comments:', comments);\n        \n        return {\n          contents: [\n            {\n              uri: uri.toString(),\n              mimeType: 'application/json',\n              text: JSON.stringify(comments, null, 2),\n            },\n          ],\n        };\n      } catch (error: any) {\n        console.error('[CommentResources] Error fetching task comments:', error);\n        throw new Error(`Error fetching task comments: ${error.message}`);\n      }\n    }\n  );\n\n  // Register chat view comments resource\n  server.resource(\n    'chat-view-comments',\n    new ResourceTemplate('clickup://view/{view_id}/comments', { list: undefined }),\n    {\n      description: 'Get comments from a ClickUp chat view, with support for pagination and threaded discussions.'\n    },\n    async (uri, params) => {\n      try {\n        const view_id = params.view_id as string;\n        console.log('[CommentResources] Fetching comments for chat view:', view_id);\n        const comments = await commentsClient.getChatViewComments(view_id);\n        console.log('[CommentResources] Got comments:', comments);\n        \n        return {\n          contents: [\n            {\n              uri: uri.toString(),\n              mimeType: 'application/json',\n              text: JSON.stringify(comments, null, 2),\n            },\n          ],\n        };\n      } catch (error: any) {\n        console.error('[CommentResources] Error fetching chat view comments:', error);\n        throw new Error(`Error fetching chat view comments: ${error.message}`);\n      }\n    }\n  );\n\n  // Register list comments resource\n  server.resource(\n    'list-comments',\n    new ResourceTemplate('clickup://list/{list_id}/comments', { list: undefined }),\n    {\n      description: 'Get comments for a ClickUp list, including text content, author information, and timestamps.'\n    },\n    async (uri, params) => {\n      try {\n        const list_id = params.list_id as string;\n        console.log('[CommentResources] Fetching comments for list:', list_id);\n        const comments = await commentsClient.getListComments(list_id);\n        console.log('[CommentResources] Got comments:', comments);\n        \n        return {\n          contents: [\n            {\n              uri: uri.toString(),\n              mimeType: 'application/json',\n              text: JSON.stringify(comments, null, 2),\n            },\n          ],\n        };\n      } catch (error: any) {\n        console.error('[CommentResources] Error fetching list comments:', error);\n        throw new Error(`Error fetching list comments: ${error.message}`);\n      }\n    }\n  );\n\n  // Register threaded comments resource\n  server.resource(\n    'threaded-comments',\n    new ResourceTemplate('clickup://comment/{comment_id}/reply', { list: undefined }),\n    {\n      description: 'Get threaded replies to a specific comment, supporting nested discussions and pagination.'\n    },\n    async (uri, params) => {\n      try {\n        const comment_id = params.comment_id as string;\n        console.log('[CommentResources] Fetching threaded comments for comment:', comment_id);\n        const comments = await commentsClient.getThreadedComments(comment_id);\n        console.log('[CommentResources] Got comments:', comments);\n        \n        return {\n          contents: [\n            {\n              uri: uri.toString(),\n              mimeType: 'application/json',\n              text: JSON.stringify(comments, null, 2),\n            },\n          ],\n        };\n      } catch (error: any) {\n        console.error('[CommentResources] Error fetching threaded comments:', error);\n        throw new Error(`Error fetching threaded comments: ${error.message}`);\n      }\n    }\n  );\n\n  // Add some example static resources for discoverability\n  server.resource(\n    'example-task-comments',\n    'clickup://task/868czp2t3/comments',\n    {\n      description: 'An example task comments resource demonstrating the comment data format.'\n    },\n    async (uri) => {\n      try {\n        const task_id = '868czp2t3';\n        console.log('[CommentResources] Fetching comments for example task:', task_id);\n        const comments = await commentsClient.getTaskComments(task_id);\n        console.log('[CommentResources] Got comments:', comments);\n        \n        return {\n          contents: [\n            {\n              uri: uri.toString(),\n              mimeType: 'application/json',\n              text: JSON.stringify(comments, null, 2),\n            },\n          ],\n        };\n      } catch (error: any) {\n        console.error('[CommentResources] Error fetching example task comments:', error);\n        throw new Error(`Error fetching example task comments: ${error.message}`);\n      }\n    }\n  );\n\n  server.resource(\n    'example-list-comments',\n    'clickup://list/901109776097/comments',\n    {\n      description: 'An example list comments resource demonstrating the comment data format.'\n    },\n    async (uri) => {\n      try {\n        const list_id = '901109776097';\n        console.log('[CommentResources] Fetching comments for example list:', list_id);\n        const comments = await commentsClient.getListComments(list_id);\n        console.log('[CommentResources] Got comments:', comments);\n        \n        return {\n          contents: [\n            {\n              uri: uri.toString(),\n              mimeType: 'application/json',\n              text: JSON.stringify(comments, null, 2),\n            },\n          ],\n        };\n      } catch (error: any) {\n        console.error('[CommentResources] Error fetching example list comments:', error);\n        throw new Error(`Error fetching example list comments: ${error.message}`);\n      }\n    }\n  );\n}\n"],"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","ignoreList":[]}