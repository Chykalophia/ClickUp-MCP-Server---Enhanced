4b24b5ae88f89d1077798a4bd0803fef
/* istanbul ignore next */
function cov_fwbp9o49u() {
  var path = "/Users/peterkrzyzek/Development/clickup-mcp-server/src/resources/doc-resources.ts";
  var hash = "8658e5c73f2b6cc5635de47b98bf45ba82df460b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/peterkrzyzek/Development/clickup-mcp-server/src/resources/doc-resources.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 22
        },
        end: {
          line: 5,
          column: 43
        }
      },
      "1": {
        start: {
          line: 6,
          column: 19
        },
        end: {
          line: 6,
          column: 50
        }
      },
      "2": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 41,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 40,
          column: 9
        }
      },
      "4": {
        start: {
          line: 13,
          column: 33
        },
        end: {
          line: 13,
          column: 52
        }
      },
      "5": {
        start: {
          line: 14,
          column: 27
        },
        end: {
          line: 14,
          column: 40
        }
      },
      "6": {
        start: {
          line: 15,
          column: 12
        },
        end: {
          line: 15,
          column: 96
        }
      },
      "7": {
        start: {
          line: 17,
          column: 26
        },
        end: {
          line: 17,
          column: 76
        }
      },
      "8": {
        start: {
          line: 19,
          column: 34
        },
        end: {
          line: 19,
          column: 36
        }
      },
      "9": {
        start: {
          line: 20,
          column: 12
        },
        end: {
          line: 26,
          column: 13
        }
      },
      "10": {
        start: {
          line: 21,
          column: 16
        },
        end: {
          line: 25,
          column: 17
        }
      },
      "11": {
        start: {
          line: 22,
          column: 20
        },
        end: {
          line: 24,
          column: 21
        }
      },
      "12": {
        start: {
          line: 23,
          column: 24
        },
        end: {
          line: 23,
          column: 65
        }
      },
      "13": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 35,
          column: 14
        }
      },
      "14": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 38,
          column: 71
        }
      },
      "15": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 39,
          column: 68
        }
      },
      "16": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 75,
          column: 7
        }
      },
      "17": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 74,
          column: 9
        }
      },
      "18": {
        start: {
          line: 47,
          column: 33
        },
        end: {
          line: 47,
          column: 45
        }
      },
      "19": {
        start: {
          line: 48,
          column: 27
        },
        end: {
          line: 48,
          column: 40
        }
      },
      "20": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 49,
          column: 104
        }
      },
      "21": {
        start: {
          line: 51,
          column: 26
        },
        end: {
          line: 51,
          column: 76
        }
      },
      "22": {
        start: {
          line: 53,
          column: 34
        },
        end: {
          line: 53,
          column: 36
        }
      },
      "23": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 60,
          column: 13
        }
      },
      "24": {
        start: {
          line: 55,
          column: 16
        },
        end: {
          line: 59,
          column: 17
        }
      },
      "25": {
        start: {
          line: 56,
          column: 20
        },
        end: {
          line: 58,
          column: 21
        }
      },
      "26": {
        start: {
          line: 57,
          column: 24
        },
        end: {
          line: 57,
          column: 65
        }
      },
      "27": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 69,
          column: 14
        }
      },
      "28": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 79
        }
      },
      "29": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 76
        }
      }
    },
    fnMap: {
      "0": {
        name: "setupDocResources",
        decl: {
          start: {
            line: 7,
            column: 16
          },
          end: {
            line: 7,
            column: 33
          }
        },
        loc: {
          start: {
            line: 7,
            column: 42
          },
          end: {
            line: 76,
            column: 1
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 11,
            column: 7
          },
          end: {
            line: 11,
            column: 8
          }
        },
        loc: {
          start: {
            line: 11,
            column: 30
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 11
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 45,
            column: 7
          },
          end: {
            line: 45,
            column: 8
          }
        },
        loc: {
          start: {
            line: 45,
            column: 22
          },
          end: {
            line: 75,
            column: 5
          }
        },
        line: 45
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 20,
            column: 12
          },
          end: {
            line: 26,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 20,
            column: 12
          },
          end: {
            line: 26,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 20
      },
      "1": {
        loc: {
          start: {
            line: 22,
            column: 20
          },
          end: {
            line: 24,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 20
          },
          end: {
            line: 24,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "2": {
        loc: {
          start: {
            line: 32,
            column: 30
          },
          end: {
            line: 32,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 30
          },
          end: {
            line: 32,
            column: 45
          }
        }, {
          start: {
            line: 32,
            column: 49
          },
          end: {
            line: 32,
            column: 80
          }
        }],
        line: 32
      },
      "3": {
        loc: {
          start: {
            line: 54,
            column: 12
          },
          end: {
            line: 60,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 12
          },
          end: {
            line: 60,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "4": {
        loc: {
          start: {
            line: 56,
            column: 20
          },
          end: {
            line: 58,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 20
          },
          end: {
            line: 58,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "5": {
        loc: {
          start: {
            line: 66,
            column: 30
          },
          end: {
            line: 66,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 66,
            column: 30
          },
          end: {
            line: 66,
            column: 45
          }
        }, {
          start: {
            line: 66,
            column: 49
          },
          end: {
            line: 66,
            column: 80
          }
        }],
        line: 66
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/peterkrzyzek/Development/clickup-mcp-server/src/resources/doc-resources.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/peterkrzyzek/Development/clickup-mcp-server/src/resources/doc-resources.ts"],
      sourcesContent: ["import { McpServer, ResourceTemplate } from '@modelcontextprotocol/sdk/server/mcp.js';\nimport { createClickUpClient } from '../clickup-client/index.js';\nimport { createDocsClient } from '../clickup-client/docs.js';\n\n// Create clients\nconst clickUpClient = createClickUpClient();\nconst docsClient = createDocsClient(clickUpClient);\n\nexport function setupDocResources(server: McpServer): void {\n  // Register doc content resource\n  server.resource(\n    'doc-content',\n    new ResourceTemplate('clickup://workspace/{workspace_id}/doc/{doc_id}', { list: undefined }),\n    {\n      description: 'Get the content of a specific ClickUp doc, combining all pages into a single document.'\n    },\n    async (uri, params) => {\n      try {\n        const workspace_id = params.workspace_id as string;\n        const doc_id = params.doc_id as string;\n        \n        console.log('[DocResources] Getting doc:', doc_id, 'from workspace:', workspace_id);\n        \n        // Get the pages of the doc\n        const pages = await docsClient.getDocPages(workspace_id, doc_id);\n        \n        // Combine the content of all pages\n        let combinedContent = '';\n        if (Array.isArray(pages)) {\n          for (const page of pages) {\n            if (page.content) {\n              combinedContent += page.content + '\\n\\n';\n            }\n          }\n        }\n        \n        return {\n          contents: [\n            {\n              uri: uri.toString(),\n              mimeType: 'application/json',\n              text: combinedContent || 'No content found in this doc.',\n            },\n          ],\n        };\n      } catch (error: any) {\n        console.error('[DocResources] Error fetching doc:', error);\n        throw new Error(`Error fetching doc: ${error.message}`);\n      }\n    }\n  );\n\n  // Add some example static resources for discoverability\n  server.resource(\n    'example-doc',\n    'clickup://workspace/9011839976/doc/8cjbgz8-911',\n    {\n      description: 'An example doc resource demonstrating the doc content format.'\n    },\n    async (uri) => {\n      try {\n        const workspace_id = '9011839976';\n        const doc_id = '8cjbgz8-911';\n        \n        console.log('[DocResources] Getting example doc:', doc_id, 'from workspace:', workspace_id);\n        \n        // Get the pages of the doc\n        const pages = await docsClient.getDocPages(workspace_id, doc_id);\n        \n        // Combine the content of all pages\n        let combinedContent = '';\n        if (Array.isArray(pages)) {\n          for (const page of pages) {\n            if (page.content) {\n              combinedContent += page.content + '\\n\\n';\n            }\n          }\n        }\n        \n        return {\n          contents: [\n            {\n              uri: uri.toString(),\n              mimeType: 'application/json',\n              text: combinedContent || 'No content found in this doc.',\n            },\n          ],\n        };\n      } catch (error: any) {\n        console.error('[DocResources] Error fetching example doc:', error);\n        throw new Error(`Error fetching example doc: ${error.message}`);\n      }\n    }\n  );\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8658e5c73f2b6cc5635de47b98bf45ba82df460b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_fwbp9o49u = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_fwbp9o49u();
import { ResourceTemplate } from '@modelcontextprotocol/sdk/server/mcp.js';
import { createClickUpClient } from '../clickup-client/index.js';
import { createDocsClient } from '../clickup-client/docs.js';
// Create clients
const clickUpClient =
/* istanbul ignore next */
(cov_fwbp9o49u().s[0]++, createClickUpClient());
const docsClient =
/* istanbul ignore next */
(cov_fwbp9o49u().s[1]++, createDocsClient(clickUpClient));
export function setupDocResources(server) {
  /* istanbul ignore next */
  cov_fwbp9o49u().f[0]++;
  cov_fwbp9o49u().s[2]++;
  // Register doc content resource
  server.resource('doc-content', new ResourceTemplate('clickup://workspace/{workspace_id}/doc/{doc_id}', {
    list: undefined
  }), {
    description: 'Get the content of a specific ClickUp doc, combining all pages into a single document.'
  }, async (uri, params) => {
    /* istanbul ignore next */
    cov_fwbp9o49u().f[1]++;
    cov_fwbp9o49u().s[3]++;
    try {
      const workspace_id =
      /* istanbul ignore next */
      (cov_fwbp9o49u().s[4]++, params.workspace_id);
      const doc_id =
      /* istanbul ignore next */
      (cov_fwbp9o49u().s[5]++, params.doc_id);
      /* istanbul ignore next */
      cov_fwbp9o49u().s[6]++;
      console.log('[DocResources] Getting doc:', doc_id, 'from workspace:', workspace_id);
      // Get the pages of the doc
      const pages =
      /* istanbul ignore next */
      (cov_fwbp9o49u().s[7]++, await docsClient.getDocPages(workspace_id, doc_id));
      // Combine the content of all pages
      let combinedContent =
      /* istanbul ignore next */
      (cov_fwbp9o49u().s[8]++, '');
      /* istanbul ignore next */
      cov_fwbp9o49u().s[9]++;
      if (Array.isArray(pages)) {
        /* istanbul ignore next */
        cov_fwbp9o49u().b[0][0]++;
        cov_fwbp9o49u().s[10]++;
        for (const page of pages) {
          /* istanbul ignore next */
          cov_fwbp9o49u().s[11]++;
          if (page.content) {
            /* istanbul ignore next */
            cov_fwbp9o49u().b[1][0]++;
            cov_fwbp9o49u().s[12]++;
            combinedContent += page.content + '\n\n';
          } else
          /* istanbul ignore next */
          {
            cov_fwbp9o49u().b[1][1]++;
          }
        }
      } else
      /* istanbul ignore next */
      {
        cov_fwbp9o49u().b[0][1]++;
      }
      cov_fwbp9o49u().s[13]++;
      return {
        contents: [{
          uri: uri.toString(),
          mimeType: 'application/json',
          text:
          /* istanbul ignore next */
          (cov_fwbp9o49u().b[2][0]++, combinedContent) ||
          /* istanbul ignore next */
          (cov_fwbp9o49u().b[2][1]++, 'No content found in this doc.')
        }]
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_fwbp9o49u().s[14]++;
      console.error('[DocResources] Error fetching doc:', error);
      /* istanbul ignore next */
      cov_fwbp9o49u().s[15]++;
      throw new Error(`Error fetching doc: ${error.message}`);
    }
  });
  // Add some example static resources for discoverability
  /* istanbul ignore next */
  cov_fwbp9o49u().s[16]++;
  server.resource('example-doc', 'clickup://workspace/9011839976/doc/8cjbgz8-911', {
    description: 'An example doc resource demonstrating the doc content format.'
  }, async uri => {
    /* istanbul ignore next */
    cov_fwbp9o49u().f[2]++;
    cov_fwbp9o49u().s[17]++;
    try {
      const workspace_id =
      /* istanbul ignore next */
      (cov_fwbp9o49u().s[18]++, '9011839976');
      const doc_id =
      /* istanbul ignore next */
      (cov_fwbp9o49u().s[19]++, '8cjbgz8-911');
      /* istanbul ignore next */
      cov_fwbp9o49u().s[20]++;
      console.log('[DocResources] Getting example doc:', doc_id, 'from workspace:', workspace_id);
      // Get the pages of the doc
      const pages =
      /* istanbul ignore next */
      (cov_fwbp9o49u().s[21]++, await docsClient.getDocPages(workspace_id, doc_id));
      // Combine the content of all pages
      let combinedContent =
      /* istanbul ignore next */
      (cov_fwbp9o49u().s[22]++, '');
      /* istanbul ignore next */
      cov_fwbp9o49u().s[23]++;
      if (Array.isArray(pages)) {
        /* istanbul ignore next */
        cov_fwbp9o49u().b[3][0]++;
        cov_fwbp9o49u().s[24]++;
        for (const page of pages) {
          /* istanbul ignore next */
          cov_fwbp9o49u().s[25]++;
          if (page.content) {
            /* istanbul ignore next */
            cov_fwbp9o49u().b[4][0]++;
            cov_fwbp9o49u().s[26]++;
            combinedContent += page.content + '\n\n';
          } else
          /* istanbul ignore next */
          {
            cov_fwbp9o49u().b[4][1]++;
          }
        }
      } else
      /* istanbul ignore next */
      {
        cov_fwbp9o49u().b[3][1]++;
      }
      cov_fwbp9o49u().s[27]++;
      return {
        contents: [{
          uri: uri.toString(),
          mimeType: 'application/json',
          text:
          /* istanbul ignore next */
          (cov_fwbp9o49u().b[5][0]++, combinedContent) ||
          /* istanbul ignore next */
          (cov_fwbp9o49u().b[5][1]++, 'No content found in this doc.')
        }]
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_fwbp9o49u().s[28]++;
      console.error('[DocResources] Error fetching example doc:', error);
      /* istanbul ignore next */
      cov_fwbp9o49u().s[29]++;
      throw new Error(`Error fetching example doc: ${error.message}`);
    }
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,