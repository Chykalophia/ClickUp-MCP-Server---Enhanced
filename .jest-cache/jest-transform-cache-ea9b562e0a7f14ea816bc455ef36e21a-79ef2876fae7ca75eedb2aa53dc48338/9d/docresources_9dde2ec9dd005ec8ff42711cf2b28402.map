{"version":3,"names":["cov_fwbp9o49u","actualCoverage","ResourceTemplate","createClickUpClient","createDocsClient","clickUpClient","s","docsClient","setupDocResources","server","f","resource","list","undefined","description","uri","params","workspace_id","doc_id","console","log","pages","getDocPages","combinedContent","Array","isArray","b","page","content","contents","toString","mimeType","text","error","Error","message"],"sources":["/Users/peterkrzyzek/Development/clickup-mcp-server/src/resources/doc-resources.ts"],"sourcesContent":["import { McpServer, ResourceTemplate } from '@modelcontextprotocol/sdk/server/mcp.js';\nimport { createClickUpClient } from '../clickup-client/index.js';\nimport { createDocsClient } from '../clickup-client/docs.js';\n\n// Create clients\nconst clickUpClient = createClickUpClient();\nconst docsClient = createDocsClient(clickUpClient);\n\nexport function setupDocResources(server: McpServer): void {\n  // Register doc content resource\n  server.resource(\n    'doc-content',\n    new ResourceTemplate('clickup://workspace/{workspace_id}/doc/{doc_id}', { list: undefined }),\n    {\n      description: 'Get the content of a specific ClickUp doc, combining all pages into a single document.'\n    },\n    async (uri, params) => {\n      try {\n        const workspace_id = params.workspace_id as string;\n        const doc_id = params.doc_id as string;\n        \n        console.log('[DocResources] Getting doc:', doc_id, 'from workspace:', workspace_id);\n        \n        // Get the pages of the doc\n        const pages = await docsClient.getDocPages(workspace_id, doc_id);\n        \n        // Combine the content of all pages\n        let combinedContent = '';\n        if (Array.isArray(pages)) {\n          for (const page of pages) {\n            if (page.content) {\n              combinedContent += page.content + '\\n\\n';\n            }\n          }\n        }\n        \n        return {\n          contents: [\n            {\n              uri: uri.toString(),\n              mimeType: 'application/json',\n              text: combinedContent || 'No content found in this doc.',\n            },\n          ],\n        };\n      } catch (error: any) {\n        console.error('[DocResources] Error fetching doc:', error);\n        throw new Error(`Error fetching doc: ${error.message}`);\n      }\n    }\n  );\n\n  // Add some example static resources for discoverability\n  server.resource(\n    'example-doc',\n    'clickup://workspace/9011839976/doc/8cjbgz8-911',\n    {\n      description: 'An example doc resource demonstrating the doc content format.'\n    },\n    async (uri) => {\n      try {\n        const workspace_id = '9011839976';\n        const doc_id = '8cjbgz8-911';\n        \n        console.log('[DocResources] Getting example doc:', doc_id, 'from workspace:', workspace_id);\n        \n        // Get the pages of the doc\n        const pages = await docsClient.getDocPages(workspace_id, doc_id);\n        \n        // Combine the content of all pages\n        let combinedContent = '';\n        if (Array.isArray(pages)) {\n          for (const page of pages) {\n            if (page.content) {\n              combinedContent += page.content + '\\n\\n';\n            }\n          }\n        }\n        \n        return {\n          contents: [\n            {\n              uri: uri.toString(),\n              mimeType: 'application/json',\n              text: combinedContent || 'No content found in this doc.',\n            },\n          ],\n        };\n      } catch (error: any) {\n        console.error('[DocResources] Error fetching example doc:', error);\n        throw new Error(`Error fetching example doc: ${error.message}`);\n      }\n    }\n  );\n}\n"],"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","ignoreList":[]}