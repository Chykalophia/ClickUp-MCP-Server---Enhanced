{"version":3,"names":["SpacesClient","constructor","client","cov_1ytta4puk7","f","s","getSpacesFromWorkspace","workspaceId","response","get","spaces","getSpace","spaceId","createSpacesClient"],"sources":["/Users/peterkrzyzek/Development/clickup-mcp-server/src/clickup-client/spaces.ts"],"sourcesContent":["import { ClickUpClient } from './index.js';\n\n// Space interface based on ClickUp API response\nexport interface Space {\n  id: string;\n  name: string;\n  private: boolean;\n  statuses: any[];\n  multiple_assignees: boolean;\n  features: {\n    due_dates: {\n      enabled: boolean;\n      start_date: boolean;\n      remap_due_dates: boolean;\n      remap_closed_due_date: boolean;\n    };\n    time_tracking: {\n      enabled: boolean;\n    };\n    tags: {\n      enabled: boolean;\n    };\n    time_estimates: {\n      enabled: boolean;\n    };\n    checklists: {\n      enabled: boolean;\n    };\n    custom_fields: {\n      enabled: boolean;\n    };\n    remap_dependencies: {\n      enabled: boolean;\n    };\n    dependency_warning: {\n      enabled: boolean;\n    };\n    portfolios: {\n      enabled: boolean;\n    };\n  };\n  archived: boolean;\n}\n\nexport class SpacesClient {\n  private client: ClickUpClient;\n\n  constructor(client: ClickUpClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get spaces from a specific workspace\n   * @param workspaceId The ID of the workspace to get spaces from\n   * @returns A list of spaces\n   */\n  async getSpacesFromWorkspace(workspaceId: string): Promise<Space[]> {\n    // Use the v2 API endpoint for spaces\n    const response = await this.client.get(`/team/${workspaceId}/space`);\n    return response.spaces;\n  }\n\n  /**\n   * Get a specific space by ID\n   * @param spaceId The ID of the space to get\n   * @returns The space details\n   */\n  async getSpace(spaceId: string): Promise<Space> {\n    const response = await this.client.get(`/space/${spaceId}`);\n    return response;\n  }\n}\n\nexport const createSpacesClient = (client: ClickUpClient): SpacesClient => {\n  return new SpacesClient(client);\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA,OAAM,MAAOA,YAAY;EAGvBC,YAAYC,MAAqB;IAAA;IAAAC,cAAA,GAAAC,CAAA;IAAAD,cAAA,GAAAE,CAAA;IAC/B,IAAI,CAACH,MAAM,GAAGA,MAAM;EACtB;EAEA;;;;;EAKA,MAAMI,sBAAsBA,CAACC,WAAmB;IAAA;IAAAJ,cAAA,GAAAC,CAAA;IAC9C;IACA,MAAMI,QAAQ;IAAA;IAAA,CAAAL,cAAA,GAAAE,CAAA,OAAG,MAAM,IAAI,CAACH,MAAM,CAACO,GAAG,CAAC,SAASF,WAAW,QAAQ,CAAC;IAAC;IAAAJ,cAAA,GAAAE,CAAA;IACrE,OAAOG,QAAQ,CAACE,MAAM;EACxB;EAEA;;;;;EAKA,MAAMC,QAAQA,CAACC,OAAe;IAAA;IAAAT,cAAA,GAAAC,CAAA;IAC5B,MAAMI,QAAQ;IAAA;IAAA,CAAAL,cAAA,GAAAE,CAAA,OAAG,MAAM,IAAI,CAACH,MAAM,CAACO,GAAG,CAAC,UAAUG,OAAO,EAAE,CAAC;IAAC;IAAAT,cAAA,GAAAE,CAAA;IAC5D,OAAOG,QAAQ;EACjB;;AACD;AAAAL,cAAA,GAAAE,CAAA;AAED,OAAO,MAAMQ,kBAAkB,GAAIX,MAAqB,IAAkB;EAAA;EAAAC,cAAA,GAAAC,CAAA;EAAAD,cAAA,GAAAE,CAAA;EACxE,OAAO,IAAIL,YAAY,CAACE,MAAM,CAAC;AACjC,CAAC","ignoreList":[]}