97da0543839d9d866d0ebeff60587edb
/* istanbul ignore next */
function cov_2bfpb356b6() {
  var path = "/Users/peterkrzyzek/Development/clickup-mcp-server/src/clickup-client/attachments-enhanced.ts";
  var hash = "388cdac0cb1dd08b6ec6632e3592a482e92729a4";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/peterkrzyzek/Development/clickup-mcp-server/src/clickup-client/attachments-enhanced.ts",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 8
        },
        end: {
          line: 4,
          column: 28
        }
      },
      "1": {
        start: {
          line: 10,
          column: 25
        },
        end: {
          line: 10,
          column: 87
        }
      },
      "2": {
        start: {
          line: 11,
          column: 24
        },
        end: {
          line: 16,
          column: 9
        }
      },
      "3": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 22,
          column: 9
        }
      },
      "4": {
        start: {
          line: 18,
          column: 12
        },
        end: {
          line: 18,
          column: 50
        }
      },
      "5": {
        start: {
          line: 20,
          column: 13
        },
        end: {
          line: 22,
          column: 9
        }
      },
      "6": {
        start: {
          line: 21,
          column: 12
        },
        end: {
          line: 21,
          column: 48
        }
      },
      "7": {
        start: {
          line: 23,
          column: 25
        },
        end: {
          line: 23,
          column: 75
        }
      },
      "8": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 24
        }
      },
      "9": {
        start: {
          line: 30,
          column: 25
        },
        end: {
          line: 30,
          column: 85
        }
      },
      "10": {
        start: {
          line: 31,
          column: 23
        },
        end: {
          line: 31,
          column: 44
        }
      },
      "11": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 33,
          column: 47
        }
      },
      "12": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 33,
          column: 47
        }
      },
      "13": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 35,
          column: 73
        }
      },
      "14": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 73
        }
      },
      "15": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 37,
          column: 57
        }
      },
      "16": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 37,
          column: 57
        }
      },
      "17": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 39,
          column: 68
        }
      },
      "18": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 39,
          column: 68
        }
      },
      "19": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 41,
          column: 64
        }
      },
      "20": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 41,
          column: 64
        }
      },
      "21": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 43,
          column: 60
        }
      },
      "22": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 43,
          column: 60
        }
      },
      "23": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 45,
          column: 62
        }
      },
      "24": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 45,
          column: 62
        }
      },
      "25": {
        start: {
          line: 46,
          column: 28
        },
        end: {
          line: 46,
          column: 45
        }
      },
      "26": {
        start: {
          line: 47,
          column: 29
        },
        end: {
          line: 47,
          column: 92
        }
      },
      "27": {
        start: {
          line: 48,
          column: 25
        },
        end: {
          line: 48,
          column: 53
        }
      },
      "28": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 24
        }
      },
      "29": {
        start: {
          line: 55,
          column: 25
        },
        end: {
          line: 55,
          column: 70
        }
      },
      "30": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 35
        }
      },
      "31": {
        start: {
          line: 62,
          column: 27
        },
        end: {
          line: 62,
          column: 29
        }
      },
      "32": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 64,
          column: 51
        }
      },
      "33": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 64,
          column: 51
        }
      },
      "34": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 66,
          column: 57
        }
      },
      "35": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 66,
          column: 57
        }
      },
      "36": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 68,
          column: 43
        }
      },
      "37": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 43
        }
      },
      "38": {
        start: {
          line: 69,
          column: 25
        },
        end: {
          line: 69,
          column: 91
        }
      },
      "39": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 70,
          column: 35
        }
      },
      "40": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 57
        }
      },
      "41": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 33
        }
      },
      "42": {
        start: {
          line: 83,
          column: 25
        },
        end: {
          line: 83,
          column: 79
        }
      },
      "43": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 24
        }
      },
      "44": {
        start: {
          line: 90,
          column: 25
        },
        end: {
          line: 90,
          column: 75
        }
      },
      "45": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 91,
          column: 24
        }
      },
      "46": {
        start: {
          line: 97,
          column: 24
        },
        end: {
          line: 101,
          column: 9
        }
      },
      "47": {
        start: {
          line: 102,
          column: 25
        },
        end: {
          line: 102,
          column: 96
        }
      },
      "48": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 103,
          column: 35
        }
      },
      "49": {
        start: {
          line: 109,
          column: 25
        },
        end: {
          line: 109,
          column: 71
        }
      },
      "50": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 110,
          column: 24
        }
      },
      "51": {
        start: {
          line: 116,
          column: 25
        },
        end: {
          line: 116,
          column: 80
        }
      },
      "52": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 117,
          column: 24
        }
      },
      "53": {
        start: {
          line: 123,
          column: 23
        },
        end: {
          line: 123,
          column: 44
        }
      },
      "54": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 125,
          column: 60
        }
      },
      "55": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 125,
          column: 60
        }
      },
      "56": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 127,
          column: 46
        }
      },
      "57": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 127,
          column: 46
        }
      },
      "58": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 129,
          column: 60
        }
      },
      "59": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 129,
          column: 60
        }
      },
      "60": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 131,
          column: 56
        }
      },
      "61": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 131,
          column: 56
        }
      },
      "62": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 133,
          column: 67
        }
      },
      "63": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 133,
          column: 67
        }
      },
      "64": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 135,
          column: 63
        }
      },
      "65": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 135,
          column: 63
        }
      },
      "66": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 137,
          column: 65
        }
      },
      "67": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 137,
          column: 65
        }
      },
      "68": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 139,
          column: 65
        }
      },
      "69": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 139,
          column: 65
        }
      },
      "70": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 141,
          column: 71
        }
      },
      "71": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 141,
          column: 71
        }
      },
      "72": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 143,
          column: 59
        }
      },
      "73": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 143,
          column: 59
        }
      },
      "74": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 145,
          column: 61
        }
      },
      "75": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 145,
          column: 61
        }
      },
      "76": {
        start: {
          line: 146,
          column: 28
        },
        end: {
          line: 146,
          column: 45
        }
      },
      "77": {
        start: {
          line: 147,
          column: 25
        },
        end: {
          line: 147,
          column: 104
        }
      },
      "78": {
        start: {
          line: 148,
          column: 25
        },
        end: {
          line: 148,
          column: 49
        }
      },
      "79": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 149,
          column: 24
        }
      },
      "80": {
        start: {
          line: 155,
          column: 23
        },
        end: {
          line: 155,
          column: 44
        }
      },
      "81": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 157,
          column: 61
        }
      },
      "82": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 157,
          column: 61
        }
      },
      "83": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 159,
          column: 63
        }
      },
      "84": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 159,
          column: 63
        }
      },
      "85": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 161,
          column: 65
        }
      },
      "86": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 161,
          column: 65
        }
      },
      "87": {
        start: {
          line: 162,
          column: 28
        },
        end: {
          line: 162,
          column: 45
        }
      },
      "88": {
        start: {
          line: 163,
          column: 25
        },
        end: {
          line: 163,
          column: 103
        }
      },
      "89": {
        start: {
          line: 164,
          column: 25
        },
        end: {
          line: 164,
          column: 50
        }
      },
      "90": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 165,
          column: 24
        }
      },
      "91": {
        start: {
          line: 171,
          column: 24
        },
        end: {
          line: 174,
          column: 9
        }
      },
      "92": {
        start: {
          line: 175,
          column: 25
        },
        end: {
          line: 175,
          column: 85
        }
      },
      "93": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 176,
          column: 35
        }
      },
      "94": {
        start: {
          line: 182,
          column: 24
        },
        end: {
          line: 185,
          column: 9
        }
      },
      "95": {
        start: {
          line: 186,
          column: 25
        },
        end: {
          line: 186,
          column: 84
        }
      },
      "96": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 187,
          column: 35
        }
      },
      "97": {
        start: {
          line: 193,
          column: 25
        },
        end: {
          line: 193,
          column: 79
        }
      },
      "98": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 194,
          column: 24
        }
      },
      "99": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 209,
          column: 9
        }
      },
      "100": {
        start: {
          line: 200,
          column: 16
        },
        end: {
          line: 200,
          column: 43
        }
      },
      "101": {
        start: {
          line: 202,
          column: 16
        },
        end: {
          line: 202,
          column: 46
        }
      },
      "102": {
        start: {
          line: 204,
          column: 16
        },
        end: {
          line: 204,
          column: 42
        }
      },
      "103": {
        start: {
          line: 206,
          column: 16
        },
        end: {
          line: 206,
          column: 43
        }
      },
      "104": {
        start: {
          line: 208,
          column: 16
        },
        end: {
          line: 208,
          column: 70
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 5
          }
        },
        loc: {
          start: {
            line: 3,
            column: 26
          },
          end: {
            line: 5,
            column: 5
          }
        },
        line: 3
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 5
          }
        },
        loc: {
          start: {
            line: 9,
            column: 36
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 9
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        loc: {
          start: {
            line: 29,
            column: 33
          },
          end: {
            line: 50,
            column: 5
          }
        },
        line: 29
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        },
        loc: {
          start: {
            line: 54,
            column: 38
          },
          end: {
            line: 57,
            column: 5
          }
        },
        line: 54
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        },
        loc: {
          start: {
            line: 61,
            column: 44
          },
          end: {
            line: 71,
            column: 5
          }
        },
        line: 61
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 75,
            column: 4
          },
          end: {
            line: 75,
            column: 5
          }
        },
        loc: {
          start: {
            line: 75,
            column: 41
          },
          end: {
            line: 78,
            column: 5
          }
        },
        line: 75
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 82,
            column: 4
          },
          end: {
            line: 82,
            column: 5
          }
        },
        loc: {
          start: {
            line: 82,
            column: 43
          },
          end: {
            line: 85,
            column: 5
          }
        },
        line: 82
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 89,
            column: 4
          },
          end: {
            line: 89,
            column: 5
          }
        },
        loc: {
          start: {
            line: 89,
            column: 42
          },
          end: {
            line: 92,
            column: 5
          }
        },
        line: 89
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 96,
            column: 4
          },
          end: {
            line: 96,
            column: 5
          }
        },
        loc: {
          start: {
            line: 96,
            column: 43
          },
          end: {
            line: 104,
            column: 5
          }
        },
        line: 96
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 108,
            column: 4
          },
          end: {
            line: 108,
            column: 5
          }
        },
        loc: {
          start: {
            line: 108,
            column: 46
          },
          end: {
            line: 111,
            column: 5
          }
        },
        line: 108
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 115,
            column: 4
          },
          end: {
            line: 115,
            column: 5
          }
        },
        loc: {
          start: {
            line: 115,
            column: 42
          },
          end: {
            line: 118,
            column: 5
          }
        },
        line: 115
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 122,
            column: 4
          },
          end: {
            line: 122,
            column: 5
          }
        },
        loc: {
          start: {
            line: 122,
            column: 48
          },
          end: {
            line: 150,
            column: 5
          }
        },
        line: 122
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 154,
            column: 4
          },
          end: {
            line: 154,
            column: 5
          }
        },
        loc: {
          start: {
            line: 154,
            column: 61
          },
          end: {
            line: 166,
            column: 5
          }
        },
        line: 154
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 170,
            column: 4
          },
          end: {
            line: 170,
            column: 5
          }
        },
        loc: {
          start: {
            line: 170,
            column: 73
          },
          end: {
            line: 177,
            column: 5
          }
        },
        line: 170
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 181,
            column: 4
          },
          end: {
            line: 181,
            column: 5
          }
        },
        loc: {
          start: {
            line: 181,
            column: 73
          },
          end: {
            line: 188,
            column: 5
          }
        },
        line: 181
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 192,
            column: 4
          },
          end: {
            line: 192,
            column: 5
          }
        },
        loc: {
          start: {
            line: 192,
            column: 46
          },
          end: {
            line: 195,
            column: 5
          }
        },
        line: 192
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 197,
            column: 4
          },
          end: {
            line: 197,
            column: 5
          }
        },
        loc: {
          start: {
            line: 197,
            column: 44
          },
          end: {
            line: 210,
            column: 5
          }
        },
        line: 197
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 22,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 22,
            column: 9
          }
        }, {
          start: {
            line: 20,
            column: 13
          },
          end: {
            line: 22,
            column: 9
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 20,
            column: 13
          },
          end: {
            line: 22,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 20,
            column: 13
          },
          end: {
            line: 22,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 20
      },
      "2": {
        loc: {
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 33,
            column: 47
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 33,
            column: 47
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "3": {
        loc: {
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 35,
            column: 73
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 35,
            column: 73
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "4": {
        loc: {
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 37,
            column: 57
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 37,
            column: 57
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "5": {
        loc: {
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 39,
            column: 68
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 39,
            column: 68
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "6": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 41,
            column: 64
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 41,
            column: 64
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "7": {
        loc: {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 43,
            column: 60
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 43,
            column: 60
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "8": {
        loc: {
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 45,
            column: 62
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 45,
            column: 62
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "9": {
        loc: {
          start: {
            line: 47,
            column: 54
          },
          end: {
            line: 47,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 47,
            column: 68
          },
          end: {
            line: 47,
            column: 85
          }
        }, {
          start: {
            line: 47,
            column: 88
          },
          end: {
            line: 47,
            column: 90
          }
        }],
        line: 47
      },
      "10": {
        loc: {
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 64,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 64,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "11": {
        loc: {
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 66,
            column: 57
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 66,
            column: 57
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "12": {
        loc: {
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 68,
            column: 43
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 68,
            column: 43
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      },
      "13": {
        loc: {
          start: {
            line: 99,
            column: 24
          },
          end: {
            line: 99,
            column: 106
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 99,
            column: 45
          },
          end: {
            line: 99,
            column: 94
          }
        }, {
          start: {
            line: 99,
            column: 97
          },
          end: {
            line: 99,
            column: 106
          }
        }],
        line: 99
      },
      "14": {
        loc: {
          start: {
            line: 124,
            column: 8
          },
          end: {
            line: 125,
            column: 60
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 124,
            column: 8
          },
          end: {
            line: 125,
            column: 60
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 124
      },
      "15": {
        loc: {
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 127,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 127,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 126
      },
      "16": {
        loc: {
          start: {
            line: 128,
            column: 8
          },
          end: {
            line: 129,
            column: 60
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 128,
            column: 8
          },
          end: {
            line: 129,
            column: 60
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 128
      },
      "17": {
        loc: {
          start: {
            line: 130,
            column: 8
          },
          end: {
            line: 131,
            column: 56
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 130,
            column: 8
          },
          end: {
            line: 131,
            column: 56
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 130
      },
      "18": {
        loc: {
          start: {
            line: 132,
            column: 8
          },
          end: {
            line: 133,
            column: 67
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 132,
            column: 8
          },
          end: {
            line: 133,
            column: 67
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 132
      },
      "19": {
        loc: {
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 135,
            column: 63
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 135,
            column: 63
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 134
      },
      "20": {
        loc: {
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 137,
            column: 65
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 137,
            column: 65
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 136
      },
      "21": {
        loc: {
          start: {
            line: 138,
            column: 8
          },
          end: {
            line: 139,
            column: 65
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 138,
            column: 8
          },
          end: {
            line: 139,
            column: 65
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 138
      },
      "22": {
        loc: {
          start: {
            line: 140,
            column: 8
          },
          end: {
            line: 141,
            column: 71
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 140,
            column: 8
          },
          end: {
            line: 141,
            column: 71
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 140
      },
      "23": {
        loc: {
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 143,
            column: 59
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 143,
            column: 59
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "24": {
        loc: {
          start: {
            line: 144,
            column: 8
          },
          end: {
            line: 145,
            column: 61
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 144,
            column: 8
          },
          end: {
            line: 145,
            column: 61
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 144
      },
      "25": {
        loc: {
          start: {
            line: 147,
            column: 66
          },
          end: {
            line: 147,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 147,
            column: 80
          },
          end: {
            line: 147,
            column: 97
          }
        }, {
          start: {
            line: 147,
            column: 100
          },
          end: {
            line: 147,
            column: 102
          }
        }],
        line: 147
      },
      "26": {
        loc: {
          start: {
            line: 156,
            column: 8
          },
          end: {
            line: 157,
            column: 61
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 156,
            column: 8
          },
          end: {
            line: 157,
            column: 61
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 156
      },
      "27": {
        loc: {
          start: {
            line: 158,
            column: 8
          },
          end: {
            line: 159,
            column: 63
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 158,
            column: 8
          },
          end: {
            line: 159,
            column: 63
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 158
      },
      "28": {
        loc: {
          start: {
            line: 160,
            column: 8
          },
          end: {
            line: 161,
            column: 65
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 160,
            column: 8
          },
          end: {
            line: 161,
            column: 65
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 160
      },
      "29": {
        loc: {
          start: {
            line: 163,
            column: 65
          },
          end: {
            line: 163,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 163,
            column: 79
          },
          end: {
            line: 163,
            column: 96
          }
        }, {
          start: {
            line: 163,
            column: 99
          },
          end: {
            line: 163,
            column: 101
          }
        }],
        line: 163
      },
      "30": {
        loc: {
          start: {
            line: 198,
            column: 8
          },
          end: {
            line: 209,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 199,
            column: 12
          },
          end: {
            line: 200,
            column: 43
          }
        }, {
          start: {
            line: 201,
            column: 12
          },
          end: {
            line: 202,
            column: 46
          }
        }, {
          start: {
            line: 203,
            column: 12
          },
          end: {
            line: 204,
            column: 42
          }
        }, {
          start: {
            line: 205,
            column: 12
          },
          end: {
            line: 206,
            column: 43
          }
        }, {
          start: {
            line: 207,
            column: 12
          },
          end: {
            line: 208,
            column: 70
          }
        }],
        line: 198
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0, 0, 0, 0]
    },
    inputSourceMap: {
      file: "/Users/peterkrzyzek/Development/clickup-mcp-server/src/clickup-client/attachments-enhanced.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/peterkrzyzek/Development/clickup-mcp-server/src/clickup-client/attachments-enhanced.ts"],
      sourcesContent: ["import { ClickUpClient } from './index.js';\nimport type {\n  UploadAttachmentRequest,\n  UpdateAttachmentMetadataRequest,\n  GetAttachmentsFilter,\n  AttachmentSharingRequest,\n  BulkAttachmentOperation,\n  AttachmentResponse,\n  AttachmentListResponse,\n  AttachmentUploadResponse,\n  AttachmentStatsResponse\n} from '../schemas/attachments-schemas.js';\n\nexport class AttachmentsEnhancedClient extends ClickUpClient {\n  constructor(apiToken: string) {\n    super({ apiToken });\n  }\n\n  /**\n   * Upload a new attachment\n   */\n  async uploadAttachment(request: UploadAttachmentRequest): Promise<AttachmentUploadResponse> {\n    const endpoint = this.getParentEndpoint(request.parent_type, request.parent_id);\n    \n    const payload: any = {\n      filename: request.filename,\n      source: request.source,\n      description: request.description,\n      tags: request.tags\n    };\n\n    if (request.file_data) {\n      payload.file_data = request.file_data;\n    } else if (request.file_url) {\n      payload.file_url = request.file_url;\n    }\n\n    const response = await this.post<AttachmentUploadResponse>(`${endpoint}/attachment`, payload);\n    return response;\n  }\n\n  /**\n   * Get attachments for a parent object\n   */\n  async getAttachments(filter: GetAttachmentsFilter): Promise<AttachmentListResponse> {\n    const endpoint = this.getParentEndpoint(filter.parent_type, filter.parent_id);\n    \n    const params = new URLSearchParams();\n    if (filter.type) params.append('type', filter.type);\n    if (filter.filename_contains) params.append('filename_contains', filter.filename_contains);\n    if (filter.tags) params.append('tags', filter.tags.join(','));\n    if (filter.date_from) params.append('date_from', filter.date_from.toString());\n    if (filter.date_to) params.append('date_to', filter.date_to.toString());\n    if (filter.limit) params.append('limit', filter.limit.toString());\n    if (filter.offset) params.append('offset', filter.offset.toString());\n\n    const queryString = params.toString();\n    const fullEndpoint = `${endpoint}/attachment${queryString ? `?${queryString}` : ''}`;\n    \n    const response = await this.get<AttachmentListResponse>(fullEndpoint);\n    return response;\n  }\n\n  /**\n   * Get a specific attachment by ID\n   */\n  async getAttachment(attachmentId: string): Promise<AttachmentResponse> {\n    const response = await this.get<{ attachment: AttachmentResponse }>(`/attachment/${attachmentId}`);\n    return response.attachment;\n  }\n\n  /**\n   * Update attachment metadata\n   */\n  async updateAttachmentMetadata(request: UpdateAttachmentMetadataRequest): Promise<AttachmentResponse> {\n    const updateData: Record<string, any> = {};\n    \n    if (request.filename) updateData.filename = request.filename;\n    if (request.description !== undefined) updateData.description = request.description;\n    if (request.tags) updateData.tags = request.tags;\n\n    const response = await this.put<{ attachment: AttachmentResponse }>(\n      `/attachment/${request.attachment_id}`,\n      updateData\n    );\n    return response.attachment;\n  }\n\n  /**\n   * Delete an attachment\n   */\n  async deleteAttachment(attachmentId: string): Promise<{ success: boolean }> {\n    await this.delete(`/attachment/${attachmentId}`);\n    return { success: true };\n  }\n\n  /**\n   * Download an attachment\n   */\n  async downloadAttachment(attachmentId: string): Promise<{\n    filename: string;\n    mimetype: string;\n    size: number;\n    download_url: string;\n    expires_at: string;\n  }> {\n    const response = await this.get<{\n      filename: string;\n      mimetype: string;\n      size: number;\n      download_url: string;\n      expires_at: string;\n    }>(`/attachment/${attachmentId}/download`);\n    \n    return response;\n  }\n\n  /**\n   * Get attachment info without downloading\n   */\n  async getAttachmentInfo(attachmentId: string): Promise<{\n    attachment: AttachmentResponse;\n    download_info: {\n      can_download: boolean;\n      download_url?: string;\n      expires_at?: string;\n      requires_auth: boolean;\n    };\n    preview_info: {\n      can_preview: boolean;\n      preview_url?: string;\n      thumbnail_url?: string;\n      preview_type?: string;\n    };\n  }> {\n    const response = await this.get<{\n      attachment: AttachmentResponse;\n      download_info: {\n        can_download: boolean;\n        download_url?: string;\n        expires_at?: string;\n        requires_auth: boolean;\n      };\n      preview_info: {\n        can_preview: boolean;\n        preview_url?: string;\n        thumbnail_url?: string;\n        preview_type?: string;\n      };\n    }>(`/attachment/${attachmentId}/info`);\n    \n    return response;\n  }\n\n  /**\n   * Update attachment sharing settings\n   */\n  async updateAttachmentSharing(request: AttachmentSharingRequest): Promise<AttachmentResponse> {\n    const payload = {\n      access_level: request.access_level,\n      expires_at: request.expires_at ? new Date(request.expires_at * 1000).toISOString() : undefined,\n      password: request.password\n    };\n\n    const response = await this.put<{ attachment: AttachmentResponse }>(\n      `/attachment/${request.attachment_id}/sharing`,\n      payload\n    );\n    return response.attachment;\n  }\n\n  /**\n   * Perform bulk attachment operations\n   */\n  async bulkAttachmentOperations(operation: BulkAttachmentOperation): Promise<{\n    success: boolean;\n    results: Array<{\n      attachment_id: string;\n      success: boolean;\n      error?: string;\n    }>;\n  }> {\n    const response = await this.post<{\n      success: boolean;\n      results: Array<{\n        attachment_id: string;\n        success: boolean;\n        error?: string;\n      }>;\n    }>('/attachment/bulk', operation);\n    \n    return response;\n  }\n\n  /**\n   * Get attachment statistics for a workspace\n   */\n  async getAttachmentStats(workspaceId: string): Promise<AttachmentStatsResponse> {\n    const response = await this.get<AttachmentStatsResponse>(`/team/${workspaceId}/attachment/stats`);\n    return response;\n  }\n\n  /**\n   * Search attachments across workspace\n   */\n  async searchAttachments(workspaceId: string, query: {\n    search_term?: string;\n    type?: string;\n    parent_type?: string;\n    tags?: string[];\n    date_from?: number;\n    date_to?: number;\n    min_size?: number;\n    max_size?: number;\n    uploaded_by?: number;\n    limit?: number;\n    offset?: number;\n  }): Promise<AttachmentListResponse> {\n    const params = new URLSearchParams();\n    if (query.search_term) params.append('search_term', query.search_term);\n    if (query.type) params.append('type', query.type);\n    if (query.parent_type) params.append('parent_type', query.parent_type);\n    if (query.tags) params.append('tags', query.tags.join(','));\n    if (query.date_from) params.append('date_from', query.date_from.toString());\n    if (query.date_to) params.append('date_to', query.date_to.toString());\n    if (query.min_size) params.append('min_size', query.min_size.toString());\n    if (query.max_size) params.append('max_size', query.max_size.toString());\n    if (query.uploaded_by) params.append('uploaded_by', query.uploaded_by.toString());\n    if (query.limit) params.append('limit', query.limit.toString());\n    if (query.offset) params.append('offset', query.offset.toString());\n\n    const queryString = params.toString();\n    const endpoint = `/team/${workspaceId}/attachment/search${queryString ? `?${queryString}` : ''}`;\n    \n    const response = await this.get<AttachmentListResponse>(endpoint);\n    return response;\n  }\n\n  /**\n   * Generate attachment thumbnail\n   */\n  async generateAttachmentThumbnail(attachmentId: string, options?: {\n    width?: number;\n    height?: number;\n    quality?: number;\n  }): Promise<{\n    thumbnail_url: string;\n    expires_at: string;\n  }> {\n    const params = new URLSearchParams();\n    if (options?.width) params.append('width', options.width.toString());\n    if (options?.height) params.append('height', options.height.toString());\n    if (options?.quality) params.append('quality', options.quality.toString());\n\n    const queryString = params.toString();\n    const endpoint = `/attachment/${attachmentId}/thumbnail${queryString ? `?${queryString}` : ''}`;\n    \n    const response = await this.post<{\n      thumbnail_url: string;\n      expires_at: string;\n    }>(endpoint);\n    \n    return response;\n  }\n\n  /**\n   * Copy attachment to another parent\n   */\n  async copyAttachment(attachmentId: string, targetParentId: string, targetParentType: string): Promise<AttachmentResponse> {\n    const payload = {\n      target_parent_id: targetParentId,\n      target_parent_type: targetParentType\n    };\n\n    const response = await this.post<{ attachment: AttachmentResponse }>(\n      `/attachment/${attachmentId}/copy`,\n      payload\n    );\n    return response.attachment;\n  }\n\n  /**\n   * Move attachment to another parent\n   */\n  async moveAttachment(attachmentId: string, targetParentId: string, targetParentType: string): Promise<AttachmentResponse> {\n    const payload = {\n      target_parent_id: targetParentId,\n      target_parent_type: targetParentType\n    };\n\n    const response = await this.put<{ attachment: AttachmentResponse }>(\n      `/attachment/${attachmentId}/move`,\n      payload\n    );\n    return response.attachment;\n  }\n\n  /**\n   * Get attachment version history\n   */\n  async getAttachmentVersions(attachmentId: string): Promise<{\n    versions: Array<{\n      version_id: string;\n      version_number: number;\n      filename: string;\n      size: number;\n      date_created: string;\n      uploaded_by: {\n        id: number;\n        username: string;\n      };\n      is_current: boolean;\n      download_url?: string;\n    }>;\n  }> {\n    const response = await this.get<{\n      versions: Array<{\n        version_id: string;\n        version_number: number;\n        filename: string;\n        size: number;\n        date_created: string;\n        uploaded_by: {\n          id: number;\n          username: string;\n        };\n        is_current: boolean;\n        download_url?: string;\n      }>;\n    }>(`/attachment/${attachmentId}/versions`);\n    \n    return response;\n  }\n\n  // Helper methods\n\n  private getParentEndpoint(parentType: string, parentId: string): string {\n    switch (parentType) {\n      case 'task':\n        return `/task/${parentId}`;\n      case 'comment':\n        return `/comment/${parentId}`;\n      case 'doc':\n        return `/doc/${parentId}`;\n      case 'chat':\n        return `/chat/${parentId}`;\n      default:\n        throw new Error(`Invalid parent type: ${parentType}`);\n    }\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "388cdac0cb1dd08b6ec6632e3592a482e92729a4"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2bfpb356b6 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2bfpb356b6();
import { ClickUpClient } from './index.js';
export class AttachmentsEnhancedClient extends ClickUpClient {
  constructor(apiToken) {
    /* istanbul ignore next */
    cov_2bfpb356b6().f[0]++;
    cov_2bfpb356b6().s[0]++;
    super({
      apiToken
    });
  }
  /**
   * Upload a new attachment
   */
  async uploadAttachment(request) {
    /* istanbul ignore next */
    cov_2bfpb356b6().f[1]++;
    const endpoint =
    /* istanbul ignore next */
    (cov_2bfpb356b6().s[1]++, this.getParentEndpoint(request.parent_type, request.parent_id));
    const payload =
    /* istanbul ignore next */
    (cov_2bfpb356b6().s[2]++, {
      filename: request.filename,
      source: request.source,
      description: request.description,
      tags: request.tags
    });
    /* istanbul ignore next */
    cov_2bfpb356b6().s[3]++;
    if (request.file_data) {
      /* istanbul ignore next */
      cov_2bfpb356b6().b[0][0]++;
      cov_2bfpb356b6().s[4]++;
      payload.file_data = request.file_data;
    } else {
      /* istanbul ignore next */
      cov_2bfpb356b6().b[0][1]++;
      cov_2bfpb356b6().s[5]++;
      if (request.file_url) {
        /* istanbul ignore next */
        cov_2bfpb356b6().b[1][0]++;
        cov_2bfpb356b6().s[6]++;
        payload.file_url = request.file_url;
      } else
      /* istanbul ignore next */
      {
        cov_2bfpb356b6().b[1][1]++;
      }
    }
    const response =
    /* istanbul ignore next */
    (cov_2bfpb356b6().s[7]++, await this.post(`${endpoint}/attachment`, payload));
    /* istanbul ignore next */
    cov_2bfpb356b6().s[8]++;
    return response;
  }
  /**
   * Get attachments for a parent object
   */
  async getAttachments(filter) {
    /* istanbul ignore next */
    cov_2bfpb356b6().f[2]++;
    const endpoint =
    /* istanbul ignore next */
    (cov_2bfpb356b6().s[9]++, this.getParentEndpoint(filter.parent_type, filter.parent_id));
    const params =
    /* istanbul ignore next */
    (cov_2bfpb356b6().s[10]++, new URLSearchParams());
    /* istanbul ignore next */
    cov_2bfpb356b6().s[11]++;
    if (filter.type) {
      /* istanbul ignore next */
      cov_2bfpb356b6().b[2][0]++;
      cov_2bfpb356b6().s[12]++;
      params.append('type', filter.type);
    } else
    /* istanbul ignore next */
    {
      cov_2bfpb356b6().b[2][1]++;
    }
    cov_2bfpb356b6().s[13]++;
    if (filter.filename_contains) {
      /* istanbul ignore next */
      cov_2bfpb356b6().b[3][0]++;
      cov_2bfpb356b6().s[14]++;
      params.append('filename_contains', filter.filename_contains);
    } else
    /* istanbul ignore next */
    {
      cov_2bfpb356b6().b[3][1]++;
    }
    cov_2bfpb356b6().s[15]++;
    if (filter.tags) {
      /* istanbul ignore next */
      cov_2bfpb356b6().b[4][0]++;
      cov_2bfpb356b6().s[16]++;
      params.append('tags', filter.tags.join(','));
    } else
    /* istanbul ignore next */
    {
      cov_2bfpb356b6().b[4][1]++;
    }
    cov_2bfpb356b6().s[17]++;
    if (filter.date_from) {
      /* istanbul ignore next */
      cov_2bfpb356b6().b[5][0]++;
      cov_2bfpb356b6().s[18]++;
      params.append('date_from', filter.date_from.toString());
    } else
    /* istanbul ignore next */
    {
      cov_2bfpb356b6().b[5][1]++;
    }
    cov_2bfpb356b6().s[19]++;
    if (filter.date_to) {
      /* istanbul ignore next */
      cov_2bfpb356b6().b[6][0]++;
      cov_2bfpb356b6().s[20]++;
      params.append('date_to', filter.date_to.toString());
    } else
    /* istanbul ignore next */
    {
      cov_2bfpb356b6().b[6][1]++;
    }
    cov_2bfpb356b6().s[21]++;
    if (filter.limit) {
      /* istanbul ignore next */
      cov_2bfpb356b6().b[7][0]++;
      cov_2bfpb356b6().s[22]++;
      params.append('limit', filter.limit.toString());
    } else
    /* istanbul ignore next */
    {
      cov_2bfpb356b6().b[7][1]++;
    }
    cov_2bfpb356b6().s[23]++;
    if (filter.offset) {
      /* istanbul ignore next */
      cov_2bfpb356b6().b[8][0]++;
      cov_2bfpb356b6().s[24]++;
      params.append('offset', filter.offset.toString());
    } else
    /* istanbul ignore next */
    {
      cov_2bfpb356b6().b[8][1]++;
    }
    const queryString =
    /* istanbul ignore next */
    (cov_2bfpb356b6().s[25]++, params.toString());
    const fullEndpoint =
    /* istanbul ignore next */
    (cov_2bfpb356b6().s[26]++, `${endpoint}/attachment${queryString ?
    /* istanbul ignore next */
    (cov_2bfpb356b6().b[9][0]++, `?${queryString}`) :
    /* istanbul ignore next */
    (cov_2bfpb356b6().b[9][1]++, '')}`);
    const response =
    /* istanbul ignore next */
    (cov_2bfpb356b6().s[27]++, await this.get(fullEndpoint));
    /* istanbul ignore next */
    cov_2bfpb356b6().s[28]++;
    return response;
  }
  /**
   * Get a specific attachment by ID
   */
  async getAttachment(attachmentId) {
    /* istanbul ignore next */
    cov_2bfpb356b6().f[3]++;
    const response =
    /* istanbul ignore next */
    (cov_2bfpb356b6().s[29]++, await this.get(`/attachment/${attachmentId}`));
    /* istanbul ignore next */
    cov_2bfpb356b6().s[30]++;
    return response.attachment;
  }
  /**
   * Update attachment metadata
   */
  async updateAttachmentMetadata(request) {
    /* istanbul ignore next */
    cov_2bfpb356b6().f[4]++;
    const updateData =
    /* istanbul ignore next */
    (cov_2bfpb356b6().s[31]++, {});
    /* istanbul ignore next */
    cov_2bfpb356b6().s[32]++;
    if (request.filename) {
      /* istanbul ignore next */
      cov_2bfpb356b6().b[10][0]++;
      cov_2bfpb356b6().s[33]++;
      updateData.filename = request.filename;
    } else
    /* istanbul ignore next */
    {
      cov_2bfpb356b6().b[10][1]++;
    }
    cov_2bfpb356b6().s[34]++;
    if (request.description !== undefined) {
      /* istanbul ignore next */
      cov_2bfpb356b6().b[11][0]++;
      cov_2bfpb356b6().s[35]++;
      updateData.description = request.description;
    } else
    /* istanbul ignore next */
    {
      cov_2bfpb356b6().b[11][1]++;
    }
    cov_2bfpb356b6().s[36]++;
    if (request.tags) {
      /* istanbul ignore next */
      cov_2bfpb356b6().b[12][0]++;
      cov_2bfpb356b6().s[37]++;
      updateData.tags = request.tags;
    } else
    /* istanbul ignore next */
    {
      cov_2bfpb356b6().b[12][1]++;
    }
    const response =
    /* istanbul ignore next */
    (cov_2bfpb356b6().s[38]++, await this.put(`/attachment/${request.attachment_id}`, updateData));
    /* istanbul ignore next */
    cov_2bfpb356b6().s[39]++;
    return response.attachment;
  }
  /**
   * Delete an attachment
   */
  async deleteAttachment(attachmentId) {
    /* istanbul ignore next */
    cov_2bfpb356b6().f[5]++;
    cov_2bfpb356b6().s[40]++;
    await this.delete(`/attachment/${attachmentId}`);
    /* istanbul ignore next */
    cov_2bfpb356b6().s[41]++;
    return {
      success: true
    };
  }
  /**
   * Download an attachment
   */
  async downloadAttachment(attachmentId) {
    /* istanbul ignore next */
    cov_2bfpb356b6().f[6]++;
    const response =
    /* istanbul ignore next */
    (cov_2bfpb356b6().s[42]++, await this.get(`/attachment/${attachmentId}/download`));
    /* istanbul ignore next */
    cov_2bfpb356b6().s[43]++;
    return response;
  }
  /**
   * Get attachment info without downloading
   */
  async getAttachmentInfo(attachmentId) {
    /* istanbul ignore next */
    cov_2bfpb356b6().f[7]++;
    const response =
    /* istanbul ignore next */
    (cov_2bfpb356b6().s[44]++, await this.get(`/attachment/${attachmentId}/info`));
    /* istanbul ignore next */
    cov_2bfpb356b6().s[45]++;
    return response;
  }
  /**
   * Update attachment sharing settings
   */
  async updateAttachmentSharing(request) {
    /* istanbul ignore next */
    cov_2bfpb356b6().f[8]++;
    const payload =
    /* istanbul ignore next */
    (cov_2bfpb356b6().s[46]++, {
      access_level: request.access_level,
      expires_at: request.expires_at ?
      /* istanbul ignore next */
      (cov_2bfpb356b6().b[13][0]++, new Date(request.expires_at * 1000).toISOString()) :
      /* istanbul ignore next */
      (cov_2bfpb356b6().b[13][1]++, undefined),
      password: request.password
    });
    const response =
    /* istanbul ignore next */
    (cov_2bfpb356b6().s[47]++, await this.put(`/attachment/${request.attachment_id}/sharing`, payload));
    /* istanbul ignore next */
    cov_2bfpb356b6().s[48]++;
    return response.attachment;
  }
  /**
   * Perform bulk attachment operations
   */
  async bulkAttachmentOperations(operation) {
    /* istanbul ignore next */
    cov_2bfpb356b6().f[9]++;
    const response =
    /* istanbul ignore next */
    (cov_2bfpb356b6().s[49]++, await this.post('/attachment/bulk', operation));
    /* istanbul ignore next */
    cov_2bfpb356b6().s[50]++;
    return response;
  }
  /**
   * Get attachment statistics for a workspace
   */
  async getAttachmentStats(workspaceId) {
    /* istanbul ignore next */
    cov_2bfpb356b6().f[10]++;
    const response =
    /* istanbul ignore next */
    (cov_2bfpb356b6().s[51]++, await this.get(`/team/${workspaceId}/attachment/stats`));
    /* istanbul ignore next */
    cov_2bfpb356b6().s[52]++;
    return response;
  }
  /**
   * Search attachments across workspace
   */
  async searchAttachments(workspaceId, query) {
    /* istanbul ignore next */
    cov_2bfpb356b6().f[11]++;
    const params =
    /* istanbul ignore next */
    (cov_2bfpb356b6().s[53]++, new URLSearchParams());
    /* istanbul ignore next */
    cov_2bfpb356b6().s[54]++;
    if (query.search_term) {
      /* istanbul ignore next */
      cov_2bfpb356b6().b[14][0]++;
      cov_2bfpb356b6().s[55]++;
      params.append('search_term', query.search_term);
    } else
    /* istanbul ignore next */
    {
      cov_2bfpb356b6().b[14][1]++;
    }
    cov_2bfpb356b6().s[56]++;
    if (query.type) {
      /* istanbul ignore next */
      cov_2bfpb356b6().b[15][0]++;
      cov_2bfpb356b6().s[57]++;
      params.append('type', query.type);
    } else
    /* istanbul ignore next */
    {
      cov_2bfpb356b6().b[15][1]++;
    }
    cov_2bfpb356b6().s[58]++;
    if (query.parent_type) {
      /* istanbul ignore next */
      cov_2bfpb356b6().b[16][0]++;
      cov_2bfpb356b6().s[59]++;
      params.append('parent_type', query.parent_type);
    } else
    /* istanbul ignore next */
    {
      cov_2bfpb356b6().b[16][1]++;
    }
    cov_2bfpb356b6().s[60]++;
    if (query.tags) {
      /* istanbul ignore next */
      cov_2bfpb356b6().b[17][0]++;
      cov_2bfpb356b6().s[61]++;
      params.append('tags', query.tags.join(','));
    } else
    /* istanbul ignore next */
    {
      cov_2bfpb356b6().b[17][1]++;
    }
    cov_2bfpb356b6().s[62]++;
    if (query.date_from) {
      /* istanbul ignore next */
      cov_2bfpb356b6().b[18][0]++;
      cov_2bfpb356b6().s[63]++;
      params.append('date_from', query.date_from.toString());
    } else
    /* istanbul ignore next */
    {
      cov_2bfpb356b6().b[18][1]++;
    }
    cov_2bfpb356b6().s[64]++;
    if (query.date_to) {
      /* istanbul ignore next */
      cov_2bfpb356b6().b[19][0]++;
      cov_2bfpb356b6().s[65]++;
      params.append('date_to', query.date_to.toString());
    } else
    /* istanbul ignore next */
    {
      cov_2bfpb356b6().b[19][1]++;
    }
    cov_2bfpb356b6().s[66]++;
    if (query.min_size) {
      /* istanbul ignore next */
      cov_2bfpb356b6().b[20][0]++;
      cov_2bfpb356b6().s[67]++;
      params.append('min_size', query.min_size.toString());
    } else
    /* istanbul ignore next */
    {
      cov_2bfpb356b6().b[20][1]++;
    }
    cov_2bfpb356b6().s[68]++;
    if (query.max_size) {
      /* istanbul ignore next */
      cov_2bfpb356b6().b[21][0]++;
      cov_2bfpb356b6().s[69]++;
      params.append('max_size', query.max_size.toString());
    } else
    /* istanbul ignore next */
    {
      cov_2bfpb356b6().b[21][1]++;
    }
    cov_2bfpb356b6().s[70]++;
    if (query.uploaded_by) {
      /* istanbul ignore next */
      cov_2bfpb356b6().b[22][0]++;
      cov_2bfpb356b6().s[71]++;
      params.append('uploaded_by', query.uploaded_by.toString());
    } else
    /* istanbul ignore next */
    {
      cov_2bfpb356b6().b[22][1]++;
    }
    cov_2bfpb356b6().s[72]++;
    if (query.limit) {
      /* istanbul ignore next */
      cov_2bfpb356b6().b[23][0]++;
      cov_2bfpb356b6().s[73]++;
      params.append('limit', query.limit.toString());
    } else
    /* istanbul ignore next */
    {
      cov_2bfpb356b6().b[23][1]++;
    }
    cov_2bfpb356b6().s[74]++;
    if (query.offset) {
      /* istanbul ignore next */
      cov_2bfpb356b6().b[24][0]++;
      cov_2bfpb356b6().s[75]++;
      params.append('offset', query.offset.toString());
    } else
    /* istanbul ignore next */
    {
      cov_2bfpb356b6().b[24][1]++;
    }
    const queryString =
    /* istanbul ignore next */
    (cov_2bfpb356b6().s[76]++, params.toString());
    const endpoint =
    /* istanbul ignore next */
    (cov_2bfpb356b6().s[77]++, `/team/${workspaceId}/attachment/search${queryString ?
    /* istanbul ignore next */
    (cov_2bfpb356b6().b[25][0]++, `?${queryString}`) :
    /* istanbul ignore next */
    (cov_2bfpb356b6().b[25][1]++, '')}`);
    const response =
    /* istanbul ignore next */
    (cov_2bfpb356b6().s[78]++, await this.get(endpoint));
    /* istanbul ignore next */
    cov_2bfpb356b6().s[79]++;
    return response;
  }
  /**
   * Generate attachment thumbnail
   */
  async generateAttachmentThumbnail(attachmentId, options) {
    /* istanbul ignore next */
    cov_2bfpb356b6().f[12]++;
    const params =
    /* istanbul ignore next */
    (cov_2bfpb356b6().s[80]++, new URLSearchParams());
    /* istanbul ignore next */
    cov_2bfpb356b6().s[81]++;
    if (options?.width) {
      /* istanbul ignore next */
      cov_2bfpb356b6().b[26][0]++;
      cov_2bfpb356b6().s[82]++;
      params.append('width', options.width.toString());
    } else
    /* istanbul ignore next */
    {
      cov_2bfpb356b6().b[26][1]++;
    }
    cov_2bfpb356b6().s[83]++;
    if (options?.height) {
      /* istanbul ignore next */
      cov_2bfpb356b6().b[27][0]++;
      cov_2bfpb356b6().s[84]++;
      params.append('height', options.height.toString());
    } else
    /* istanbul ignore next */
    {
      cov_2bfpb356b6().b[27][1]++;
    }
    cov_2bfpb356b6().s[85]++;
    if (options?.quality) {
      /* istanbul ignore next */
      cov_2bfpb356b6().b[28][0]++;
      cov_2bfpb356b6().s[86]++;
      params.append('quality', options.quality.toString());
    } else
    /* istanbul ignore next */
    {
      cov_2bfpb356b6().b[28][1]++;
    }
    const queryString =
    /* istanbul ignore next */
    (cov_2bfpb356b6().s[87]++, params.toString());
    const endpoint =
    /* istanbul ignore next */
    (cov_2bfpb356b6().s[88]++, `/attachment/${attachmentId}/thumbnail${queryString ?
    /* istanbul ignore next */
    (cov_2bfpb356b6().b[29][0]++, `?${queryString}`) :
    /* istanbul ignore next */
    (cov_2bfpb356b6().b[29][1]++, '')}`);
    const response =
    /* istanbul ignore next */
    (cov_2bfpb356b6().s[89]++, await this.post(endpoint));
    /* istanbul ignore next */
    cov_2bfpb356b6().s[90]++;
    return response;
  }
  /**
   * Copy attachment to another parent
   */
  async copyAttachment(attachmentId, targetParentId, targetParentType) {
    /* istanbul ignore next */
    cov_2bfpb356b6().f[13]++;
    const payload =
    /* istanbul ignore next */
    (cov_2bfpb356b6().s[91]++, {
      target_parent_id: targetParentId,
      target_parent_type: targetParentType
    });
    const response =
    /* istanbul ignore next */
    (cov_2bfpb356b6().s[92]++, await this.post(`/attachment/${attachmentId}/copy`, payload));
    /* istanbul ignore next */
    cov_2bfpb356b6().s[93]++;
    return response.attachment;
  }
  /**
   * Move attachment to another parent
   */
  async moveAttachment(attachmentId, targetParentId, targetParentType) {
    /* istanbul ignore next */
    cov_2bfpb356b6().f[14]++;
    const payload =
    /* istanbul ignore next */
    (cov_2bfpb356b6().s[94]++, {
      target_parent_id: targetParentId,
      target_parent_type: targetParentType
    });
    const response =
    /* istanbul ignore next */
    (cov_2bfpb356b6().s[95]++, await this.put(`/attachment/${attachmentId}/move`, payload));
    /* istanbul ignore next */
    cov_2bfpb356b6().s[96]++;
    return response.attachment;
  }
  /**
   * Get attachment version history
   */
  async getAttachmentVersions(attachmentId) {
    /* istanbul ignore next */
    cov_2bfpb356b6().f[15]++;
    const response =
    /* istanbul ignore next */
    (cov_2bfpb356b6().s[97]++, await this.get(`/attachment/${attachmentId}/versions`));
    /* istanbul ignore next */
    cov_2bfpb356b6().s[98]++;
    return response;
  }
  // Helper methods
  getParentEndpoint(parentType, parentId) {
    /* istanbul ignore next */
    cov_2bfpb356b6().f[16]++;
    cov_2bfpb356b6().s[99]++;
    switch (parentType) {
      case 'task':
        /* istanbul ignore next */
        cov_2bfpb356b6().b[30][0]++;
        cov_2bfpb356b6().s[100]++;
        return `/task/${parentId}`;
      case 'comment':
        /* istanbul ignore next */
        cov_2bfpb356b6().b[30][1]++;
        cov_2bfpb356b6().s[101]++;
        return `/comment/${parentId}`;
      case 'doc':
        /* istanbul ignore next */
        cov_2bfpb356b6().b[30][2]++;
        cov_2bfpb356b6().s[102]++;
        return `/doc/${parentId}`;
      case 'chat':
        /* istanbul ignore next */
        cov_2bfpb356b6().b[30][3]++;
        cov_2bfpb356b6().s[103]++;
        return `/chat/${parentId}`;
      default:
        /* istanbul ignore next */
        cov_2bfpb356b6().b[30][4]++;
        cov_2bfpb356b6().s[104]++;
        throw new Error(`Invalid parent type: ${parentType}`);
    }
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,