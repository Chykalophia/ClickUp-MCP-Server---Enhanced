{"version":3,"names":["cov_ea10xlsym","actualCoverage","ResourceTemplate","createClickUpClient","createTasksClient","clickUpClient","s","tasksClient","setupTaskResources","server","f","resource","list","undefined","description","uri","params","task_id","console","log","task","getTask","contents","toString","mimeType","text","JSON","stringify","error","Error","message"],"sources":["/Users/peterkrzyzek/Development/clickup-mcp-server/src/resources/task-resources.ts"],"sourcesContent":["import { McpServer, ResourceTemplate } from '@modelcontextprotocol/sdk/server/mcp.js';\nimport { createClickUpClient } from '../clickup-client/index.js';\nimport { createTasksClient } from '../clickup-client/tasks.js';\n\n// Create clients\nconst clickUpClient = createClickUpClient();\nconst tasksClient = createTasksClient(clickUpClient);\n\nexport function setupTaskResources(server: McpServer): void {\n  // Register task details resource\n  server.resource(\n    'task-details',\n    new ResourceTemplate('clickup://task/{task_id}', { list: undefined }),\n    {\n      description: 'Get detailed information about a specific ClickUp task, including its name, description, assignees, status, and dates.'\n    },\n    async (uri, params) => {\n      try {\n        const task_id = params.task_id as string;\n        console.log('[TaskResources] Fetching task:', task_id);\n        const task = await tasksClient.getTask(task_id);\n        console.log('[TaskResources] Got task:', task);\n        \n        return {\n          contents: [\n            {\n              uri: uri.toString(),\n              mimeType: 'application/json',\n              text: JSON.stringify(task, null, 2),\n            },\n          ],\n        };\n      } catch (error: any) {\n        console.error('[TaskResources] Error fetching task:', error);\n        throw new Error(`Error fetching task: ${error.message}`);\n      }\n    }\n  );\n\n  // Add some example static resources for discoverability\n  server.resource(\n    'example-task',\n    'clickup://task/86rkjvttt',\n    {\n      description: 'An example task resource demonstrating the task details format.'\n    },\n    async (uri) => {\n      try {\n        const task_id = '86rkjvttt';\n        console.log('[TaskResources] Fetching example task:', task_id);\n        const task = await tasksClient.getTask(task_id);\n        console.log('[TaskResources] Got task:', task);\n        \n        return {\n          contents: [\n            {\n              uri: uri.toString(),\n              mimeType: 'application/json',\n              text: JSON.stringify(task, null, 2),\n            },\n          ],\n        };\n      } catch (error: any) {\n        console.error('[TaskResources] Error fetching example task:', error);\n        throw new Error(`Error fetching example task: ${error.message}`);\n      }\n    }\n  );\n}\n"],"mappings":"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","ignoreList":[]}