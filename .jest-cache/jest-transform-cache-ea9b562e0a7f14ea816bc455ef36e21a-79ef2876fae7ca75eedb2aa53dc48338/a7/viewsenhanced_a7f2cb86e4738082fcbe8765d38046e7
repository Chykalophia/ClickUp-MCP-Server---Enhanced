919fb9adb3f7cee5390b7203f3418dcb
/* istanbul ignore next */
function cov_29lb2k1o3o() {
  var path = "/Users/peterkrzyzek/Development/clickup-mcp-server/src/clickup-client/views-enhanced.ts";
  var hash = "24578c95e5927d55822e35c756996d92f6c4c052";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/peterkrzyzek/Development/clickup-mcp-server/src/clickup-client/views-enhanced.ts",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 8
        },
        end: {
          line: 4,
          column: 28
        }
      },
      "1": {
        start: {
          line: 10,
          column: 25
        },
        end: {
          line: 10,
          column: 87
        }
      },
      "2": {
        start: {
          line: 11,
          column: 24
        },
        end: {
          line: 26,
          column: 9
        }
      },
      "3": {
        start: {
          line: 27,
          column: 25
        },
        end: {
          line: 27,
          column: 69
        }
      },
      "4": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 29
        }
      },
      "5": {
        start: {
          line: 34,
          column: 25
        },
        end: {
          line: 34,
          column: 85
        }
      },
      "6": {
        start: {
          line: 35,
          column: 23
        },
        end: {
          line: 35,
          column: 44
        }
      },
      "7": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 37,
          column: 47
        }
      },
      "8": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 37,
          column: 47
        }
      },
      "9": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 39,
          column: 51
        }
      },
      "10": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 39,
          column: 51
        }
      },
      "11": {
        start: {
          line: 40,
          column: 28
        },
        end: {
          line: 40,
          column: 45
        }
      },
      "12": {
        start: {
          line: 41,
          column: 29
        },
        end: {
          line: 41,
          column: 86
        }
      },
      "13": {
        start: {
          line: 42,
          column: 25
        },
        end: {
          line: 42,
          column: 53
        }
      },
      "14": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 24
        }
      },
      "15": {
        start: {
          line: 49,
          column: 25
        },
        end: {
          line: 49,
          column: 58
        }
      },
      "16": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 29
        }
      },
      "17": {
        start: {
          line: 56,
          column: 27
        },
        end: {
          line: 56,
          column: 29
        }
      },
      "18": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 58,
          column: 43
        }
      },
      "19": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 58,
          column: 43
        }
      },
      "20": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 60,
          column: 63
        }
      },
      "21": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 60,
          column: 63
        }
      },
      "22": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 62,
          column: 72
        }
      },
      "23": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 72
        }
      },
      "24": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 64,
          column: 69
        }
      },
      "25": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 64,
          column: 69
        }
      },
      "26": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 66,
          column: 69
        }
      },
      "27": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 66,
          column: 69
        }
      },
      "28": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 68,
          column: 51
        }
      },
      "29": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 51
        }
      },
      "30": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 70,
          column: 57
        }
      },
      "31": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 70,
          column: 57
        }
      },
      "32": {
        start: {
          line: 71,
          column: 25
        },
        end: {
          line: 71,
          column: 79
        }
      },
      "33": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 29
        }
      },
      "34": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 45
        }
      },
      "35": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 33
        }
      },
      "36": {
        start: {
          line: 85,
          column: 24
        },
        end: {
          line: 87,
          column: 9
        }
      },
      "37": {
        start: {
          line: 88,
          column: 25
        },
        end: {
          line: 88,
          column: 76
        }
      },
      "38": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 29
        }
      },
      "39": {
        start: {
          line: 95,
          column: 24
        },
        end: {
          line: 97,
          column: 9
        }
      },
      "40": {
        start: {
          line: 98,
          column: 25
        },
        end: {
          line: 98,
          column: 76
        }
      },
      "41": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 99,
          column: 29
        }
      },
      "42": {
        start: {
          line: 105,
          column: 24
        },
        end: {
          line: 107,
          column: 9
        }
      },
      "43": {
        start: {
          line: 108,
          column: 25
        },
        end: {
          line: 108,
          column: 76
        }
      },
      "44": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 109,
          column: 29
        }
      },
      "45": {
        start: {
          line: 115,
          column: 24
        },
        end: {
          line: 117,
          column: 9
        }
      },
      "46": {
        start: {
          line: 118,
          column: 25
        },
        end: {
          line: 118,
          column: 76
        }
      },
      "47": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 119,
          column: 29
        }
      },
      "48": {
        start: {
          line: 125,
          column: 24
        },
        end: {
          line: 132,
          column: 9
        }
      },
      "49": {
        start: {
          line: 133,
          column: 25
        },
        end: {
          line: 133,
          column: 76
        }
      },
      "50": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 134,
          column: 29
        }
      },
      "51": {
        start: {
          line: 140,
          column: 23
        },
        end: {
          line: 140,
          column: 44
        }
      },
      "52": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 142,
          column: 51
        }
      },
      "53": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 142,
          column: 51
        }
      },
      "54": {
        start: {
          line: 143,
          column: 28
        },
        end: {
          line: 143,
          column: 45
        }
      },
      "55": {
        start: {
          line: 144,
          column: 25
        },
        end: {
          line: 144,
          column: 86
        }
      },
      "56": {
        start: {
          line: 145,
          column: 25
        },
        end: {
          line: 145,
          column: 49
        }
      },
      "57": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 146,
          column: 24
        }
      },
      "58": {
        start: {
          line: 152,
          column: 24
        },
        end: {
          line: 154,
          column: 9
        }
      },
      "59": {
        start: {
          line: 155,
          column: 25
        },
        end: {
          line: 155,
          column: 78
        }
      },
      "60": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 156,
          column: 29
        }
      },
      "61": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 169,
          column: 9
        }
      },
      "62": {
        start: {
          line: 162,
          column: 16
        },
        end: {
          line: 162,
          column: 44
        }
      },
      "63": {
        start: {
          line: 164,
          column: 16
        },
        end: {
          line: 164,
          column: 45
        }
      },
      "64": {
        start: {
          line: 166,
          column: 16
        },
        end: {
          line: 166,
          column: 43
        }
      },
      "65": {
        start: {
          line: 168,
          column: 16
        },
        end: {
          line: 168,
          column: 70
        }
      },
      "66": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 173,
          column: 22
        }
      },
      "67": {
        start: {
          line: 173,
          column: 12
        },
        end: {
          line: 173,
          column: 22
        }
      },
      "68": {
        start: {
          line: 174,
          column: 24
        },
        end: {
          line: 174,
          column: 35
        }
      },
      "69": {
        start: {
          line: 175,
          column: 8
        },
        end: {
          line: 179,
          column: 10
        }
      },
      "70": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 187,
          column: 10
        }
      },
      "71": {
        start: {
          line: 183,
          column: 41
        },
        end: {
          line: 186,
          column: 13
        }
      },
      "72": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 199,
          column: 10
        }
      },
      "73": {
        start: {
          line: 192,
          column: 43
        },
        end: {
          line: 196,
          column: 13
        }
      },
      "74": {
        start: {
          line: 205,
          column: 25
        },
        end: {
          line: 205,
          column: 69
        }
      },
      "75": {
        start: {
          line: 206,
          column: 25
        },
        end: {
          line: 206,
          column: 60
        }
      },
      "76": {
        start: {
          line: 207,
          column: 8
        },
        end: {
          line: 207,
          column: 24
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 5
          }
        },
        loc: {
          start: {
            line: 3,
            column: 26
          },
          end: {
            line: 5,
            column: 5
          }
        },
        line: 3
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 5
          }
        },
        loc: {
          start: {
            line: 9,
            column: 30
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 9
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        loc: {
          start: {
            line: 33,
            column: 27
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 33
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        },
        loc: {
          start: {
            line: 48,
            column: 26
          },
          end: {
            line: 51,
            column: 5
          }
        },
        line: 48
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 55,
            column: 5
          }
        },
        loc: {
          start: {
            line: 55,
            column: 30
          },
          end: {
            line: 73,
            column: 5
          }
        },
        line: 55
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 77,
            column: 5
          }
        },
        loc: {
          start: {
            line: 77,
            column: 29
          },
          end: {
            line: 80,
            column: 5
          }
        },
        line: 77
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 84,
            column: 4
          },
          end: {
            line: 84,
            column: 5
          }
        },
        loc: {
          start: {
            line: 84,
            column: 34
          },
          end: {
            line: 90,
            column: 5
          }
        },
        line: 84
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 94,
            column: 4
          },
          end: {
            line: 94,
            column: 5
          }
        },
        loc: {
          start: {
            line: 94,
            column: 35
          },
          end: {
            line: 100,
            column: 5
          }
        },
        line: 94
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 104,
            column: 4
          },
          end: {
            line: 104,
            column: 5
          }
        },
        loc: {
          start: {
            line: 104,
            column: 34
          },
          end: {
            line: 110,
            column: 5
          }
        },
        line: 104
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 114,
            column: 4
          },
          end: {
            line: 114,
            column: 5
          }
        },
        loc: {
          start: {
            line: 114,
            column: 38
          },
          end: {
            line: 120,
            column: 5
          }
        },
        line: 114
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 124,
            column: 4
          },
          end: {
            line: 124,
            column: 5
          }
        },
        loc: {
          start: {
            line: 124,
            column: 37
          },
          end: {
            line: 135,
            column: 5
          }
        },
        line: 124
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 139,
            column: 4
          },
          end: {
            line: 139,
            column: 5
          }
        },
        loc: {
          start: {
            line: 139,
            column: 37
          },
          end: {
            line: 147,
            column: 5
          }
        },
        line: 139
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 151,
            column: 4
          },
          end: {
            line: 151,
            column: 5
          }
        },
        loc: {
          start: {
            line: 151,
            column: 38
          },
          end: {
            line: 157,
            column: 5
          }
        },
        line: 151
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 159,
            column: 4
          },
          end: {
            line: 159,
            column: 5
          }
        },
        loc: {
          start: {
            line: 159,
            column: 44
          },
          end: {
            line: 170,
            column: 5
          }
        },
        line: 159
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 171,
            column: 4
          },
          end: {
            line: 171,
            column: 5
          }
        },
        loc: {
          start: {
            line: 171,
            column: 29
          },
          end: {
            line: 180,
            column: 5
          }
        },
        line: 171
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 181,
            column: 4
          },
          end: {
            line: 181,
            column: 5
          }
        },
        loc: {
          start: {
            line: 181,
            column: 27
          },
          end: {
            line: 188,
            column: 5
          }
        },
        line: 181
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 183,
            column: 32
          },
          end: {
            line: 183,
            column: 33
          }
        },
        loc: {
          start: {
            line: 183,
            column: 41
          },
          end: {
            line: 186,
            column: 13
          }
        },
        line: 183
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 189,
            column: 4
          },
          end: {
            line: 189,
            column: 5
          }
        },
        loc: {
          start: {
            line: 189,
            column: 27
          },
          end: {
            line: 200,
            column: 5
          }
        },
        line: 189
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 192,
            column: 32
          },
          end: {
            line: 192,
            column: 33
          }
        },
        loc: {
          start: {
            line: 192,
            column: 43
          },
          end: {
            line: 196,
            column: 13
          }
        },
        line: 192
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 204,
            column: 4
          },
          end: {
            line: 204,
            column: 5
          }
        },
        loc: {
          start: {
            line: 204,
            column: 46
          },
          end: {
            line: 208,
            column: 5
          }
        },
        line: 204
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 22
          },
          end: {
            line: 18,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 18,
            column: 41
          },
          end: {
            line: 18,
            column: 78
          }
        }, {
          start: {
            line: 18,
            column: 81
          },
          end: {
            line: 18,
            column: 90
          }
        }],
        line: 18
      },
      "1": {
        loc: {
          start: {
            line: 19,
            column: 21
          },
          end: {
            line: 19,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 19,
            column: 39
          },
          end: {
            line: 19,
            column: 74
          }
        }, {
          start: {
            line: 19,
            column: 77
          },
          end: {
            line: 19,
            column: 86
          }
        }],
        line: 19
      },
      "2": {
        loc: {
          start: {
            line: 20,
            column: 21
          },
          end: {
            line: 20,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 20,
            column: 39
          },
          end: {
            line: 20,
            column: 74
          }
        }, {
          start: {
            line: 20,
            column: 77
          },
          end: {
            line: 20,
            column: 86
          }
        }],
        line: 20
      },
      "3": {
        loc: {
          start: {
            line: 21,
            column: 22
          },
          end: {
            line: 21,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 22
          },
          end: {
            line: 21,
            column: 38
          }
        }, {
          start: {
            line: 21,
            column: 42
          },
          end: {
            line: 21,
            column: 44
          }
        }],
        line: 21
      },
      "4": {
        loc: {
          start: {
            line: 23,
            column: 24
          },
          end: {
            line: 23,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 24
          },
          end: {
            line: 23,
            column: 38
          }
        }, {
          start: {
            line: 23,
            column: 42
          },
          end: {
            line: 23,
            column: 51
          }
        }],
        line: 23
      },
      "5": {
        loc: {
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 37,
            column: 47
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 37,
            column: 47
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "6": {
        loc: {
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 39,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 39,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "7": {
        loc: {
          start: {
            line: 41,
            column: 48
          },
          end: {
            line: 41,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 41,
            column: 62
          },
          end: {
            line: 41,
            column: 79
          }
        }, {
          start: {
            line: 41,
            column: 82
          },
          end: {
            line: 41,
            column: 84
          }
        }],
        line: 41
      },
      "8": {
        loc: {
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 58,
            column: 43
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 58,
            column: 43
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "9": {
        loc: {
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 60,
            column: 63
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 60,
            column: 63
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "10": {
        loc: {
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 62,
            column: 72
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 62,
            column: 72
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "11": {
        loc: {
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 64,
            column: 69
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 64,
            column: 69
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "12": {
        loc: {
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 66,
            column: 69
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 66,
            column: 69
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "13": {
        loc: {
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 68,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 68,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      },
      "14": {
        loc: {
          start: {
            line: 69,
            column: 8
          },
          end: {
            line: 70,
            column: 57
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 8
          },
          end: {
            line: 70,
            column: 57
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 69
      },
      "15": {
        loc: {
          start: {
            line: 130,
            column: 25
          },
          end: {
            line: 130,
            column: 107
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 130,
            column: 46
          },
          end: {
            line: 130,
            column: 95
          }
        }, {
          start: {
            line: 130,
            column: 98
          },
          end: {
            line: 130,
            column: 107
          }
        }],
        line: 130
      },
      "16": {
        loc: {
          start: {
            line: 141,
            column: 8
          },
          end: {
            line: 142,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 141,
            column: 8
          },
          end: {
            line: 142,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 141
      },
      "17": {
        loc: {
          start: {
            line: 144,
            column: 48
          },
          end: {
            line: 144,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 144,
            column: 62
          },
          end: {
            line: 144,
            column: 79
          }
        }, {
          start: {
            line: 144,
            column: 82
          },
          end: {
            line: 144,
            column: 84
          }
        }],
        line: 144
      },
      "18": {
        loc: {
          start: {
            line: 160,
            column: 8
          },
          end: {
            line: 169,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 161,
            column: 12
          },
          end: {
            line: 162,
            column: 44
          }
        }, {
          start: {
            line: 163,
            column: 12
          },
          end: {
            line: 164,
            column: 45
          }
        }, {
          start: {
            line: 165,
            column: 12
          },
          end: {
            line: 166,
            column: 43
          }
        }, {
          start: {
            line: 167,
            column: 12
          },
          end: {
            line: 168,
            column: 70
          }
        }],
        line: 160
      },
      "19": {
        loc: {
          start: {
            line: 172,
            column: 8
          },
          end: {
            line: 173,
            column: 22
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 172,
            column: 8
          },
          end: {
            line: 173,
            column: 22
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 172
      },
      "20": {
        loc: {
          start: {
            line: 177,
            column: 17
          },
          end: {
            line: 177,
            column: 49
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 177,
            column: 43
          },
          end: {
            line: 177,
            column: 44
          }
        }, {
          start: {
            line: 177,
            column: 47
          },
          end: {
            line: 177,
            column: 49
          }
        }],
        line: 177
      },
      "21": {
        loc: {
          start: {
            line: 185,
            column: 21
          },
          end: {
            line: 185,
            column: 50
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 185,
            column: 44
          },
          end: {
            line: 185,
            column: 45
          }
        }, {
          start: {
            line: 185,
            column: 48
          },
          end: {
            line: 185,
            column: 50
          }
        }],
        line: 185
      },
      "22": {
        loc: {
          start: {
            line: 195,
            column: 23
          },
          end: {
            line: 195,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 195,
            column: 23
          },
          end: {
            line: 195,
            column: 35
          }
        }, {
          start: {
            line: 195,
            column: 39
          },
          end: {
            line: 195,
            column: 52
          }
        }],
        line: 195
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0, 0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/peterkrzyzek/Development/clickup-mcp-server/src/clickup-client/views-enhanced.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/peterkrzyzek/Development/clickup-mcp-server/src/clickup-client/views-enhanced.ts"],
      sourcesContent: ["import { ClickUpClient } from './index.js';\nimport type {\n  CreateViewRequest,\n  UpdateViewRequest,\n  GetViewsFilter,\n  SetViewFiltersRequest,\n  SetViewGroupingRequest,\n  SetViewSortingRequest,\n  UpdateViewSettingsRequest,\n  ViewSharingRequest,\n  ViewFilter,\n  ViewGrouping,\n  ViewSorting,\n  ViewSettings\n} from '../schemas/views-schemas.js';\n\nexport interface ViewResponse {\n  id: string;\n  name: string;\n  type: string;\n  parent: {\n    id: string;\n    type: string;\n  };\n  grouping: {\n    field: string;\n    dir: number;\n    collapsed: boolean;\n  };\n  divide: {\n    field: string;\n    dir: number;\n    collapsed: boolean;\n  };\n  sorting: {\n    fields: Array<{\n      field: string;\n      dir: number;\n    }>;\n  };\n  filters: {\n    op: string;\n    fields: Array<{\n      field: string;\n      operator: string;\n      value: any;\n    }>;\n    search: string;\n    show_closed: boolean;\n  };\n  columns: Array<{\n    id: string;\n    name: string;\n    type: string;\n    type_config: any;\n    date_created: string;\n    hide_from_guests: boolean;\n  }>;\n  team_sidebar: {\n    assignees: any[];\n    assigned_comments: boolean;\n    unassigned_tasks: boolean;\n  };\n  settings: {\n    show_task_locations: boolean;\n    show_subtasks: number;\n    show_subtask_parent_names: boolean;\n    show_closed_subtasks: boolean;\n    show_assignees: boolean;\n    show_images: boolean;\n    collapse_empty_columns: boolean;\n    show_task_description: boolean;\n    show_task_checklists: boolean;\n    show_task_attachments: boolean;\n  };\n  creator: number;\n  date_created: string;\n  date_protected: string;\n  orderindex: string;\n  protected: boolean;\n  override_statuses: boolean;\n  required_custom_fields: any[];\n  visibility: {\n    access: string;\n    password_protected: boolean;\n    password: string;\n    expires: string;\n  };\n}\n\nexport interface ViewListResponse {\n  views: ViewResponse[];\n}\n\nexport class ViewsEnhancedClient extends ClickUpClient {\n  constructor(apiToken: string) {\n    super({ apiToken });\n  }\n\n  /**\n   * Create a new view\n   */\n  async createView(request: CreateViewRequest): Promise<ViewResponse> {\n    const endpoint = this.getParentEndpoint(request.parent_type, request.parent_id);\n    \n    const payload = {\n      name: request.name,\n      type: request.type,\n      parent: {\n        id: request.parent_id,\n        type: request.parent_type\n      },\n      grouping: request.grouping ? this.formatGrouping(request.grouping) : undefined,\n      sorting: request.sorting ? this.formatSorting(request.sorting) : undefined,\n      filters: request.filters ? this.formatFilters(request.filters) : undefined,\n      settings: request.settings || {},\n      visibility: {\n        access: request.access || 'private'\n      },\n      description: request.description\n    };\n\n    const response = await this.post<{ view: ViewResponse }>(`${endpoint}/view`, payload);\n    return response.view;\n  }\n\n  /**\n   * Get views for a parent (space, folder, or list)\n   */\n  async getViews(filter: GetViewsFilter): Promise<ViewListResponse> {\n    const endpoint = this.getParentEndpoint(filter.parent_type, filter.parent_id);\n    \n    const params = new URLSearchParams();\n    if (filter.type) params.append('type', filter.type);\n    if (filter.access) params.append('access', filter.access);\n\n    const queryString = params.toString();\n    const fullEndpoint = `${endpoint}/view${queryString ? `?${queryString}` : ''}`;\n    \n    const response = await this.get<ViewListResponse>(fullEndpoint);\n    return response;\n  }\n\n  /**\n   * Get a specific view by ID\n   */\n  async getView(viewId: string): Promise<ViewResponse> {\n    const response = await this.get<{ view: ViewResponse }>(`/view/${viewId}`);\n    return response.view;\n  }\n\n  /**\n   * Update an existing view\n   */\n  async updateView(request: UpdateViewRequest): Promise<ViewResponse> {\n    const updateData: Record<string, any> = {};\n    \n    if (request.name) updateData.name = request.name;\n    if (request.access) updateData.visibility = { access: request.access };\n    if (request.grouping) updateData.grouping = this.formatGrouping(request.grouping);\n    if (request.sorting) updateData.sorting = this.formatSorting(request.sorting);\n    if (request.filters) updateData.filters = this.formatFilters(request.filters);\n    if (request.settings) updateData.settings = request.settings;\n    if (request.description) updateData.description = request.description;\n\n    const response = await this.put<{ view: ViewResponse }>(`/view/${request.view_id}`, updateData);\n    return response.view;\n  }\n\n  /**\n   * Delete a view\n   */\n  async deleteView(viewId: string): Promise<{ success: boolean }> {\n    await this.delete(`/view/${viewId}`);\n    return { success: true };\n  }\n\n  /**\n   * Set view filters\n   */\n  async setViewFilters(request: SetViewFiltersRequest): Promise<ViewResponse> {\n    const payload = {\n      filters: this.formatFilters(request.filters)\n    };\n\n    const response = await this.put<{ view: ViewResponse }>(`/view/${request.view_id}`, payload);\n    return response.view;\n  }\n\n  /**\n   * Set view grouping\n   */\n  async setViewGrouping(request: SetViewGroupingRequest): Promise<ViewResponse> {\n    const payload = {\n      grouping: this.formatGrouping(request.grouping)\n    };\n\n    const response = await this.put<{ view: ViewResponse }>(`/view/${request.view_id}`, payload);\n    return response.view;\n  }\n\n  /**\n   * Set view sorting\n   */\n  async setViewSorting(request: SetViewSortingRequest): Promise<ViewResponse> {\n    const payload = {\n      sorting: this.formatSorting(request.sorting)\n    };\n\n    const response = await this.put<{ view: ViewResponse }>(`/view/${request.view_id}`, payload);\n    return response.view;\n  }\n\n  /**\n   * Update view settings\n   */\n  async updateViewSettings(request: UpdateViewSettingsRequest): Promise<ViewResponse> {\n    const payload = {\n      settings: request.settings\n    };\n\n    const response = await this.put<{ view: ViewResponse }>(`/view/${request.view_id}`, payload);\n    return response.view;\n  }\n\n  /**\n   * Update view sharing settings\n   */\n  async updateViewSharing(request: ViewSharingRequest): Promise<ViewResponse> {\n    const payload = {\n      visibility: {\n        access: request.access,\n        password_protected: !!request.password,\n        password: request.password,\n        expires: request.expires_at ? new Date(request.expires_at * 1000).toISOString() : undefined\n      }\n    };\n\n    const response = await this.put<{ view: ViewResponse }>(`/view/${request.view_id}`, payload);\n    return response.view;\n  }\n\n  /**\n   * Get view tasks (tasks visible in the view)\n   */\n  async getViewTasks(viewId: string, page?: number): Promise<{\n    tasks: any[];\n    last_page: boolean;\n  }> {\n    const params = new URLSearchParams();\n    if (page) params.append('page', page.toString());\n\n    const queryString = params.toString();\n    const endpoint = `/view/${viewId}/task${queryString ? `?${queryString}` : ''}`;\n    \n    const response = await this.get<{\n      tasks: any[];\n      last_page: boolean;\n    }>(endpoint);\n    \n    return response;\n  }\n\n  /**\n   * Duplicate a view\n   */\n  async duplicateView(viewId: string, name: string): Promise<ViewResponse> {\n    const payload = {\n      name: name\n    };\n\n    const response = await this.post<{ view: ViewResponse }>(`/view/${viewId}/duplicate`, payload);\n    return response.view;\n  }\n\n  // Helper methods\n\n  private getParentEndpoint(parentType: string, parentId: string): string {\n    switch (parentType) {\n      case 'space':\n        return `/space/${parentId}`;\n      case 'folder':\n        return `/folder/${parentId}`;\n      case 'list':\n        return `/list/${parentId}`;\n      default:\n        throw new Error(`Invalid parent type: ${parentType}`);\n    }\n  }\n\n  private formatGrouping(grouping: ViewGrouping[]): any {\n    if (grouping.length === 0) return {};\n    \n    const primary = grouping[0];\n    return {\n      field: primary.field,\n      dir: primary.order === 'asc' ? 1 : -1,\n      collapsed: primary.collapsed\n    };\n  }\n\n  private formatSorting(sorting: ViewSorting[]): any {\n    return {\n      fields: sorting.map(sort => ({\n        field: sort.field,\n        dir: sort.order === 'asc' ? 1 : -1\n      }))\n    };\n  }\n\n  private formatFilters(filters: ViewFilter[]): any {\n    return {\n      op: 'AND',\n      fields: filters.map(filter => ({\n        field: filter.field,\n        operator: filter.operator,\n        value: filter.value || filter.values\n      })),\n      search: '',\n      show_closed: false\n    };\n  }\n\n  /**\n   * Get available view fields for a parent\n   */\n  async getViewFields(parentType: string, parentId: string): Promise<{\n    fields: Array<{\n      id: string;\n      name: string;\n      type: string;\n      type_config: any;\n    }>;\n  }> {\n    const endpoint = this.getParentEndpoint(parentType, parentId);\n    const response = await this.get<{\n      fields: Array<{\n        id: string;\n        name: string;\n        type: string;\n        type_config: any;\n      }>;\n    }>(`${endpoint}/field`);\n    \n    return response;\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "24578c95e5927d55822e35c756996d92f6c4c052"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_29lb2k1o3o = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_29lb2k1o3o();
import { ClickUpClient } from './index.js';
export class ViewsEnhancedClient extends ClickUpClient {
  constructor(apiToken) {
    /* istanbul ignore next */
    cov_29lb2k1o3o().f[0]++;
    cov_29lb2k1o3o().s[0]++;
    super({
      apiToken
    });
  }
  /**
   * Create a new view
   */
  async createView(request) {
    /* istanbul ignore next */
    cov_29lb2k1o3o().f[1]++;
    const endpoint =
    /* istanbul ignore next */
    (cov_29lb2k1o3o().s[1]++, this.getParentEndpoint(request.parent_type, request.parent_id));
    const payload =
    /* istanbul ignore next */
    (cov_29lb2k1o3o().s[2]++, {
      name: request.name,
      type: request.type,
      parent: {
        id: request.parent_id,
        type: request.parent_type
      },
      grouping: request.grouping ?
      /* istanbul ignore next */
      (cov_29lb2k1o3o().b[0][0]++, this.formatGrouping(request.grouping)) :
      /* istanbul ignore next */
      (cov_29lb2k1o3o().b[0][1]++, undefined),
      sorting: request.sorting ?
      /* istanbul ignore next */
      (cov_29lb2k1o3o().b[1][0]++, this.formatSorting(request.sorting)) :
      /* istanbul ignore next */
      (cov_29lb2k1o3o().b[1][1]++, undefined),
      filters: request.filters ?
      /* istanbul ignore next */
      (cov_29lb2k1o3o().b[2][0]++, this.formatFilters(request.filters)) :
      /* istanbul ignore next */
      (cov_29lb2k1o3o().b[2][1]++, undefined),
      settings:
      /* istanbul ignore next */
      (cov_29lb2k1o3o().b[3][0]++, request.settings) ||
      /* istanbul ignore next */
      (cov_29lb2k1o3o().b[3][1]++, {}),
      visibility: {
        access:
        /* istanbul ignore next */
        (cov_29lb2k1o3o().b[4][0]++, request.access) ||
        /* istanbul ignore next */
        (cov_29lb2k1o3o().b[4][1]++, 'private')
      },
      description: request.description
    });
    const response =
    /* istanbul ignore next */
    (cov_29lb2k1o3o().s[3]++, await this.post(`${endpoint}/view`, payload));
    /* istanbul ignore next */
    cov_29lb2k1o3o().s[4]++;
    return response.view;
  }
  /**
   * Get views for a parent (space, folder, or list)
   */
  async getViews(filter) {
    /* istanbul ignore next */
    cov_29lb2k1o3o().f[2]++;
    const endpoint =
    /* istanbul ignore next */
    (cov_29lb2k1o3o().s[5]++, this.getParentEndpoint(filter.parent_type, filter.parent_id));
    const params =
    /* istanbul ignore next */
    (cov_29lb2k1o3o().s[6]++, new URLSearchParams());
    /* istanbul ignore next */
    cov_29lb2k1o3o().s[7]++;
    if (filter.type) {
      /* istanbul ignore next */
      cov_29lb2k1o3o().b[5][0]++;
      cov_29lb2k1o3o().s[8]++;
      params.append('type', filter.type);
    } else
    /* istanbul ignore next */
    {
      cov_29lb2k1o3o().b[5][1]++;
    }
    cov_29lb2k1o3o().s[9]++;
    if (filter.access) {
      /* istanbul ignore next */
      cov_29lb2k1o3o().b[6][0]++;
      cov_29lb2k1o3o().s[10]++;
      params.append('access', filter.access);
    } else
    /* istanbul ignore next */
    {
      cov_29lb2k1o3o().b[6][1]++;
    }
    const queryString =
    /* istanbul ignore next */
    (cov_29lb2k1o3o().s[11]++, params.toString());
    const fullEndpoint =
    /* istanbul ignore next */
    (cov_29lb2k1o3o().s[12]++, `${endpoint}/view${queryString ?
    /* istanbul ignore next */
    (cov_29lb2k1o3o().b[7][0]++, `?${queryString}`) :
    /* istanbul ignore next */
    (cov_29lb2k1o3o().b[7][1]++, '')}`);
    const response =
    /* istanbul ignore next */
    (cov_29lb2k1o3o().s[13]++, await this.get(fullEndpoint));
    /* istanbul ignore next */
    cov_29lb2k1o3o().s[14]++;
    return response;
  }
  /**
   * Get a specific view by ID
   */
  async getView(viewId) {
    /* istanbul ignore next */
    cov_29lb2k1o3o().f[3]++;
    const response =
    /* istanbul ignore next */
    (cov_29lb2k1o3o().s[15]++, await this.get(`/view/${viewId}`));
    /* istanbul ignore next */
    cov_29lb2k1o3o().s[16]++;
    return response.view;
  }
  /**
   * Update an existing view
   */
  async updateView(request) {
    /* istanbul ignore next */
    cov_29lb2k1o3o().f[4]++;
    const updateData =
    /* istanbul ignore next */
    (cov_29lb2k1o3o().s[17]++, {});
    /* istanbul ignore next */
    cov_29lb2k1o3o().s[18]++;
    if (request.name) {
      /* istanbul ignore next */
      cov_29lb2k1o3o().b[8][0]++;
      cov_29lb2k1o3o().s[19]++;
      updateData.name = request.name;
    } else
    /* istanbul ignore next */
    {
      cov_29lb2k1o3o().b[8][1]++;
    }
    cov_29lb2k1o3o().s[20]++;
    if (request.access) {
      /* istanbul ignore next */
      cov_29lb2k1o3o().b[9][0]++;
      cov_29lb2k1o3o().s[21]++;
      updateData.visibility = {
        access: request.access
      };
    } else
    /* istanbul ignore next */
    {
      cov_29lb2k1o3o().b[9][1]++;
    }
    cov_29lb2k1o3o().s[22]++;
    if (request.grouping) {
      /* istanbul ignore next */
      cov_29lb2k1o3o().b[10][0]++;
      cov_29lb2k1o3o().s[23]++;
      updateData.grouping = this.formatGrouping(request.grouping);
    } else
    /* istanbul ignore next */
    {
      cov_29lb2k1o3o().b[10][1]++;
    }
    cov_29lb2k1o3o().s[24]++;
    if (request.sorting) {
      /* istanbul ignore next */
      cov_29lb2k1o3o().b[11][0]++;
      cov_29lb2k1o3o().s[25]++;
      updateData.sorting = this.formatSorting(request.sorting);
    } else
    /* istanbul ignore next */
    {
      cov_29lb2k1o3o().b[11][1]++;
    }
    cov_29lb2k1o3o().s[26]++;
    if (request.filters) {
      /* istanbul ignore next */
      cov_29lb2k1o3o().b[12][0]++;
      cov_29lb2k1o3o().s[27]++;
      updateData.filters = this.formatFilters(request.filters);
    } else
    /* istanbul ignore next */
    {
      cov_29lb2k1o3o().b[12][1]++;
    }
    cov_29lb2k1o3o().s[28]++;
    if (request.settings) {
      /* istanbul ignore next */
      cov_29lb2k1o3o().b[13][0]++;
      cov_29lb2k1o3o().s[29]++;
      updateData.settings = request.settings;
    } else
    /* istanbul ignore next */
    {
      cov_29lb2k1o3o().b[13][1]++;
    }
    cov_29lb2k1o3o().s[30]++;
    if (request.description) {
      /* istanbul ignore next */
      cov_29lb2k1o3o().b[14][0]++;
      cov_29lb2k1o3o().s[31]++;
      updateData.description = request.description;
    } else
    /* istanbul ignore next */
    {
      cov_29lb2k1o3o().b[14][1]++;
    }
    const response =
    /* istanbul ignore next */
    (cov_29lb2k1o3o().s[32]++, await this.put(`/view/${request.view_id}`, updateData));
    /* istanbul ignore next */
    cov_29lb2k1o3o().s[33]++;
    return response.view;
  }
  /**
   * Delete a view
   */
  async deleteView(viewId) {
    /* istanbul ignore next */
    cov_29lb2k1o3o().f[5]++;
    cov_29lb2k1o3o().s[34]++;
    await this.delete(`/view/${viewId}`);
    /* istanbul ignore next */
    cov_29lb2k1o3o().s[35]++;
    return {
      success: true
    };
  }
  /**
   * Set view filters
   */
  async setViewFilters(request) {
    /* istanbul ignore next */
    cov_29lb2k1o3o().f[6]++;
    const payload =
    /* istanbul ignore next */
    (cov_29lb2k1o3o().s[36]++, {
      filters: this.formatFilters(request.filters)
    });
    const response =
    /* istanbul ignore next */
    (cov_29lb2k1o3o().s[37]++, await this.put(`/view/${request.view_id}`, payload));
    /* istanbul ignore next */
    cov_29lb2k1o3o().s[38]++;
    return response.view;
  }
  /**
   * Set view grouping
   */
  async setViewGrouping(request) {
    /* istanbul ignore next */
    cov_29lb2k1o3o().f[7]++;
    const payload =
    /* istanbul ignore next */
    (cov_29lb2k1o3o().s[39]++, {
      grouping: this.formatGrouping(request.grouping)
    });
    const response =
    /* istanbul ignore next */
    (cov_29lb2k1o3o().s[40]++, await this.put(`/view/${request.view_id}`, payload));
    /* istanbul ignore next */
    cov_29lb2k1o3o().s[41]++;
    return response.view;
  }
  /**
   * Set view sorting
   */
  async setViewSorting(request) {
    /* istanbul ignore next */
    cov_29lb2k1o3o().f[8]++;
    const payload =
    /* istanbul ignore next */
    (cov_29lb2k1o3o().s[42]++, {
      sorting: this.formatSorting(request.sorting)
    });
    const response =
    /* istanbul ignore next */
    (cov_29lb2k1o3o().s[43]++, await this.put(`/view/${request.view_id}`, payload));
    /* istanbul ignore next */
    cov_29lb2k1o3o().s[44]++;
    return response.view;
  }
  /**
   * Update view settings
   */
  async updateViewSettings(request) {
    /* istanbul ignore next */
    cov_29lb2k1o3o().f[9]++;
    const payload =
    /* istanbul ignore next */
    (cov_29lb2k1o3o().s[45]++, {
      settings: request.settings
    });
    const response =
    /* istanbul ignore next */
    (cov_29lb2k1o3o().s[46]++, await this.put(`/view/${request.view_id}`, payload));
    /* istanbul ignore next */
    cov_29lb2k1o3o().s[47]++;
    return response.view;
  }
  /**
   * Update view sharing settings
   */
  async updateViewSharing(request) {
    /* istanbul ignore next */
    cov_29lb2k1o3o().f[10]++;
    const payload =
    /* istanbul ignore next */
    (cov_29lb2k1o3o().s[48]++, {
      visibility: {
        access: request.access,
        password_protected: !!request.password,
        password: request.password,
        expires: request.expires_at ?
        /* istanbul ignore next */
        (cov_29lb2k1o3o().b[15][0]++, new Date(request.expires_at * 1000).toISOString()) :
        /* istanbul ignore next */
        (cov_29lb2k1o3o().b[15][1]++, undefined)
      }
    });
    const response =
    /* istanbul ignore next */
    (cov_29lb2k1o3o().s[49]++, await this.put(`/view/${request.view_id}`, payload));
    /* istanbul ignore next */
    cov_29lb2k1o3o().s[50]++;
    return response.view;
  }
  /**
   * Get view tasks (tasks visible in the view)
   */
  async getViewTasks(viewId, page) {
    /* istanbul ignore next */
    cov_29lb2k1o3o().f[11]++;
    const params =
    /* istanbul ignore next */
    (cov_29lb2k1o3o().s[51]++, new URLSearchParams());
    /* istanbul ignore next */
    cov_29lb2k1o3o().s[52]++;
    if (page) {
      /* istanbul ignore next */
      cov_29lb2k1o3o().b[16][0]++;
      cov_29lb2k1o3o().s[53]++;
      params.append('page', page.toString());
    } else
    /* istanbul ignore next */
    {
      cov_29lb2k1o3o().b[16][1]++;
    }
    const queryString =
    /* istanbul ignore next */
    (cov_29lb2k1o3o().s[54]++, params.toString());
    const endpoint =
    /* istanbul ignore next */
    (cov_29lb2k1o3o().s[55]++, `/view/${viewId}/task${queryString ?
    /* istanbul ignore next */
    (cov_29lb2k1o3o().b[17][0]++, `?${queryString}`) :
    /* istanbul ignore next */
    (cov_29lb2k1o3o().b[17][1]++, '')}`);
    const response =
    /* istanbul ignore next */
    (cov_29lb2k1o3o().s[56]++, await this.get(endpoint));
    /* istanbul ignore next */
    cov_29lb2k1o3o().s[57]++;
    return response;
  }
  /**
   * Duplicate a view
   */
  async duplicateView(viewId, name) {
    /* istanbul ignore next */
    cov_29lb2k1o3o().f[12]++;
    const payload =
    /* istanbul ignore next */
    (cov_29lb2k1o3o().s[58]++, {
      name: name
    });
    const response =
    /* istanbul ignore next */
    (cov_29lb2k1o3o().s[59]++, await this.post(`/view/${viewId}/duplicate`, payload));
    /* istanbul ignore next */
    cov_29lb2k1o3o().s[60]++;
    return response.view;
  }
  // Helper methods
  getParentEndpoint(parentType, parentId) {
    /* istanbul ignore next */
    cov_29lb2k1o3o().f[13]++;
    cov_29lb2k1o3o().s[61]++;
    switch (parentType) {
      case 'space':
        /* istanbul ignore next */
        cov_29lb2k1o3o().b[18][0]++;
        cov_29lb2k1o3o().s[62]++;
        return `/space/${parentId}`;
      case 'folder':
        /* istanbul ignore next */
        cov_29lb2k1o3o().b[18][1]++;
        cov_29lb2k1o3o().s[63]++;
        return `/folder/${parentId}`;
      case 'list':
        /* istanbul ignore next */
        cov_29lb2k1o3o().b[18][2]++;
        cov_29lb2k1o3o().s[64]++;
        return `/list/${parentId}`;
      default:
        /* istanbul ignore next */
        cov_29lb2k1o3o().b[18][3]++;
        cov_29lb2k1o3o().s[65]++;
        throw new Error(`Invalid parent type: ${parentType}`);
    }
  }
  formatGrouping(grouping) {
    /* istanbul ignore next */
    cov_29lb2k1o3o().f[14]++;
    cov_29lb2k1o3o().s[66]++;
    if (grouping.length === 0) {
      /* istanbul ignore next */
      cov_29lb2k1o3o().b[19][0]++;
      cov_29lb2k1o3o().s[67]++;
      return {};
    } else
    /* istanbul ignore next */
    {
      cov_29lb2k1o3o().b[19][1]++;
    }
    const primary =
    /* istanbul ignore next */
    (cov_29lb2k1o3o().s[68]++, grouping[0]);
    /* istanbul ignore next */
    cov_29lb2k1o3o().s[69]++;
    return {
      field: primary.field,
      dir: primary.order === 'asc' ?
      /* istanbul ignore next */
      (cov_29lb2k1o3o().b[20][0]++, 1) :
      /* istanbul ignore next */
      (cov_29lb2k1o3o().b[20][1]++, -1),
      collapsed: primary.collapsed
    };
  }
  formatSorting(sorting) {
    /* istanbul ignore next */
    cov_29lb2k1o3o().f[15]++;
    cov_29lb2k1o3o().s[70]++;
    return {
      fields: sorting.map(sort => {
        /* istanbul ignore next */
        cov_29lb2k1o3o().f[16]++;
        cov_29lb2k1o3o().s[71]++;
        return {
          field: sort.field,
          dir: sort.order === 'asc' ?
          /* istanbul ignore next */
          (cov_29lb2k1o3o().b[21][0]++, 1) :
          /* istanbul ignore next */
          (cov_29lb2k1o3o().b[21][1]++, -1)
        };
      })
    };
  }
  formatFilters(filters) {
    /* istanbul ignore next */
    cov_29lb2k1o3o().f[17]++;
    cov_29lb2k1o3o().s[72]++;
    return {
      op: 'AND',
      fields: filters.map(filter => {
        /* istanbul ignore next */
        cov_29lb2k1o3o().f[18]++;
        cov_29lb2k1o3o().s[73]++;
        return {
          field: filter.field,
          operator: filter.operator,
          value:
          /* istanbul ignore next */
          (cov_29lb2k1o3o().b[22][0]++, filter.value) ||
          /* istanbul ignore next */
          (cov_29lb2k1o3o().b[22][1]++, filter.values)
        };
      }),
      search: '',
      show_closed: false
    };
  }
  /**
   * Get available view fields for a parent
   */
  async getViewFields(parentType, parentId) {
    /* istanbul ignore next */
    cov_29lb2k1o3o().f[19]++;
    const endpoint =
    /* istanbul ignore next */
    (cov_29lb2k1o3o().s[74]++, this.getParentEndpoint(parentType, parentId));
    const response =
    /* istanbul ignore next */
    (cov_29lb2k1o3o().s[75]++, await this.get(`${endpoint}/field`));
    /* istanbul ignore next */
    cov_29lb2k1o3o().s[76]++;
    return response;
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,