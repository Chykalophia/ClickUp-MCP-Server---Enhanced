{"version":3,"names":["cov_13obc04wnd","actualCoverage","z","createClickUpClient","createDocsClient","createAuthClient","clickUpClient","s","docsClient","authClient","setupDocTools","server","f","tool","doc_id","string","describe","workspace_id","pages","getDocPages","combinedContent","Array","isArray","b","page","content","type","text","error","console","message","isError","query","cursor","optional","result","searchDocs","JSON","stringify","docs","deleted","boolean","archived","limit","number","getDocsFromWorkspace","undefined","content_format","enum"],"sources":["/Users/peterkrzyzek/Development/clickup-mcp-server/src/tools/doc-tools.ts"],"sourcesContent":["import { McpServer } from '@modelcontextprotocol/sdk/server/mcp.js';\nimport { z } from 'zod';\nimport { createClickUpClient } from '../clickup-client/index.js';\nimport { createDocsClient } from '../clickup-client/docs.js';\nimport { createAuthClient } from '../clickup-client/auth.js';\n\n// Create clients\nconst clickUpClient = createClickUpClient();\nconst docsClient = createDocsClient(clickUpClient);\nconst authClient = createAuthClient(clickUpClient);\n\nexport function setupDocTools(server: McpServer): void {\n  // Register get_doc_content tool\n  server.tool(\n    'get_doc_content',\n    'Get the content of a specific ClickUp doc. Returns combined content from all pages in the doc.',\n    {\n      doc_id: z.string().describe('The ID of the doc to get'),\n      workspace_id: z.string().describe('The ID of the workspace containing the doc')\n    },\n    async ({ doc_id, workspace_id }) => {\n      try {\n        // Get the pages of the doc\n        const pages = await docsClient.getDocPages(workspace_id, doc_id);\n        \n        // Combine the content of all pages\n        let combinedContent = '';\n        if (Array.isArray(pages)) {\n          for (const page of pages) {\n            if (page.content) {\n              combinedContent += page.content + '\\n\\n';\n            }\n          }\n        }\n        \n        return {\n          content: [{ type: 'text', text: combinedContent || 'No content found in this doc.' }]\n        };\n      } catch (error: any) {\n        console.error('Error getting doc content:', error);\n        return {\n          content: [{ type: 'text', text: `Error getting doc content: ${error.message}` }],\n          isError: true\n        };\n      }\n    }\n  );\n\n  // Register search_docs tool\n  server.tool(\n    'search_docs',\n    'Search for docs in a ClickUp workspace using a query string. Returns matching docs with their metadata.',\n    {\n      workspace_id: z.string().describe('The ID of the workspace to search in'),\n      query: z.string().describe('The search query'),\n      cursor: z.string().optional().describe('Cursor for pagination')\n    },\n    async ({ workspace_id, query, cursor }) => {\n      try {\n        // Search for docs in the workspace\n        const result = await docsClient.searchDocs(workspace_id, { query, cursor });\n        \n        return {\n          content: [{ type: 'text', text: JSON.stringify(result.docs, null, 2) }]\n        };\n      } catch (error: any) {\n        console.error('Error searching docs:', error);\n        return {\n          content: [{ type: 'text', text: `Error searching docs: ${error.message}` }],\n          isError: true\n        };\n      }\n    }\n  );\n\n  // Register get_docs_from_workspace tool\n  server.tool(\n    'get_docs_from_workspace',\n    'Get all docs from a ClickUp workspace. Supports pagination and filtering for deleted/archived docs.',\n    {\n      workspace_id: z.string().describe('The ID of the workspace to get docs from'),\n      cursor: z.string().optional().describe('Cursor for pagination'),\n      deleted: z.boolean().optional().describe('Whether to include deleted docs'),\n      archived: z.boolean().optional().describe('Whether to include archived docs'),\n      limit: z.number().optional().describe('The maximum number of docs to return')\n    },\n    async ({ workspace_id, cursor, deleted, archived, limit }) => {\n      try {\n        // Get docs from the workspace\n        const result = await docsClient.getDocsFromWorkspace(workspace_id, { \n          cursor,\n          deleted: deleted !== undefined ? deleted : false,\n          archived: archived !== undefined ? archived : false,\n          limit: limit || 50\n        });\n        \n        return {\n          content: [{ type: 'text', text: JSON.stringify(result.docs, null, 2) }]\n        };\n      } catch (error: any) {\n        console.error('Error getting docs from workspace:', error);\n        return {\n          content: [{ type: 'text', text: `Error getting docs from workspace: ${error.message}` }],\n          isError: true\n        };\n      }\n    }\n  );\n\n  // Register get_doc_pages tool\n  server.tool(\n    'get_doc_pages',\n    'Get the pages of a specific ClickUp doc. Returns page content in the requested format (markdown or plain text).',\n    {\n      doc_id: z.string().describe('The ID of the doc to get pages from'),\n      workspace_id: z.string().describe('The ID of the workspace containing the doc'),\n      content_format: z.enum(['text/md', 'text/plain']).optional().describe('The format to return the content in')\n    },\n    async ({ doc_id, workspace_id, content_format }) => {\n      try {\n        // Get the pages of the doc\n        const pages = await docsClient.getDocPages(workspace_id, doc_id, content_format);\n        \n        return {\n          content: [{ type: 'text', text: JSON.stringify(pages, null, 2) }]\n        };\n      } catch (error: any) {\n        console.error('Error getting doc pages:', error);\n        return {\n          content: [{ type: 'text', text: `Error getting doc pages: ${error.message}` }],\n          isError: true\n        };\n      }\n    }\n  );\n}\n"],"mappingssBQ;IAAAA,cAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,cAAA;AArBR,SAASE,CAAC,QAAQ,KAAK;AACvB,SAASC,mBAAmB,QAAQ,4BAA4B;AAChE,SAASC,gBAAgB,QAAQ,2BAA2B;AAC5D,SAASC,gBAAgB,QAAQ,2BAA2B;AAE5D;AACA,MAAMC,aAAa;AAAA;AAAA,CAAAN,cAAA,GAAAO,CAAA,OAAGJ,mBAAmB,EAAE;AAC3C,MAAMK,UAAU;AAAA;AAAA,CAAAR,cAAA,GAAAO,CAAA,OAAGH,gBAAgB,CAACE,aAAa,CAAC;AAClD,MAAMG,UAAU;AAAA;AAAA,CAAAT,cAAA,GAAAO,CAAA,OAAGF,gBAAgB,CAACC,aAAa,CAAC;AAElD,OAAM,SAAUI,aAAaA,CAACC,MAAiB;EAAA;EAAAX,cAAA,GAAAY,CAAA;EAAAZ,cAAA,GAAAO,CAAA;EAC7C;EACAI,MAAM,CAACE,IAAI,CACT,iBAAiB,EACjB,gGAAgG,EAChG;IACEC,MAAM,EAAEZ,CAAC,CAACa,MAAM,EAAE,CAACC,QAAQ,CAAC,0BAA0B,CAAC;IACvDC,YAAY,EAAEf,CAAC,CAACa,MAAM,EAAE,CAACC,QAAQ,CAAC,4CAA4C;GAC/E,EACD,OAAO;IAAEF,MAAM;IAAEG;EAAY,CAAE,KAAI;IAAA;IAAAjB,cAAA,GAAAY,CAAA;IAAAZ,cAAA,GAAAO,CAAA;IACjC,IAAI;MACF;MACA,MAAMW,KAAK;MAAA;MAAA,CAAAlB,cAAA,GAAAO,CAAA,OAAG,MAAMC,UAAU,CAACW,WAAW,CAACF,YAAY,EAAEH,MAAM,CAAC;MAEhE;MACA,IAAIM,eAAe;MAAA;MAAA,CAAApB,cAAA,GAAAO,CAAA,OAAG,EAAE;MAAC;MAAAP,cAAA,GAAAO,CAAA;MACzB,IAAIc,KAAK,CAACC,OAAO,CAACJ,KAAK,CAAC,EAAE;QAAA;QAAAlB,cAAA,GAAAuB,CAAA;QAAAvB,cAAA,GAAAO,CAAA;QACxB,KAAK,MAAMiB,IAAI,IAAIN,KAAK,EAAE;UAAA;UAAAlB,cAAA,GAAAO,CAAA;UACxB,IAAIiB,IAAI,CAACC,OAAO,EAAE;YAAA;YAAAzB,cAAA,GAAAuB,CAAA;YAAAvB,cAAA,GAAAO,CAAA;YAChBa,eAAe,IAAII,IAAI,CAACC,OAAO,GAAG,MAAM;UAC1C,CAAC;UAAA;UAAA;YAAAzB,cAAA,GAAAuB,CAAA;UAAA;QACH;MACF,CAAC;MAAA;MAAA;QAAAvB,cAAA,GAAAuB,CAAA;MAAA;MAAAvB,cAAA,GAAAO,CAAA;MAED,OAAO;QACLkB,OAAO,EAAE,CAAC;UAAEC,IAAI,EAAE,MAAM;UAAEC,IAAI;UAAE;UAAA,CAAA3B,cAAA,GAAAuB,CAAA,UAAAH,eAAe;UAAA;UAAA,CAAApB,cAAA,GAAAuB,CAAA,UAAI,+BAA+B;QAAA,CAAE;OACrF;IACH,CAAC,CAAC,OAAOK,KAAU,EAAE;MAAA;MAAA5B,cAAA,GAAAO,CAAA;MACnBsB,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAAC;MAAA5B,cAAA,GAAAO,CAAA;MACnD,OAAO;QACLkB,OAAO,EAAE,CAAC;UAAEC,IAAI,EAAE,MAAM;UAAEC,IAAI,EAAE,8BAA8BC,KAAK,CAACE,OAAO;QAAE,CAAE,CAAC;QAChFC,OAAO,EAAE;OACV;IACH;EACF,CAAC,CACF;EAED;EAAA;EAAA/B,cAAA,GAAAO,CAAA;EACAI,MAAM,CAACE,IAAI,CACT,aAAa,EACb,yGAAyG,EACzG;IACEI,YAAY,EAAEf,CAAC,CAACa,MAAM,EAAE,CAACC,QAAQ,CAAC,sCAAsC,CAAC;IACzEgB,KAAK,EAAE9B,CAAC,CAACa,MAAM,EAAE,CAACC,QAAQ,CAAC,kBAAkB,CAAC;IAC9CiB,MAAM,EAAE/B,CAAC,CAACa,MAAM,EAAE,CAACmB,QAAQ,EAAE,CAAClB,QAAQ,CAAC,uBAAuB;GAC/D,EACD,OAAO;IAAEC,YAAY;IAAEe,KAAK;IAAEC;EAAM,CAAE,KAAI;IAAA;IAAAjC,cAAA,GAAAY,CAAA;IAAAZ,cAAA,GAAAO,CAAA;IACxC,IAAI;MACF;MACA,MAAM4B,MAAM;MAAA;MAAA,CAAAnC,cAAA,GAAAO,CAAA,QAAG,MAAMC,UAAU,CAAC4B,UAAU,CAACnB,YAAY,EAAE;QAAEe,KAAK;QAAEC;MAAM,CAAE,CAAC;MAAC;MAAAjC,cAAA,GAAAO,CAAA;MAE5E,OAAO;QACLkB,OAAO,EAAE,CAAC;UAAEC,IAAI,EAAE,MAAM;UAAEC,IAAI,EAAEU,IAAI,CAACC,SAAS,CAACH,MAAM,CAACI,IAAI,EAAE,IAAI,EAAE,CAAC;QAAC,CAAE;OACvE;IACH,CAAC,CAAC,OAAOX,KAAU,EAAE;MAAA;MAAA5B,cAAA,GAAAO,CAAA;MACnBsB,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAAC;MAAA5B,cAAA,GAAAO,CAAA;MAC9C,OAAO;QACLkB,OAAO,EAAE,CAAC;UAAEC,IAAI,EAAE,MAAM;UAAEC,IAAI,EAAE,yBAAyBC,KAAK,CAACE,OAAO;QAAE,CAAE,CAAC;QAC3EC,OAAO,EAAE;OACV;IACH;EACF,CAAC,CACF;EAED;EAAA;EAAA/B,cAAA,GAAAO,CAAA;EACAI,MAAM,CAACE,IAAI,CACT,yBAAyB,EACzB,qGAAqG,EACrG;IACEI,YAAY,EAAEf,CAAC,CAACa,MAAM,EAAE,CAACC,QAAQ,CAAC,0CAA0C,CAAC;IAC7EiB,MAAM,EAAE/B,CAAC,CAACa,MAAM,EAAE,CAACmB,QAAQ,EAAE,CAAClB,QAAQ,CAAC,uBAAuB,CAAC;IAC/DwB,OAAO,EAAEtC,CAAC,CAACuC,OAAO,EAAE,CAACP,QAAQ,EAAE,CAAClB,QAAQ,CAAC,iCAAiC,CAAC;IAC3E0B,QAAQ,EAAExC,CAAC,CAACuC,OAAO,EAAE,CAACP,QAAQ,EAAE,CAAClB,QAAQ,CAAC,kCAAkC,CAAC;IAC7E2B,KAAK,EAAEzC,CAAC,CAAC0C,MAAM,EAAE,CAACV,QAAQ,EAAE,CAAClB,QAAQ,CAAC,sCAAsC;GAC7E,EACD,OAAO;IAAEC,YAAY;IAAEgB,MAAM;IAAEO,OAAO;IAAEE,QAAQ;IAAEC;EAAK,CAAE,KAAI;IAAA;IAAA3C,cAAA,GAAAY,CAAA;IAAAZ,cAAA,GAAAO,CAAA;IAC3D,IAAI;MACF;MACA,MAAM4B,MAAM;MAAA;MAAA,CAAAnC,cAAA,GAAAO,CAAA,QAAG,MAAMC,UAAU,CAACqC,oBAAoB,CAAC5B,YAAY,EAAE;QACjEgB,MAAM;QACNO,OAAO,EAAEA,OAAO,KAAKM,SAAS;QAAA;QAAA,CAAA9C,cAAA,GAAAuB,CAAA,UAAGiB,OAAO;QAAA;QAAA,CAAAxC,cAAA,GAAAuB,CAAA,UAAG,KAAK;QAChDmB,QAAQ,EAAEA,QAAQ,KAAKI,SAAS;QAAA;QAAA,CAAA9C,cAAA,GAAAuB,CAAA,UAAGmB,QAAQ;QAAA;QAAA,CAAA1C,cAAA,GAAAuB,CAAA,UAAG,KAAK;QACnDoB,KAAK;QAAE;QAAA,CAAA3C,cAAA,GAAAuB,CAAA,UAAAoB,KAAK;QAAA;QAAA,CAAA3C,cAAA,GAAAuB,CAAA,UAAI,EAAE;OACnB,CAAC;MAAC;MAAAvB,cAAA,GAAAO,CAAA;MAEH,OAAO;QACLkB,OAAO,EAAE,CAAC;UAAEC,IAAI,EAAE,MAAM;UAAEC,IAAI,EAAEU,IAAI,CAACC,SAAS,CAACH,MAAM,CAACI,IAAI,EAAE,IAAI,EAAE,CAAC;QAAC,CAAE;OACvE;IACH,CAAC,CAAC,OAAOX,KAAU,EAAE;MAAA;MAAA5B,cAAA,GAAAO,CAAA;MACnBsB,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;MAAC;MAAA5B,cAAA,GAAAO,CAAA;MAC3D,OAAO;QACLkB,OAAO,EAAE,CAAC;UAAEC,IAAI,EAAE,MAAM;UAAEC,IAAI,EAAE,sCAAsCC,KAAK,CAACE,OAAO;QAAE,CAAE,CAAC;QACxFC,OAAO,EAAE;OACV;IACH;EACF,CAAC,CACF;EAED;EAAA;EAAA/B,cAAA,GAAAO,CAAA;EACAI,MAAM,CAACE,IAAI,CACT,eAAe,EACf,iHAAiH,EACjH;IACEC,MAAM,EAAEZ,CAAC,CAACa,MAAM,EAAE,CAACC,QAAQ,CAAC,qCAAqC,CAAC;IAClEC,YAAY,EAAEf,CAAC,CAACa,MAAM,EAAE,CAACC,QAAQ,CAAC,4CAA4C,CAAC;IAC/E+B,cAAc,EAAE7C,CAAC,CAAC8C,IAAI,CAAC,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC,CAACd,QAAQ,EAAE,CAAClB,QAAQ,CAAC,qCAAqC;GAC5G,EACD,OAAO;IAAEF,MAAM;IAAEG,YAAY;IAAE8B;EAAc,CAAE,KAAI;IAAA;IAAA/C,cAAA,GAAAY,CAAA;IAAAZ,cAAA,GAAAO,CAAA;IACjD,IAAI;MACF;MACA,MAAMW,KAAK;MAAA;MAAA,CAAAlB,cAAA,GAAAO,CAAA,QAAG,MAAMC,UAAU,CAACW,WAAW,CAACF,YAAY,EAAEH,MAAM,EAAEiC,cAAc,CAAC;MAAC;MAAA/C,cAAA,GAAAO,CAAA;MAEjF,OAAO;QACLkB,OAAO,EAAE,CAAC;UAAEC,IAAI,EAAE,MAAM;UAAEC,IAAI,EAAEU,IAAI,CAACC,SAAS,CAACpB,KAAK,EAAE,IAAI,EAAE,CAAC;QAAC,CAAE;OACjE;IACH,CAAC,CAAC,OAAOU,KAAU,EAAE;MAAA;MAAA5B,cAAA,GAAAO,CAAA;MACnBsB,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAAC;MAAA5B,cAAA,GAAAO,CAAA;MACjD,OAAO;QACLkB,OAAO,EAAE,CAAC;UAAEC,IAAI,EAAE,MAAM;UAAEC,IAAI,EAAE,4BAA4BC,KAAK,CAACE,OAAO;QAAE,CAAE,CAAC;QAC9EC,OAAO,EAAE;OACV;IACH;EACF,CAAC,CACF;AACH","ignoreList":[]}