{"file":"/Users/peterkrzyzek/Development/clickup-mcp-server/src/tests/security.test.ts","mappings":"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","names":[],"sources":["/Users/peterkrzyzek/Development/clickup-mcp-server/src/tests/security.test.ts"],"sourcesContent":["import { describe, it, expect, beforeEach, jest } from '@jest/globals';\nimport crypto from 'crypto';\nimport {\n  validateApiToken,\n  sanitizeInput,\n  validateWebhookSignature,\n  validateFileUpload,\n  validateUrl,\n  generateSecureToken,\n  validateEnvironment,\n  rateLimiter\n} from '../utils/security.js';\n\ndescribe('Security Utilities', () => {\n  beforeEach(() => {\n    // Reset rate limiter before each test\n    rateLimiter.reset();\n  });\n\n  describe('validateApiToken', () => {\n    it('should validate correct API token', () => {\n      const result = validateApiToken('pk_1234567890abcdef');\n      expect(result.isValid).toBe(true);\n      expect(result.error).toBeUndefined();\n    });\n\n    it('should reject empty token', () => {\n      const result = validateApiToken('');\n      expect(result.isValid).toBe(false);\n      expect(result.error).toBe('API token is required');\n    });\n\n    it('should reject non-string token', () => {\n      const result = validateApiToken(123 as any);\n      expect(result.isValid).toBe(false);\n      expect(result.error).toBe('API token must be a string');\n    });\n\n    it('should reject too short token', () => {\n      const result = validateApiToken('short');\n      expect(result.isValid).toBe(false);\n      expect(result.error).toBe('API token appears to be too short');\n    });\n\n    it('should reject token with invalid characters', () => {\n      const result = validateApiToken('token with spaces');\n      expect(result.isValid).toBe(false);\n      expect(result.error).toBe('API token contains invalid characters');\n    });\n  });\n\n  describe('sanitizeInput', () => {\n    it('should sanitize string input', () => {\n      const input = '<script>alert(\"xss\")</script>';\n      const result = sanitizeInput(input);\n      expect(result).toBe('scriptalert(\"xss\")/script');\n    });\n\n    it('should sanitize object input', () => {\n      const input = {\n        name: '<script>alert(\"xss\")</script>',\n        description: 'javascript:alert(\"xss\")'\n      };\n      const result = sanitizeInput(input);\n      expect(result.name).toBe('scriptalert(\"xss\")/script');\n      expect(result.description).toBe('alert(\"xss\")');\n    });\n\n    it('should sanitize array input', () => {\n      const input = ['<script>', 'javascript:alert()'];\n      const result = sanitizeInput(input);\n      expect(result).toEqual(['script', 'alert()']);\n    });\n\n    it('should handle non-string input', () => {\n      expect(sanitizeInput(123)).toBe(123);\n      expect(sanitizeInput(null)).toBe(null);\n      expect(sanitizeInput(undefined)).toBe(undefined);\n    });\n  });\n\n  describe('validateWebhookSignature', () => {\n    const secret = 'test-secret';\n    const payload = '{\"test\": \"data\"}';\n    \n    it('should validate correct signature', () => {\n      const signature = crypto.createHmac('sha256', secret).update(payload).digest('hex');\n      const result = validateWebhookSignature(payload, signature, secret);\n      expect(result.isValid).toBe(true);\n      expect(result.error).toBeUndefined();\n    });\n\n    it('should validate signature with sha256 prefix', () => {\n      const signature = crypto.createHmac('sha256', secret).update(payload).digest('hex');\n      const result = validateWebhookSignature(payload, `sha256=${signature}`, secret);\n      expect(result.isValid).toBe(true);\n    });\n\n    it('should reject invalid signature', () => {\n      const result = validateWebhookSignature(payload, 'invalid-signature', secret);\n      expect(result.isValid).toBe(false);\n      expect(result.error).toBe('Invalid signature format');\n    });\n\n    it('should reject missing parameters', () => {\n      const result = validateWebhookSignature('', '', '');\n      expect(result.isValid).toBe(false);\n      expect(result.error).toBe('Missing required parameters for signature validation');\n    });\n  });\n\n  describe('validateFileUpload', () => {\n    it('should validate safe file', () => {\n      const result = validateFileUpload('document.pdf', 'application/pdf', 1024);\n      expect(result.isValid).toBe(true);\n      expect(result.errors).toHaveLength(0);\n    });\n\n    it('should reject dangerous file extension', () => {\n      const result = validateFileUpload('malware.exe');\n      expect(result.isValid).toBe(false);\n      expect(result.errors).toContain('File type not allowed for security reasons');\n    });\n\n    it('should reject path traversal attempts', () => {\n      const result = validateFileUpload('../../../etc/passwd');\n      expect(result.isValid).toBe(false);\n      expect(result.errors).toContain('Filename contains invalid path characters');\n    });\n\n    it('should reject oversized files', () => {\n      const result = validateFileUpload('large.pdf', 'application/pdf', 200 * 1024 * 1024);\n      expect(result.isValid).toBe(false);\n      expect(result.errors).toContain('File size too large (max 104857600 bytes)');\n    });\n\n    it('should reject disallowed mimetype', () => {\n      const result = validateFileUpload('script.js', 'application/javascript');\n      expect(result.isValid).toBe(false);\n      expect(result.errors).toContain(\"Mimetype 'application/javascript' not allowed\");\n    });\n  });\n\n  describe('validateUrl', () => {\n    it('should validate HTTPS URL', () => {\n      const result = validateUrl('https://example.com/webhook');\n      expect(result.isValid).toBe(true);\n      expect(result.error).toBeUndefined();\n    });\n\n    it('should validate HTTP URL', () => {\n      const result = validateUrl('http://example.com/webhook');\n      expect(result.isValid).toBe(true);\n    });\n\n    it('should reject non-HTTP protocols', () => {\n      const result = validateUrl('ftp://example.com/file');\n      expect(result.isValid).toBe(false);\n      expect(result.error).toBe('Only HTTP and HTTPS URLs are allowed');\n    });\n\n    it('should reject localhost URLs', () => {\n      const result = validateUrl('http://localhost:3000/webhook');\n      expect(result.isValid).toBe(false);\n      expect(result.error).toBe('Private and localhost URLs are not allowed');\n    });\n\n    it('should reject private IP addresses', () => {\n      const result = validateUrl('http://192.168.1.1/webhook');\n      expect(result.isValid).toBe(false);\n      expect(result.error).toBe('Private and localhost URLs are not allowed');\n    });\n\n    it('should reject invalid URL format', () => {\n      const result = validateUrl('not-a-url');\n      expect(result.isValid).toBe(false);\n      expect(result.error).toBe('Invalid URL format');\n    });\n  });\n\n  describe('generateSecureToken', () => {\n    it('should generate token of correct length', () => {\n      const token = generateSecureToken(16);\n      expect(token).toHaveLength(32); // 16 bytes = 32 hex chars\n    });\n\n    it('should generate different tokens', () => {\n      const token1 = generateSecureToken();\n      const token2 = generateSecureToken();\n      expect(token1).not.toBe(token2);\n    });\n\n    it('should generate hex string', () => {\n      const token = generateSecureToken();\n      expect(/^[a-f0-9]+$/.test(token)).toBe(true);\n    });\n  });\n\n  describe('validateEnvironment', () => {\n    const originalEnv = process.env;\n\n    beforeEach(() => {\n      process.env = { ...originalEnv };\n    });\n\n    afterEach(() => {\n      process.env = originalEnv;\n    });\n\n    it('should validate with required environment variables', () => {\n      process.env.CLICKUP_API_TOKEN = 'pk_1234567890abcdef';\n      const result = validateEnvironment();\n      expect(result.isValid).toBe(true);\n      expect(result.errors).toHaveLength(0);\n    });\n\n    it('should reject missing API token', () => {\n      delete process.env.CLICKUP_API_TOKEN;\n      const result = validateEnvironment();\n      expect(result.isValid).toBe(false);\n      expect(result.errors).toContain('Missing required environment variable: CLICKUP_API_TOKEN');\n    });\n\n    it('should reject invalid API token', () => {\n      process.env.CLICKUP_API_TOKEN = 'invalid';\n      const result = validateEnvironment();\n      expect(result.isValid).toBe(false);\n      expect(result.errors[0]).toContain('Invalid CLICKUP_API_TOKEN');\n    });\n  });\n\n  describe('rateLimiter', () => {\n    it('should allow requests under limit', () => {\n      const config = { windowMs: 60000, maxRequests: 5 };\n      \n      for (let i = 0; i < 5; i++) {\n        expect(rateLimiter.isAllowed('test-key', config)).toBe(true);\n      }\n    });\n\n    it('should reject requests over limit', () => {\n      const config = { windowMs: 60000, maxRequests: 2 };\n      \n      expect(rateLimiter.isAllowed('test-key', config)).toBe(true);\n      expect(rateLimiter.isAllowed('test-key', config)).toBe(true);\n      expect(rateLimiter.isAllowed('test-key', config)).toBe(false);\n    });\n\n    it('should reset limits after window', async () => {\n      const config = { windowMs: 100, maxRequests: 1 };\n      \n      expect(rateLimiter.isAllowed('test-key', config)).toBe(true);\n      expect(rateLimiter.isAllowed('test-key', config)).toBe(false);\n      \n      // Wait for window to expire\n      await new Promise(resolve => setTimeout(resolve, 150));\n      \n      expect(rateLimiter.isAllowed('test-key', config)).toBe(true);\n    });\n\n    it('should handle different keys separately', () => {\n      const config = { windowMs: 60000, maxRequests: 1 };\n      \n      expect(rateLimiter.isAllowed('key1', config)).toBe(true);\n      expect(rateLimiter.isAllowed('key2', config)).toBe(true);\n      expect(rateLimiter.isAllowed('key1', config)).toBe(false);\n      expect(rateLimiter.isAllowed('key2', config)).toBe(false);\n    });\n  });\n});\n"],"version":3}