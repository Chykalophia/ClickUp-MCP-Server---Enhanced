{"version":3,"names":["cov_ectpxc8ii","actualCoverage","crypto","ClickUpClient","WebhooksEnhancedClient","constructor","apiToken","f","s","createWebhook","request","response","post","workspace_id","endpoint","events","health_check_url","secret","getWebhooks","filter","params","URLSearchParams","status","b","append","event_type","queryString","toString","get","getWebhook","webhookId","updateWebhook","updateData","put","webhook_id","deleteWebhook","delete","success","getWebhookEventHistory","limit","pingWebhook","validateWebhookSignature","expectedSignature","createHmac","update","payload","digest","receivedSignature","signature","replace","timingSafeEqual","Buffer","from","error","console","processWebhook","validate_signature","isValidSignature","JSON","stringify","valid","objectType","objectId","operation","workspaceId","userId","timestamp","Date","changes","relationships","operationMap","version","object_type","object_id","data","context","audit_context","userid","date","getWebhookStats","days","retryWebhookEvents","eventIds","event_ids"],"sources":["/Users/peterkrzyzek/Development/clickup-mcp-server/src/clickup-client/webhooks-enhanced.ts"],"sourcesContent":["import crypto from 'crypto';\nimport { ClickUpClient } from './index.js';\nimport type {\n  WebhookPayload,\n  CreateWebhookRequest,\n  UpdateWebhookRequest,\n  WebhookFilter,\n  ValidateWebhookSignatureRequest,\n  ProcessWebhookRequest\n} from '../schemas/webhook-schemas.js';\n\nexport interface WebhookResponse {\n  id: string;\n  webhook: {\n    id: string;\n    userid: number;\n    team_id: number;\n    endpoint: string;\n    client_id: string;\n    events: string[];\n    task_events: string[];\n    list_events: string[];\n    folder_events: string[];\n    space_events: string[];\n    goal_events: string[];\n    health_check_url?: string;\n    secret?: string;\n    status: 'active' | 'inactive';\n    date_created: string;\n    date_updated: string;\n  };\n}\n\nexport interface WebhookListResponse {\n  webhooks: WebhookResponse['webhook'][];\n}\n\nexport interface WebhookEventHistory {\n  id: string;\n  webhook_id: string;\n  event_type: string;\n  status: 'success' | 'failed' | 'pending';\n  response_code?: number;\n  response_body?: string;\n  attempts: number;\n  date_created: string;\n  date_updated: string;\n}\n\nexport interface WebhookEventHistoryResponse {\n  events: WebhookEventHistory[];\n}\n\nexport class WebhooksEnhancedClient extends ClickUpClient {\n  constructor(apiToken: string) {\n    super({ apiToken });\n  }\n\n  /**\n   * Create a new webhook\n   */\n  async createWebhook(request: CreateWebhookRequest): Promise<WebhookResponse> {\n    const response = await this.post<WebhookResponse>(\n      `/team/${request.workspace_id}/webhook`,\n      {\n        endpoint: request.endpoint,\n        events: request.events,\n        health_check_url: request.health_check_url,\n        secret: request.secret\n      }\n    );\n    return response;\n  }\n\n  /**\n   * Get all webhooks for a workspace\n   */\n  async getWebhooks(filter: WebhookFilter): Promise<WebhookListResponse> {\n    const params = new URLSearchParams();\n    if (filter.status) {\n      params.append('status', filter.status);\n    }\n    if (filter.event_type) {\n      params.append('event_type', filter.event_type);\n    }\n\n    const queryString = params.toString();\n    const endpoint = `/team/${filter.workspace_id}/webhook${queryString ? `?${queryString}` : ''}`;\n    \n    const response = await this.get<WebhookListResponse>(endpoint);\n    return response;\n  }\n\n  /**\n   * Get a specific webhook by ID\n   */\n  async getWebhook(webhookId: string): Promise<WebhookResponse> {\n    const response = await this.get<WebhookResponse>(`/webhook/${webhookId}`);\n    return response;\n  }\n\n  /**\n   * Update an existing webhook\n   */\n  async updateWebhook(request: UpdateWebhookRequest): Promise<WebhookResponse> {\n    const updateData: Record<string, any> = {};\n    \n    if (request.endpoint) updateData.endpoint = request.endpoint;\n    if (request.events) updateData.events = request.events;\n    if (request.health_check_url) updateData.health_check_url = request.health_check_url;\n    if (request.secret) updateData.secret = request.secret;\n    if (request.status) updateData.status = request.status;\n\n    const response = await this.put<WebhookResponse>(\n      `/webhook/${request.webhook_id}`,\n      updateData\n    );\n    return response;\n  }\n\n  /**\n   * Delete a webhook\n   */\n  async deleteWebhook(webhookId: string): Promise<{ success: boolean }> {\n    await this.delete(`/webhook/${webhookId}`);\n    return { success: true };\n  }\n\n  /**\n   * Get webhook event history\n   */\n  async getWebhookEventHistory(webhookId: string, limit?: number): Promise<WebhookEventHistoryResponse> {\n    const params = new URLSearchParams();\n    if (limit) {\n      params.append('limit', limit.toString());\n    }\n\n    const queryString = params.toString();\n    const endpoint = `/webhook/${webhookId}/events${queryString ? `?${queryString}` : ''}`;\n    \n    const response = await this.get<WebhookEventHistoryResponse>(endpoint);\n    return response;\n  }\n\n  /**\n   * Ping a webhook (test endpoint)\n   */\n  async pingWebhook(webhookId: string): Promise<{ success: boolean; response_code?: number }> {\n    const response = await this.post<{ success: boolean; response_code?: number }>(\n      `/webhook/${webhookId}/ping`\n    );\n    return response;\n  }\n\n  /**\n   * Validate webhook signature using HMAC-SHA256\n   */\n  validateWebhookSignature(request: ValidateWebhookSignatureRequest): boolean {\n    try {\n      const expectedSignature = crypto\n        .createHmac('sha256', request.secret)\n        .update(request.payload)\n        .digest('hex');\n      \n      // ClickUp sends signature as 'sha256=<hash>'\n      const receivedSignature = request.signature.replace('sha256=', '');\n      \n      return crypto.timingSafeEqual(\n        Buffer.from(expectedSignature, 'hex'),\n        Buffer.from(receivedSignature, 'hex')\n      );\n    } catch (error) {\n      console.error('Error validating webhook signature:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Process incoming webhook payload\n   */\n  async processWebhook(request: ProcessWebhookRequest): Promise<{\n    valid: boolean;\n    objectType: string;\n    objectId: string | number;\n    operation: string;\n    workspaceId: number;\n    userId: number;\n    timestamp: Date;\n    changes: Array<{ field: string; before?: any; after?: any }>;\n    relationships: Array<{ type: string; object_type: string; object_id: string | number }>;\n  }> {\n    // Validate signature if required\n    if (request.validate_signature && request.signature && request.secret) {\n      const isValidSignature = this.validateWebhookSignature({\n        payload: JSON.stringify(request.payload),\n        signature: request.signature,\n        secret: request.secret\n      });\n\n      if (!isValidSignature) {\n        return {\n          valid: false,\n          objectType: '',\n          objectId: '',\n          operation: '',\n          workspaceId: 0,\n          userId: 0,\n          timestamp: new Date(),\n          changes: [],\n          relationships: []\n        };\n      }\n    }\n\n    const payload = request.payload;\n    const operationMap: Record<string, string> = {\n      'c': 'create',\n      'u': 'update',\n      'd': 'delete'\n    };\n\n    return {\n      valid: true,\n      objectType: payload.version.object_type,\n      objectId: payload.version.object_id,\n      operation: operationMap[payload.version.operation] || payload.version.operation,\n      workspaceId: payload.version.workspace_id,\n      userId: payload.version.data.context.audit_context.userid,\n      timestamp: new Date(payload.date),\n      changes: payload.version.data.changes,\n      relationships: payload.version.data.relationships\n    };\n  }\n\n  /**\n   * Get webhook statistics\n   */\n  async getWebhookStats(webhookId: string, days?: number): Promise<{\n    total_events: number;\n    successful_events: number;\n    failed_events: number;\n    success_rate: number;\n    average_response_time: number;\n  }> {\n    const params = new URLSearchParams();\n    if (days) {\n      params.append('days', days.toString());\n    }\n\n    const queryString = params.toString();\n    const endpoint = `/webhook/${webhookId}/stats${queryString ? `?${queryString}` : ''}`;\n    \n    const response = await this.get<{\n      total_events: number;\n      successful_events: number;\n      failed_events: number;\n      success_rate: number;\n      average_response_time: number;\n    }>(endpoint);\n    \n    return response;\n  }\n\n  /**\n   * Retry failed webhook events\n   */\n  async retryWebhookEvents(webhookId: string, eventIds?: string[]): Promise<{ success: boolean; retried_count: number }> {\n    const response = await this.post<{ success: boolean; retried_count: number }>(\n      `/webhook/${webhookId}/retry`,\n      eventIds ? { event_ids: eventIds } : {}\n    );\n    return response;\n  }\n}\n"],"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","ignoreList":[]}