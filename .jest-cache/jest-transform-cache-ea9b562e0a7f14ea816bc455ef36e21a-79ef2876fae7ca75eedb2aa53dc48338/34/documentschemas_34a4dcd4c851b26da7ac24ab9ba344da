3f9bbe4df2b006e15f4a2b0bfb16058f
/* istanbul ignore next */
function cov_2m1eths84u() {
  var path = "/Users/peterkrzyzek/Development/clickup-mcp-server/src/schemas/document-schemas.ts";
  var hash = "5d32efaa39296ecbca7da9a4c11fe8575df4a64d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/peterkrzyzek/Development/clickup-mcp-server/src/schemas/document-schemas.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 35
        },
        end: {
          line: 5,
          column: 2
        }
      },
      "1": {
        start: {
          line: 7,
          column: 31
        },
        end: {
          line: 18,
          column: 2
        }
      },
      "2": {
        start: {
          line: 15,
          column: 18
        },
        end: {
          line: 15,
          column: 70
        }
      },
      "3": {
        start: {
          line: 20,
          column: 31
        },
        end: {
          line: 27,
          column: 2
        }
      },
      "4": {
        start: {
          line: 24,
          column: 18
        },
        end: {
          line: 24,
          column: 100
        }
      },
      "5": {
        start: {
          line: 29,
          column: 32
        },
        end: {
          line: 35,
          column: 2
        }
      },
      "6": {
        start: {
          line: 37,
          column: 32
        },
        end: {
          line: 46,
          column: 2
        }
      },
      "7": {
        start: {
          line: 42,
          column: 18
        },
        end: {
          line: 43,
          column: 68
        }
      },
      "8": {
        start: {
          line: 48,
          column: 35
        },
        end: {
          line: 57,
          column: 2
        }
      },
      "9": {
        start: {
          line: 54,
          column: 18
        },
        end: {
          line: 54,
          column: 46
        }
      },
      "10": {
        start: {
          line: 59,
          column: 40
        },
        end: {
          line: 68,
          column: 2
        }
      },
      "11": {
        start: {
          line: 65,
          column: 18
        },
        end: {
          line: 65,
          column: 70
        }
      },
      "12": {
        start: {
          line: 70,
          column: 35
        },
        end: {
          line: 75,
          column: 2
        }
      },
      "13": {
        start: {
          line: 77,
          column: 38
        },
        end: {
          line: 80,
          column: 2
        }
      },
      "14": {
        start: {
          line: 82,
          column: 27
        },
        end: {
          line: 82,
          column: 71
        }
      },
      "15": {
        start: {
          line: 84,
          column: 28
        },
        end: {
          line: 84,
          column: 68
        }
      },
      "16": {
        start: {
          line: 86,
          column: 33
        },
        end: {
          line: 86,
          column: 78
        }
      },
      "17": {
        start: {
          line: 88,
          column: 35
        },
        end: {
          line: 167,
          column: 1
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 15,
            column: 10
          },
          end: {
            line: 15,
            column: 11
          }
        },
        loc: {
          start: {
            line: 15,
            column: 18
          },
          end: {
            line: 15,
            column: 70
          }
        },
        line: 15
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 24,
            column: 10
          },
          end: {
            line: 24,
            column: 11
          }
        },
        loc: {
          start: {
            line: 24,
            column: 18
          },
          end: {
            line: 24,
            column: 100
          }
        },
        line: 24
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 42,
            column: 10
          },
          end: {
            line: 42,
            column: 11
          }
        },
        loc: {
          start: {
            line: 42,
            column: 18
          },
          end: {
            line: 43,
            column: 68
          }
        },
        line: 42
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 54,
            column: 10
          },
          end: {
            line: 54,
            column: 11
          }
        },
        loc: {
          start: {
            line: 54,
            column: 18
          },
          end: {
            line: 54,
            column: 46
          }
        },
        line: 54
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 65,
            column: 10
          },
          end: {
            line: 65,
            column: 11
          }
        },
        loc: {
          start: {
            line: 65,
            column: 18
          },
          end: {
            line: 65,
            column: 70
          }
        },
        line: 65
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 15,
            column: 18
          },
          end: {
            line: 15,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 15,
            column: 18
          },
          end: {
            line: 15,
            column: 35
          }
        }, {
          start: {
            line: 15,
            column: 39
          },
          end: {
            line: 15,
            column: 52
          }
        }, {
          start: {
            line: 15,
            column: 56
          },
          end: {
            line: 15,
            column: 70
          }
        }],
        line: 15
      },
      "1": {
        loc: {
          start: {
            line: 24,
            column: 18
          },
          end: {
            line: 24,
            column: 100
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 18
          },
          end: {
            line: 24,
            column: 41
          }
        }, {
          start: {
            line: 24,
            column: 45
          },
          end: {
            line: 24,
            column: 71
          }
        }, {
          start: {
            line: 24,
            column: 75
          },
          end: {
            line: 24,
            column: 100
          }
        }],
        line: 24
      },
      "2": {
        loc: {
          start: {
            line: 42,
            column: 18
          },
          end: {
            line: 43,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 18
          },
          end: {
            line: 42,
            column: 41
          }
        }, {
          start: {
            line: 42,
            column: 45
          },
          end: {
            line: 42,
            column: 71
          }
        }, {
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 43,
            column: 37
          }
        }, {
          start: {
            line: 43,
            column: 41
          },
          end: {
            line: 43,
            column: 68
          }
        }],
        line: 42
      },
      "3": {
        loc: {
          start: {
            line: 65,
            column: 18
          },
          end: {
            line: 65,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 18
          },
          end: {
            line: 65,
            column: 35
          }
        }, {
          start: {
            line: 65,
            column: 39
          },
          end: {
            line: 65,
            column: 52
          }
        }, {
          start: {
            line: 65,
            column: 56
          },
          end: {
            line: 65,
            column: 70
          }
        }],
        line: 65
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0, 0],
      "2": [0, 0, 0, 0],
      "3": [0, 0, 0]
    },
    inputSourceMap: {
      file: "/Users/peterkrzyzek/Development/clickup-mcp-server/src/schemas/document-schemas.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/peterkrzyzek/Development/clickup-mcp-server/src/schemas/document-schemas.ts"],
      sourcesContent: ["import { z } from 'zod';\n\n// Content format validation\nexport const ContentFormatSchema = z.enum([\n  'markdown', 'html', 'text/md', 'text/plain', 'text/html'\n]);\n\n// Document creation schema\nexport const CreateDocSchema = z.object({\n  workspace_id: z.string().optional(),\n  space_id: z.string().optional(),\n  folder_id: z.string().optional(),\n  name: z.string().min(1, 'Document name is required').max(255, 'Document name too long'),\n  content: z.string().optional(),\n  public: z.boolean().optional().default(false),\n  template_id: z.string().optional()\n}).refine(data => \n  data.workspace_id || data.space_id || data.folder_id,\n  { \n    message: \"Must specify workspace_id, space_id, or folder_id\",\n    path: ['workspace_id']\n  }\n);\n\n// Document update schema\nexport const UpdateDocSchema = z.object({\n  name: z.string().min(1, 'Document name cannot be empty').max(255, 'Document name too long').optional(),\n  content: z.string().optional(),\n  public: z.boolean().optional()\n}).refine(data => \n  data.name !== undefined || data.content !== undefined || data.public !== undefined,\n  { \n    message: \"Must specify at least one field to update\",\n    path: ['name']\n  }\n);\n\n// Page creation schema\nexport const CreatePageSchema = z.object({\n  name: z.string().min(1, 'Page name is required').max(255, 'Page name too long'),\n  content: z.string().min(1, 'Page content is required'),\n  content_format: z.enum(['markdown', 'html']).optional().default('markdown'),\n  parent_page_id: z.string().optional(),\n  position: z.number().int().min(0, 'Position must be non-negative').optional()\n});\n\n// Page update schema\nexport const UpdatePageSchema = z.object({\n  name: z.string().min(1, 'Page name cannot be empty').max(255, 'Page name too long').optional(),\n  content: z.string().optional(),\n  content_format: z.enum(['markdown', 'html']).optional(),\n  position: z.number().int().min(0, 'Position must be non-negative').optional()\n}).refine(data => \n  data.name !== undefined || data.content !== undefined || \n  data.content_format !== undefined || data.position !== undefined,\n  { \n    message: \"Must specify at least one field to update\",\n    path: ['name']\n  }\n);\n\n// Sharing configuration schema\nexport const SharingConfigSchema = z.object({\n  public: z.boolean().optional(),\n  public_share_expires_on: z.number().int().positive('Expiration must be a positive timestamp').optional(),\n  public_fields: z.array(z.string()).optional(),\n  team_sharing: z.boolean().optional(),\n  guest_sharing: z.boolean().optional()\n}).refine(data => \n  Object.keys(data).length > 0,\n  { \n    message: \"Must specify at least one sharing setting to update\",\n    path: ['public']\n  }\n);\n\n// Template creation schema\nexport const CreateFromTemplateSchema = z.object({\n  workspace_id: z.string().optional(),\n  space_id: z.string().optional(),\n  folder_id: z.string().optional(),\n  name: z.string().min(1, 'Document name is required').max(255, 'Document name too long'),\n  template_variables: z.record(z.any()).optional()\n}).refine(data => \n  data.workspace_id || data.space_id || data.folder_id,\n  { \n    message: \"Must specify workspace_id, space_id, or folder_id\",\n    path: ['workspace_id']\n  }\n);\n\n// Get docs parameters schema\nexport const GetDocsParamsSchema = z.object({\n  cursor: z.string().optional(),\n  deleted: z.boolean().optional().default(false),\n  archived: z.boolean().optional().default(false),\n  limit: z.number().int().min(1).max(100).optional().default(50)\n});\n\n// Search docs parameters schema\nexport const SearchDocsParamsSchema = z.object({\n  query: z.string().min(1, 'Search query is required'),\n  cursor: z.string().optional()\n});\n\n// Document ID validation\nexport const DocIdSchema = z.string().min(1, 'Document ID is required');\n\n// Page ID validation\nexport const PageIdSchema = z.string().min(1, 'Page ID is required');\n\n// Workspace ID validation\nexport const WorkspaceIdSchema = z.string().min(1, 'Workspace ID is required');\n\n// Combined schemas for tool validation\nexport const DocumentToolSchemas = {\n  // Document operations\n  createDoc: CreateDocSchema,\n  updateDoc: z.object({\n    doc_id: DocIdSchema,\n    name: z.string().min(1).optional(),\n    content: z.string().optional(),\n    public: z.boolean().optional()\n  }),\n  deleteDoc: z.object({\n    doc_id: DocIdSchema\n  }),\n  getDoc: z.object({\n    doc_id: DocIdSchema\n  }),\n\n  // Page operations\n  createPage: z.object({\n    doc_id: DocIdSchema,\n    name: z.string().min(1),\n    content: z.string().optional(),\n    content_format: z.enum(['markdown', 'html']).optional().default('markdown'),\n    position: z.number().min(0).optional()\n  }),\n  updatePage: z.object({\n    doc_id: DocIdSchema,\n    page_id: PageIdSchema,\n    name: z.string().min(1).optional(),\n    content: z.string().optional(),\n    content_format: z.enum(['markdown', 'html']).optional(),\n    position: z.number().min(0).optional()\n  }),\n  deletePage: z.object({\n    doc_id: DocIdSchema,\n    page_id: PageIdSchema\n  }),\n  getPage: z.object({\n    doc_id: DocIdSchema,\n    page_id: PageIdSchema,\n    content_format: ContentFormatSchema.optional()\n  }),\n\n  // Sharing operations\n  getDocSharing: z.object({\n    doc_id: DocIdSchema\n  }),\n  updateDocSharing: z.object({\n    doc_id: DocIdSchema,\n    public: z.boolean().optional(),\n    public_share_expires_on: z.number().optional(),\n    public_fields: z.array(z.string()).optional(),\n    team_sharing: z.boolean().optional(),\n    guest_sharing: z.boolean().optional()\n  }),\n\n  // Template operations\n  createDocFromTemplate: z.object({\n    template_id: z.string().min(1, 'Template ID is required'),\n    workspace_id: z.string().optional(),\n    space_id: z.string().optional(),\n    folder_id: z.string().optional(),\n    name: z.string().min(1),\n    template_variables: z.record(z.any()).optional()\n  }),\n\n  // Read operations\n  getDocsFromWorkspace: z.object({\n    workspace_id: WorkspaceIdSchema,\n    cursor: z.string().optional(),\n    deleted: z.boolean().optional().default(false),\n    archived: z.boolean().optional().default(false),\n    limit: z.number().min(1).max(100).optional().default(25)\n  }),\n  getDocPages: z.object({\n    workspace_id: WorkspaceIdSchema,\n    doc_id: DocIdSchema,\n    content_format: ContentFormatSchema.optional().default('text/md')\n  }),\n  searchDocs: z.object({\n    workspace_id: WorkspaceIdSchema,\n    query: z.string().min(1),\n    cursor: z.string().optional()\n  })\n};\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5d32efaa39296ecbca7da9a4c11fe8575df4a64d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2m1eths84u = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2m1eths84u();
import { z } from 'zod';
// Content format validation
export const ContentFormatSchema =
/* istanbul ignore next */
(cov_2m1eths84u().s[0]++, z.enum(['markdown', 'html', 'text/md', 'text/plain', 'text/html']));
// Document creation schema
export const CreateDocSchema =
/* istanbul ignore next */
(cov_2m1eths84u().s[1]++, z.object({
  workspace_id: z.string().optional(),
  space_id: z.string().optional(),
  folder_id: z.string().optional(),
  name: z.string().min(1, 'Document name is required').max(255, 'Document name too long'),
  content: z.string().optional(),
  public: z.boolean().optional().default(false),
  template_id: z.string().optional()
}).refine(data => {
  /* istanbul ignore next */
  cov_2m1eths84u().f[0]++;
  cov_2m1eths84u().s[2]++;
  return /* istanbul ignore next */(cov_2m1eths84u().b[0][0]++, data.workspace_id) ||
  /* istanbul ignore next */
  (cov_2m1eths84u().b[0][1]++, data.space_id) ||
  /* istanbul ignore next */
  (cov_2m1eths84u().b[0][2]++, data.folder_id);
}, {
  message: "Must specify workspace_id, space_id, or folder_id",
  path: ['workspace_id']
}));
// Document update schema
export const UpdateDocSchema =
/* istanbul ignore next */
(cov_2m1eths84u().s[3]++, z.object({
  name: z.string().min(1, 'Document name cannot be empty').max(255, 'Document name too long').optional(),
  content: z.string().optional(),
  public: z.boolean().optional()
}).refine(data => {
  /* istanbul ignore next */
  cov_2m1eths84u().f[1]++;
  cov_2m1eths84u().s[4]++;
  return /* istanbul ignore next */(cov_2m1eths84u().b[1][0]++, data.name !== undefined) ||
  /* istanbul ignore next */
  (cov_2m1eths84u().b[1][1]++, data.content !== undefined) ||
  /* istanbul ignore next */
  (cov_2m1eths84u().b[1][2]++, data.public !== undefined);
}, {
  message: "Must specify at least one field to update",
  path: ['name']
}));
// Page creation schema
export const CreatePageSchema =
/* istanbul ignore next */
(cov_2m1eths84u().s[5]++, z.object({
  name: z.string().min(1, 'Page name is required').max(255, 'Page name too long'),
  content: z.string().min(1, 'Page content is required'),
  content_format: z.enum(['markdown', 'html']).optional().default('markdown'),
  parent_page_id: z.string().optional(),
  position: z.number().int().min(0, 'Position must be non-negative').optional()
}));
// Page update schema
export const UpdatePageSchema =
/* istanbul ignore next */
(cov_2m1eths84u().s[6]++, z.object({
  name: z.string().min(1, 'Page name cannot be empty').max(255, 'Page name too long').optional(),
  content: z.string().optional(),
  content_format: z.enum(['markdown', 'html']).optional(),
  position: z.number().int().min(0, 'Position must be non-negative').optional()
}).refine(data => {
  /* istanbul ignore next */
  cov_2m1eths84u().f[2]++;
  cov_2m1eths84u().s[7]++;
  return /* istanbul ignore next */(cov_2m1eths84u().b[2][0]++, data.name !== undefined) ||
  /* istanbul ignore next */
  (cov_2m1eths84u().b[2][1]++, data.content !== undefined) ||
  /* istanbul ignore next */
  (cov_2m1eths84u().b[2][2]++, data.content_format !== undefined) ||
  /* istanbul ignore next */
  (cov_2m1eths84u().b[2][3]++, data.position !== undefined);
}, {
  message: "Must specify at least one field to update",
  path: ['name']
}));
// Sharing configuration schema
export const SharingConfigSchema =
/* istanbul ignore next */
(cov_2m1eths84u().s[8]++, z.object({
  public: z.boolean().optional(),
  public_share_expires_on: z.number().int().positive('Expiration must be a positive timestamp').optional(),
  public_fields: z.array(z.string()).optional(),
  team_sharing: z.boolean().optional(),
  guest_sharing: z.boolean().optional()
}).refine(data => {
  /* istanbul ignore next */
  cov_2m1eths84u().f[3]++;
  cov_2m1eths84u().s[9]++;
  return Object.keys(data).length > 0;
}, {
  message: "Must specify at least one sharing setting to update",
  path: ['public']
}));
// Template creation schema
export const CreateFromTemplateSchema =
/* istanbul ignore next */
(cov_2m1eths84u().s[10]++, z.object({
  workspace_id: z.string().optional(),
  space_id: z.string().optional(),
  folder_id: z.string().optional(),
  name: z.string().min(1, 'Document name is required').max(255, 'Document name too long'),
  template_variables: z.record(z.any()).optional()
}).refine(data => {
  /* istanbul ignore next */
  cov_2m1eths84u().f[4]++;
  cov_2m1eths84u().s[11]++;
  return /* istanbul ignore next */(cov_2m1eths84u().b[3][0]++, data.workspace_id) ||
  /* istanbul ignore next */
  (cov_2m1eths84u().b[3][1]++, data.space_id) ||
  /* istanbul ignore next */
  (cov_2m1eths84u().b[3][2]++, data.folder_id);
}, {
  message: "Must specify workspace_id, space_id, or folder_id",
  path: ['workspace_id']
}));
// Get docs parameters schema
export const GetDocsParamsSchema =
/* istanbul ignore next */
(cov_2m1eths84u().s[12]++, z.object({
  cursor: z.string().optional(),
  deleted: z.boolean().optional().default(false),
  archived: z.boolean().optional().default(false),
  limit: z.number().int().min(1).max(100).optional().default(50)
}));
// Search docs parameters schema
export const SearchDocsParamsSchema =
/* istanbul ignore next */
(cov_2m1eths84u().s[13]++, z.object({
  query: z.string().min(1, 'Search query is required'),
  cursor: z.string().optional()
}));
// Document ID validation
export const DocIdSchema =
/* istanbul ignore next */
(cov_2m1eths84u().s[14]++, z.string().min(1, 'Document ID is required'));
// Page ID validation
export const PageIdSchema =
/* istanbul ignore next */
(cov_2m1eths84u().s[15]++, z.string().min(1, 'Page ID is required'));
// Workspace ID validation
export const WorkspaceIdSchema =
/* istanbul ignore next */
(cov_2m1eths84u().s[16]++, z.string().min(1, 'Workspace ID is required'));
// Combined schemas for tool validation
export const DocumentToolSchemas =
/* istanbul ignore next */
(cov_2m1eths84u().s[17]++, {
  // Document operations
  createDoc: CreateDocSchema,
  updateDoc: z.object({
    doc_id: DocIdSchema,
    name: z.string().min(1).optional(),
    content: z.string().optional(),
    public: z.boolean().optional()
  }),
  deleteDoc: z.object({
    doc_id: DocIdSchema
  }),
  getDoc: z.object({
    doc_id: DocIdSchema
  }),
  // Page operations
  createPage: z.object({
    doc_id: DocIdSchema,
    name: z.string().min(1),
    content: z.string().optional(),
    content_format: z.enum(['markdown', 'html']).optional().default('markdown'),
    position: z.number().min(0).optional()
  }),
  updatePage: z.object({
    doc_id: DocIdSchema,
    page_id: PageIdSchema,
    name: z.string().min(1).optional(),
    content: z.string().optional(),
    content_format: z.enum(['markdown', 'html']).optional(),
    position: z.number().min(0).optional()
  }),
  deletePage: z.object({
    doc_id: DocIdSchema,
    page_id: PageIdSchema
  }),
  getPage: z.object({
    doc_id: DocIdSchema,
    page_id: PageIdSchema,
    content_format: ContentFormatSchema.optional()
  }),
  // Sharing operations
  getDocSharing: z.object({
    doc_id: DocIdSchema
  }),
  updateDocSharing: z.object({
    doc_id: DocIdSchema,
    public: z.boolean().optional(),
    public_share_expires_on: z.number().optional(),
    public_fields: z.array(z.string()).optional(),
    team_sharing: z.boolean().optional(),
    guest_sharing: z.boolean().optional()
  }),
  // Template operations
  createDocFromTemplate: z.object({
    template_id: z.string().min(1, 'Template ID is required'),
    workspace_id: z.string().optional(),
    space_id: z.string().optional(),
    folder_id: z.string().optional(),
    name: z.string().min(1),
    template_variables: z.record(z.any()).optional()
  }),
  // Read operations
  getDocsFromWorkspace: z.object({
    workspace_id: WorkspaceIdSchema,
    cursor: z.string().optional(),
    deleted: z.boolean().optional().default(false),
    archived: z.boolean().optional().default(false),
    limit: z.number().min(1).max(100).optional().default(25)
  }),
  getDocPages: z.object({
    workspace_id: WorkspaceIdSchema,
    doc_id: DocIdSchema,
    content_format: ContentFormatSchema.optional().default('text/md')
  }),
  searchDocs: z.object({
    workspace_id: WorkspaceIdSchema,
    query: z.string().min(1),
    cursor: z.string().optional()
  })
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,