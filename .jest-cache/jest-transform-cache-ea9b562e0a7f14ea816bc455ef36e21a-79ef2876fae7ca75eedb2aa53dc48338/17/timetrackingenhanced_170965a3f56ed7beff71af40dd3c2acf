c7caf2caaf776073939534663f2f9f7e
/* istanbul ignore next */
function cov_4hbxgawhh() {
  var path = "/Users/peterkrzyzek/Development/clickup-mcp-server/src/clickup-client/time-tracking-enhanced.ts";
  var hash = "e8b2bfbfa5b091d083de0ba70b91a4e9578ae8fe";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/peterkrzyzek/Development/clickup-mcp-server/src/clickup-client/time-tracking-enhanced.ts",
    statementMap: {
      "0": {
        start: {
          line: 7,
          column: 8
        },
        end: {
          line: 7,
          column: 29
        }
      },
      "1": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 10,
          column: 46
        }
      },
      "2": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 46,
          column: 9
        }
      },
      "3": {
        start: {
          line: 20,
          column: 32
        },
        end: {
          line: 20,
          column: 53
        }
      },
      "4": {
        start: {
          line: 21,
          column: 12
        },
        end: {
          line: 22,
          column: 79
        }
      },
      "5": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 79
        }
      },
      "6": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 24,
          column: 75
        }
      },
      "7": {
        start: {
          line: 24,
          column: 16
        },
        end: {
          line: 24,
          column: 75
        }
      },
      "8": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 26,
          column: 75
        }
      },
      "9": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 75
        }
      },
      "10": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 28,
          column: 64
        }
      },
      "11": {
        start: {
          line: 28,
          column: 16
        },
        end: {
          line: 28,
          column: 64
        }
      },
      "12": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 30,
          column: 69
        }
      },
      "13": {
        start: {
          line: 30,
          column: 16
        },
        end: {
          line: 30,
          column: 69
        }
      },
      "14": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 32,
          column: 64
        }
      },
      "15": {
        start: {
          line: 32,
          column: 16
        },
        end: {
          line: 32,
          column: 64
        }
      },
      "16": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 34,
          column: 66
        }
      },
      "17": {
        start: {
          line: 34,
          column: 16
        },
        end: {
          line: 34,
          column: 66
        }
      },
      "18": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 36,
          column: 62
        }
      },
      "19": {
        start: {
          line: 36,
          column: 16
        },
        end: {
          line: 36,
          column: 62
        }
      },
      "20": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 38,
          column: 62
        }
      },
      "21": {
        start: {
          line: 38,
          column: 16
        },
        end: {
          line: 38,
          column: 62
        }
      },
      "22": {
        start: {
          line: 39,
          column: 29
        },
        end: {
          line: 39,
          column: 85
        }
      },
      "23": {
        start: {
          line: 40,
          column: 29
        },
        end: {
          line: 40,
          column: 72
        }
      },
      "24": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 41,
          column: 44
        }
      },
      "25": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 44,
          column: 64
        }
      },
      "26": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 45,
          column: 91
        }
      },
      "27": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 60,
          column: 9
        }
      },
      "28": {
        start: {
          line: 53,
          column: 29
        },
        end: {
          line: 53,
          column: 59
        }
      },
      "29": {
        start: {
          line: 54,
          column: 29
        },
        end: {
          line: 54,
          column: 81
        }
      },
      "30": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 38
        }
      },
      "31": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 58,
          column: 63
        }
      },
      "32": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 59,
          column: 92
        }
      },
      "33": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 74,
          column: 9
        }
      },
      "34": {
        start: {
          line: 67,
          column: 29
        },
        end: {
          line: 67,
          column: 70
        }
      },
      "35": {
        start: {
          line: 68,
          column: 29
        },
        end: {
          line: 68,
          column: 80
        }
      },
      "36": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 38
        }
      },
      "37": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 63
        }
      },
      "38": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 103
        }
      },
      "39": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 87,
          column: 9
        }
      },
      "40": {
        start: {
          line: 81,
          column: 29
        },
        end: {
          line: 81,
          column: 70
        }
      },
      "41": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 59
        }
      },
      "42": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 63
        }
      },
      "43": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 86,
          column: 103
        }
      },
      "44": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 107,
          column: 9
        }
      },
      "45": {
        start: {
          line: 97,
          column: 32
        },
        end: {
          line: 97,
          column: 53
        }
      },
      "46": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 99,
          column: 68
        }
      },
      "47": {
        start: {
          line: 99,
          column: 16
        },
        end: {
          line: 99,
          column: 68
        }
      },
      "48": {
        start: {
          line: 100,
          column: 29
        },
        end: {
          line: 100,
          column: 93
        }
      },
      "49": {
        start: {
          line: 101,
          column: 29
        },
        end: {
          line: 101,
          column: 72
        }
      },
      "50": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 102,
          column: 44
        }
      },
      "51": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 105,
          column: 66
        }
      },
      "52": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 93
        }
      },
      "53": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 121,
          column: 9
        }
      },
      "54": {
        start: {
          line: 114,
          column: 29
        },
        end: {
          line: 114,
          column: 76
        }
      },
      "55": {
        start: {
          line: 115,
          column: 27
        },
        end: {
          line: 115,
          column: 64
        }
      },
      "56": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 116,
          column: 65
        }
      },
      "57": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 119,
          column: 58
        }
      },
      "58": {
        start: {
          line: 120,
          column: 12
        },
        end: {
          line: 120,
          column: 97
        }
      },
      "59": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 135,
          column: 9
        }
      },
      "60": {
        start: {
          line: 128,
          column: 29
        },
        end: {
          line: 128,
          column: 75
        }
      },
      "61": {
        start: {
          line: 129,
          column: 27
        },
        end: {
          line: 129,
          column: 58
        }
      },
      "62": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 65
        }
      },
      "63": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 133,
          column: 58
        }
      },
      "64": {
        start: {
          line: 134,
          column: 12
        },
        end: {
          line: 134,
          column: 96
        }
      },
      "65": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 207,
          column: 9
        }
      },
      "66": {
        start: {
          line: 146,
          column: 32
        },
        end: {
          line: 146,
          column: 73
        }
      },
      "67": {
        start: {
          line: 148,
          column: 32
        },
        end: {
          line: 148,
          column: 33
        }
      },
      "68": {
        start: {
          line: 149,
          column: 35
        },
        end: {
          line: 149,
          column: 36
        }
      },
      "69": {
        start: {
          line: 150,
          column: 38
        },
        end: {
          line: 150,
          column: 39
        }
      },
      "70": {
        start: {
          line: 151,
          column: 27
        },
        end: {
          line: 151,
          column: 29
        }
      },
      "71": {
        start: {
          line: 152,
          column: 27
        },
        end: {
          line: 152,
          column: 29
        }
      },
      "72": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 194,
          column: 13
        }
      },
      "73": {
        start: {
          line: 154,
          column: 33
        },
        end: {
          line: 154,
          column: 57
        }
      },
      "74": {
        start: {
          line: 155,
          column: 16
        },
        end: {
          line: 155,
          column: 42
        }
      },
      "75": {
        start: {
          line: 156,
          column: 16
        },
        end: {
          line: 161,
          column: 17
        }
      },
      "76": {
        start: {
          line: 157,
          column: 20
        },
        end: {
          line: 157,
          column: 49
        }
      },
      "77": {
        start: {
          line: 160,
          column: 20
        },
        end: {
          line: 160,
          column: 52
        }
      },
      "78": {
        start: {
          line: 163,
          column: 31
        },
        end: {
          line: 163,
          column: 55
        }
      },
      "79": {
        start: {
          line: 164,
          column: 16
        },
        end: {
          line: 171,
          column: 17
        }
      },
      "80": {
        start: {
          line: 165,
          column: 20
        },
        end: {
          line: 170,
          column: 22
        }
      },
      "81": {
        start: {
          line: 172,
          column: 16
        },
        end: {
          line: 172,
          column: 52
        }
      },
      "82": {
        start: {
          line: 173,
          column: 16
        },
        end: {
          line: 175,
          column: 17
        }
      },
      "83": {
        start: {
          line: 174,
          column: 20
        },
        end: {
          line: 174,
          column: 65
        }
      },
      "84": {
        start: {
          line: 176,
          column: 16
        },
        end: {
          line: 176,
          column: 47
        }
      },
      "85": {
        start: {
          line: 178,
          column: 16
        },
        end: {
          line: 193,
          column: 17
        }
      },
      "86": {
        start: {
          line: 179,
          column: 35
        },
        end: {
          line: 179,
          column: 48
        }
      },
      "87": {
        start: {
          line: 180,
          column: 20
        },
        end: {
          line: 187,
          column: 21
        }
      },
      "88": {
        start: {
          line: 181,
          column: 24
        },
        end: {
          line: 186,
          column: 26
        }
      },
      "89": {
        start: {
          line: 188,
          column: 20
        },
        end: {
          line: 188,
          column: 56
        }
      },
      "90": {
        start: {
          line: 189,
          column: 20
        },
        end: {
          line: 191,
          column: 21
        }
      },
      "91": {
        start: {
          line: 190,
          column: 24
        },
        end: {
          line: 190,
          column: 69
        }
      },
      "92": {
        start: {
          line: 192,
          column: 20
        },
        end: {
          line: 192,
          column: 51
        }
      },
      "93": {
        start: {
          line: 195,
          column: 12
        },
        end: {
          line: 202,
          column: 14
        }
      },
      "94": {
        start: {
          line: 205,
          column: 12
        },
        end: {
          line: 205,
          column: 64
        }
      },
      "95": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 206,
          column: 91
        }
      },
      "96": {
        start: {
          line: 216,
          column: 22
        },
        end: {
          line: 216,
          column: 65
        }
      },
      "97": {
        start: {
          line: 217,
          column: 24
        },
        end: {
          line: 217,
          column: 83
        }
      },
      "98": {
        start: {
          line: 218,
          column: 24
        },
        end: {
          line: 218,
          column: 71
        }
      },
      "99": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 231,
          column: 9
        }
      },
      "100": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 222,
          column: 42
        }
      },
      "101": {
        start: {
          line: 224,
          column: 13
        },
        end: {
          line: 231,
          column: 9
        }
      },
      "102": {
        start: {
          line: 225,
          column: 12
        },
        end: {
          line: 227,
          column: 32
        }
      },
      "103": {
        start: {
          line: 230,
          column: 12
        },
        end: {
          line: 230,
          column: 57
        }
      },
      "104": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 248,
          column: 9
        }
      },
      "105": {
        start: {
          line: 239,
          column: 16
        },
        end: {
          line: 239,
          column: 36
        }
      },
      "106": {
        start: {
          line: 241,
          column: 16
        },
        end: {
          line: 241,
          column: 55
        }
      },
      "107": {
        start: {
          line: 243,
          column: 16
        },
        end: {
          line: 243,
          column: 62
        }
      },
      "108": {
        start: {
          line: 245,
          column: 16
        },
        end: {
          line: 245,
          column: 67
        }
      },
      "109": {
        start: {
          line: 247,
          column: 16
        },
        end: {
          line: 247,
          column: 36
        }
      },
      "110": {
        start: {
          line: 254,
          column: 8
        },
        end: {
          line: 255,
          column: 24
        }
      },
      "111": {
        start: {
          line: 255,
          column: 12
        },
        end: {
          line: 255,
          column: 24
        }
      },
      "112": {
        start: {
          line: 256,
          column: 8
        },
        end: {
          line: 256,
          column: 27
        }
      },
      "113": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 262,
          column: 26
        }
      },
      "114": {
        start: {
          line: 268,
          column: 8
        },
        end: {
          line: 287,
          column: 9
        }
      },
      "115": {
        start: {
          line: 269,
          column: 27
        },
        end: {
          line: 269,
          column: 49
        }
      },
      "116": {
        start: {
          line: 270,
          column: 28
        },
        end: {
          line: 270,
          column: 74
        }
      },
      "117": {
        start: {
          line: 271,
          column: 12
        },
        end: {
          line: 286,
          column: 13
        }
      },
      "118": {
        start: {
          line: 273,
          column: 20
        },
        end: {
          line: 273,
          column: 81
        }
      },
      "119": {
        start: {
          line: 275,
          column: 20
        },
        end: {
          line: 275,
          column: 92
        }
      },
      "120": {
        start: {
          line: 277,
          column: 20
        },
        end: {
          line: 277,
          column: 99
        }
      },
      "121": {
        start: {
          line: 279,
          column: 20
        },
        end: {
          line: 279,
          column: 84
        }
      },
      "122": {
        start: {
          line: 281,
          column: 20
        },
        end: {
          line: 281,
          column: 93
        }
      },
      "123": {
        start: {
          line: 283,
          column: 20
        },
        end: {
          line: 283,
          column: 84
        }
      },
      "124": {
        start: {
          line: 285,
          column: 20
        },
        end: {
          line: 285,
          column: 63
        }
      },
      "125": {
        start: {
          line: 288,
          column: 8
        },
        end: {
          line: 288,
          column: 76
        }
      },
      "126": {
        start: {
          line: 291,
          column: 48
        },
        end: {
          line: 293,
          column: 1
        }
      },
      "127": {
        start: {
          line: 292,
          column: 4
        },
        end: {
          line: 292,
          column: 50
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 6,
            column: 4
          },
          end: {
            line: 6,
            column: 5
          }
        },
        loc: {
          start: {
            line: 6,
            column: 24
          },
          end: {
            line: 8,
            column: 5
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 5
          }
        },
        loc: {
          start: {
            line: 9,
            column: 23
          },
          end: {
            line: 11,
            column: 5
          }
        },
        line: 9
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 46
          },
          end: {
            line: 47,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        loc: {
          start: {
            line: 51,
            column: 42
          },
          end: {
            line: 61,
            column: 5
          }
        },
        line: 51
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 65,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        },
        loc: {
          start: {
            line: 65,
            column: 51
          },
          end: {
            line: 75,
            column: 5
          }
        },
        line: 65
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 79,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        },
        loc: {
          start: {
            line: 79,
            column: 43
          },
          end: {
            line: 88,
            column: 5
          }
        },
        line: 79
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 95,
            column: 4
          },
          end: {
            line: 95,
            column: 5
          }
        },
        loc: {
          start: {
            line: 95,
            column: 45
          },
          end: {
            line: 108,
            column: 5
          }
        },
        line: 95
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 112,
            column: 4
          },
          end: {
            line: 112,
            column: 5
          }
        },
        loc: {
          start: {
            line: 112,
            column: 49
          },
          end: {
            line: 122,
            column: 5
          }
        },
        line: 112
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 126,
            column: 4
          },
          end: {
            line: 126,
            column: 5
          }
        },
        loc: {
          start: {
            line: 126,
            column: 46
          },
          end: {
            line: 136,
            column: 5
          }
        },
        line: 126
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 143,
            column: 4
          },
          end: {
            line: 143,
            column: 5
          }
        },
        loc: {
          start: {
            line: 143,
            column: 46
          },
          end: {
            line: 208,
            column: 5
          }
        },
        line: 143
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 215,
            column: 4
          },
          end: {
            line: 215,
            column: 5
          }
        },
        loc: {
          start: {
            line: 215,
            column: 56
          },
          end: {
            line: 232,
            column: 5
          }
        },
        line: 215
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 236,
            column: 4
          },
          end: {
            line: 236,
            column: 5
          }
        },
        loc: {
          start: {
            line: 236,
            column: 42
          },
          end: {
            line: 249,
            column: 5
          }
        },
        line: 236
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 253,
            column: 4
          },
          end: {
            line: 253,
            column: 5
          }
        },
        loc: {
          start: {
            line: 253,
            column: 34
          },
          end: {
            line: 257,
            column: 5
          }
        },
        line: 253
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 261,
            column: 4
          },
          end: {
            line: 261,
            column: 5
          }
        },
        loc: {
          start: {
            line: 261,
            column: 26
          },
          end: {
            line: 263,
            column: 5
          }
        },
        line: 261
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 267,
            column: 4
          },
          end: {
            line: 267,
            column: 5
          }
        },
        loc: {
          start: {
            line: 267,
            column: 32
          },
          end: {
            line: 289,
            column: 5
          }
        },
        line: 267
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 291,
            column: 48
          },
          end: {
            line: 291,
            column: 49
          }
        },
        loc: {
          start: {
            line: 291,
            column: 60
          },
          end: {
            line: 293,
            column: 1
          }
        },
        line: 291
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 33
          },
          end: {
            line: 18,
            column: 44
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 18,
            column: 42
          },
          end: {
            line: 18,
            column: 44
          }
        }],
        line: 18
      },
      "1": {
        loc: {
          start: {
            line: 21,
            column: 12
          },
          end: {
            line: 22,
            column: 79
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 12
          },
          end: {
            line: 22,
            column: 79
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "2": {
        loc: {
          start: {
            line: 23,
            column: 12
          },
          end: {
            line: 24,
            column: 75
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 12
          },
          end: {
            line: 24,
            column: 75
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 23
      },
      "3": {
        loc: {
          start: {
            line: 25,
            column: 12
          },
          end: {
            line: 26,
            column: 75
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 12
          },
          end: {
            line: 26,
            column: 75
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "4": {
        loc: {
          start: {
            line: 27,
            column: 12
          },
          end: {
            line: 28,
            column: 64
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 12
          },
          end: {
            line: 28,
            column: 64
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "5": {
        loc: {
          start: {
            line: 29,
            column: 12
          },
          end: {
            line: 30,
            column: 69
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 12
          },
          end: {
            line: 30,
            column: 69
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "6": {
        loc: {
          start: {
            line: 31,
            column: 12
          },
          end: {
            line: 32,
            column: 64
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 12
          },
          end: {
            line: 32,
            column: 64
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "7": {
        loc: {
          start: {
            line: 33,
            column: 12
          },
          end: {
            line: 34,
            column: 66
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 12
          },
          end: {
            line: 34,
            column: 66
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "8": {
        loc: {
          start: {
            line: 35,
            column: 12
          },
          end: {
            line: 36,
            column: 62
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 12
          },
          end: {
            line: 36,
            column: 62
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "9": {
        loc: {
          start: {
            line: 37,
            column: 12
          },
          end: {
            line: 38,
            column: 62
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 12
          },
          end: {
            line: 38,
            column: 62
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "10": {
        loc: {
          start: {
            line: 41,
            column: 19
          },
          end: {
            line: 41,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 19
          },
          end: {
            line: 41,
            column: 37
          }
        }, {
          start: {
            line: 41,
            column: 41
          },
          end: {
            line: 41,
            column: 43
          }
        }],
        line: 41
      },
      "11": {
        loc: {
          start: {
            line: 98,
            column: 12
          },
          end: {
            line: 99,
            column: 68
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 12
          },
          end: {
            line: 99,
            column: 68
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 98
      },
      "12": {
        loc: {
          start: {
            line: 102,
            column: 19
          },
          end: {
            line: 102,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 102,
            column: 19
          },
          end: {
            line: 102,
            column: 37
          }
        }, {
          start: {
            line: 102,
            column: 41
          },
          end: {
            line: 102,
            column: 43
          }
        }],
        line: 102
      },
      "13": {
        loc: {
          start: {
            line: 115,
            column: 27
          },
          end: {
            line: 115,
            column: 64
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 115,
            column: 39
          },
          end: {
            line: 115,
            column: 59
          }
        }, {
          start: {
            line: 115,
            column: 62
          },
          end: {
            line: 115,
            column: 64
          }
        }],
        line: 115
      },
      "14": {
        loc: {
          start: {
            line: 129,
            column: 27
          },
          end: {
            line: 129,
            column: 58
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 129,
            column: 37
          },
          end: {
            line: 129,
            column: 53
          }
        }, {
          start: {
            line: 129,
            column: 56
          },
          end: {
            line: 129,
            column: 58
          }
        }],
        line: 129
      },
      "15": {
        loc: {
          start: {
            line: 143,
            column: 33
          },
          end: {
            line: 143,
            column: 44
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 143,
            column: 42
          },
          end: {
            line: 143,
            column: 44
          }
        }],
        line: 143
      },
      "16": {
        loc: {
          start: {
            line: 156,
            column: 16
          },
          end: {
            line: 161,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 156,
            column: 16
          },
          end: {
            line: 161,
            column: 17
          }
        }, {
          start: {
            line: 159,
            column: 21
          },
          end: {
            line: 161,
            column: 17
          }
        }],
        line: 156
      },
      "17": {
        loc: {
          start: {
            line: 164,
            column: 16
          },
          end: {
            line: 171,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 164,
            column: 16
          },
          end: {
            line: 171,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 164
      },
      "18": {
        loc: {
          start: {
            line: 173,
            column: 16
          },
          end: {
            line: 175,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 173,
            column: 16
          },
          end: {
            line: 175,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 173
      },
      "19": {
        loc: {
          start: {
            line: 178,
            column: 16
          },
          end: {
            line: 193,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 178,
            column: 16
          },
          end: {
            line: 193,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 178
      },
      "20": {
        loc: {
          start: {
            line: 180,
            column: 20
          },
          end: {
            line: 187,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 180,
            column: 20
          },
          end: {
            line: 187,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 180
      },
      "21": {
        loc: {
          start: {
            line: 189,
            column: 20
          },
          end: {
            line: 191,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 189,
            column: 20
          },
          end: {
            line: 191,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 189
      },
      "22": {
        loc: {
          start: {
            line: 215,
            column: 33
          },
          end: {
            line: 215,
            column: 54
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 215,
            column: 50
          },
          end: {
            line: 215,
            column: 54
          }
        }],
        line: 215
      },
      "23": {
        loc: {
          start: {
            line: 219,
            column: 8
          },
          end: {
            line: 231,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 219,
            column: 8
          },
          end: {
            line: 231,
            column: 9
          }
        }, {
          start: {
            line: 224,
            column: 13
          },
          end: {
            line: 231,
            column: 9
          }
        }],
        line: 219
      },
      "24": {
        loc: {
          start: {
            line: 220,
            column: 19
          },
          end: {
            line: 222,
            column: 41
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 221,
            column: 18
          },
          end: {
            line: 221,
            column: 53
          }
        }, {
          start: {
            line: 222,
            column: 18
          },
          end: {
            line: 222,
            column: 41
          }
        }],
        line: 220
      },
      "25": {
        loc: {
          start: {
            line: 224,
            column: 13
          },
          end: {
            line: 231,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 224,
            column: 13
          },
          end: {
            line: 231,
            column: 9
          }
        }, {
          start: {
            line: 229,
            column: 13
          },
          end: {
            line: 231,
            column: 9
          }
        }],
        line: 224
      },
      "26": {
        loc: {
          start: {
            line: 225,
            column: 19
          },
          end: {
            line: 227,
            column: 31
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 226,
            column: 18
          },
          end: {
            line: 226,
            column: 43
          }
        }, {
          start: {
            line: 227,
            column: 18
          },
          end: {
            line: 227,
            column: 31
          }
        }],
        line: 225
      },
      "27": {
        loc: {
          start: {
            line: 230,
            column: 19
          },
          end: {
            line: 230,
            column: 56
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 230,
            column: 36
          },
          end: {
            line: 230,
            column: 49
          }
        }, {
          start: {
            line: 230,
            column: 52
          },
          end: {
            line: 230,
            column: 56
          }
        }],
        line: 230
      },
      "28": {
        loc: {
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 248,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 238,
            column: 12
          },
          end: {
            line: 239,
            column: 36
          }
        }, {
          start: {
            line: 240,
            column: 12
          },
          end: {
            line: 241,
            column: 55
          }
        }, {
          start: {
            line: 242,
            column: 12
          },
          end: {
            line: 243,
            column: 62
          }
        }, {
          start: {
            line: 244,
            column: 12
          },
          end: {
            line: 245,
            column: 67
          }
        }, {
          start: {
            line: 246,
            column: 12
          },
          end: {
            line: 247,
            column: 36
          }
        }],
        line: 237
      },
      "29": {
        loc: {
          start: {
            line: 254,
            column: 8
          },
          end: {
            line: 255,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 254,
            column: 8
          },
          end: {
            line: 255,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 254
      },
      "30": {
        loc: {
          start: {
            line: 268,
            column: 8
          },
          end: {
            line: 287,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 268,
            column: 8
          },
          end: {
            line: 287,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 268
      },
      "31": {
        loc: {
          start: {
            line: 270,
            column: 28
          },
          end: {
            line: 270,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 270,
            column: 28
          },
          end: {
            line: 270,
            column: 57
          }
        }, {
          start: {
            line: 270,
            column: 61
          },
          end: {
            line: 270,
            column: 74
          }
        }],
        line: 270
      },
      "32": {
        loc: {
          start: {
            line: 271,
            column: 12
          },
          end: {
            line: 286,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 272,
            column: 16
          },
          end: {
            line: 273,
            column: 81
          }
        }, {
          start: {
            line: 274,
            column: 16
          },
          end: {
            line: 275,
            column: 92
          }
        }, {
          start: {
            line: 276,
            column: 16
          },
          end: {
            line: 277,
            column: 99
          }
        }, {
          start: {
            line: 278,
            column: 16
          },
          end: {
            line: 279,
            column: 84
          }
        }, {
          start: {
            line: 280,
            column: 16
          },
          end: {
            line: 281,
            column: 93
          }
        }, {
          start: {
            line: 282,
            column: 16
          },
          end: {
            line: 283,
            column: 84
          }
        }, {
          start: {
            line: 284,
            column: 16
          },
          end: {
            line: 285,
            column: 63
          }
        }],
        line: 271
      },
      "33": {
        loc: {
          start: {
            line: 288,
            column: 40
          },
          end: {
            line: 288,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 288,
            column: 40
          },
          end: {
            line: 288,
            column: 53
          }
        }, {
          start: {
            line: 288,
            column: 57
          },
          end: {
            line: 288,
            column: 72
          }
        }],
        line: 288
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0, 0, 0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0, 0, 0, 0, 0, 0],
      "33": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/peterkrzyzek/Development/clickup-mcp-server/src/clickup-client/time-tracking-enhanced.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/peterkrzyzek/Development/clickup-mcp-server/src/clickup-client/time-tracking-enhanced.ts"],
      sourcesContent: ["import { ClickUpClient } from './index.js';\nimport axios from 'axios';\n\n// ========================================\n// TIME TRACKING TYPE DEFINITIONS\n// ========================================\n\nexport interface TimeEntryTag {\n  name: string;\n  tag_fg?: string;\n  tag_bg?: string;\n  creator?: number;\n}\n\nexport interface CreateTimeEntryParams {\n  description: string;\n  start: number; // Unix timestamp in milliseconds\n  billable: boolean;\n  end?: number; // Unix timestamp in milliseconds\n  task_id?: string;\n  assignee?: number;\n  tags?: TimeEntryTag[];\n}\n\nexport interface UpdateTimeEntryParams {\n  description?: string;\n  start?: number;\n  end?: number;\n  billable?: boolean;\n  task_id?: string;\n  tags?: TimeEntryTag[];\n}\n\nexport interface GetTimeEntriesParams {\n  start_date?: number;\n  end_date?: number;\n  assignee?: number;\n  include_task_tags?: boolean;\n  include_location_names?: boolean;\n  space_id?: string;\n  folder_id?: string;\n  list_id?: string;\n  task_id?: string;\n}\n\nexport interface TimeEntry {\n  id: string;\n  task: {\n    id: string;\n    name: string;\n    status: {\n      status: string;\n      color: string;\n      type: string;\n      orderindex: number;\n    };\n    custom_type: string | null;\n  } | null;\n  wid: string; // Workspace ID\n  user: {\n    id: number;\n    username: string;\n    email: string;\n    color: string;\n    initials: string;\n    profilePicture: string;\n  };\n  billable: boolean;\n  start: string; // Unix timestamp in milliseconds\n  end: string | null; // Unix timestamp in milliseconds\n  duration: string; // Duration in milliseconds\n  description: string;\n  tags: TimeEntryTag[];\n  source: string; // \"manual\", \"timer\", etc.\n  at: string; // Creation timestamp\n}\n\nexport interface RunningTimer {\n  id: string;\n  task: {\n    id: string;\n    name: string;\n  } | null;\n  user: {\n    id: number;\n    username: string;\n    email: string;\n  };\n  start: string;\n  description: string;\n  billable: boolean;\n  tags: TimeEntryTag[];\n}\n\nexport interface TimeSummary {\n  total_duration: number;\n  billable_duration: number;\n  non_billable_duration: number;\n  entries_count: number;\n  by_user?: Record<string, {\n    duration: number;\n    billable_duration: number;\n    entries_count: number;\n  }>;\n  by_task?: Record<string, {\n    duration: number;\n    billable_duration: number;\n    entries_count: number;\n  }>;\n}\n\n// ========================================\n// ENHANCED TIME TRACKING CLIENT\n// ========================================\n\nexport class EnhancedTimeTrackingClient {\n  private client: ClickUpClient;\n\n  constructor(client: ClickUpClient) {\n    this.client = client;\n  }\n\n  private getAxiosInstance() {\n    return this.client.getAxiosInstance();\n  }\n\n  // ========================================\n  // TIME ENTRY MANAGEMENT\n  // ========================================\n\n  /**\n   * Get time entries for a team with filtering options\n   */\n  async getTimeEntries(teamId: string, params: GetTimeEntriesParams = {}): Promise<TimeEntry[]> {\n    try {\n      const queryParams = new URLSearchParams();\n      \n      if (params.start_date) queryParams.append('start_date', params.start_date.toString());\n      if (params.end_date) queryParams.append('end_date', params.end_date.toString());\n      if (params.assignee) queryParams.append('assignee', params.assignee.toString());\n      if (params.include_task_tags) queryParams.append('include_task_tags', 'true');\n      if (params.include_location_names) queryParams.append('include_location_names', 'true');\n      if (params.space_id) queryParams.append('space_id', params.space_id);\n      if (params.folder_id) queryParams.append('folder_id', params.folder_id);\n      if (params.list_id) queryParams.append('list_id', params.list_id);\n      if (params.task_id) queryParams.append('task_id', params.task_id);\n\n      const endpoint = `/team/${teamId}/time_entries?${queryParams.toString()}`;\n      const response = await this.getAxiosInstance().get(endpoint);\n      \n      return response.data.data || [];\n    } catch (error) {\n      console.error('Error getting time entries:', error);\n      throw this.handleError(error, `Failed to get time entries for team ${teamId}`);\n    }\n  }\n\n  /**\n   * Create a new time entry\n   */\n  async createTimeEntry(teamId: string, params: CreateTimeEntryParams): Promise<TimeEntry> {\n    try {\n      const endpoint = `/team/${teamId}/time_entries`;\n      const response = await this.getAxiosInstance().post(endpoint, params);\n      \n      return response.data.data;\n    } catch (error) {\n      console.error('Error creating time entry:', error);\n      throw this.handleError(error, `Failed to create time entry for team ${teamId}`);\n    }\n  }\n\n  /**\n   * Update an existing time entry\n   */\n  async updateTimeEntry(teamId: string, timerId: string, params: UpdateTimeEntryParams): Promise<TimeEntry> {\n    try {\n      const endpoint = `/team/${teamId}/time_entries/${timerId}`;\n      const response = await this.getAxiosInstance().put(endpoint, params);\n      \n      return response.data.data;\n    } catch (error) {\n      console.error('Error updating time entry:', error);\n      throw this.handleError(error, `Failed to update time entry ${timerId} for team ${teamId}`);\n    }\n  }\n\n  /**\n   * Delete a time entry\n   */\n  async deleteTimeEntry(teamId: string, timerId: string): Promise<void> {\n    try {\n      const endpoint = `/team/${teamId}/time_entries/${timerId}`;\n      await this.getAxiosInstance().delete(endpoint);\n    } catch (error) {\n      console.error('Error deleting time entry:', error);\n      throw this.handleError(error, `Failed to delete time entry ${timerId} for team ${teamId}`);\n    }\n  }\n\n  // ========================================\n  // TIMER OPERATIONS\n  // ========================================\n\n  /**\n   * Get currently running timers for a team\n   */\n  async getRunningTimers(teamId: string, assignee?: number): Promise<RunningTimer[]> {\n    try {\n      const queryParams = new URLSearchParams();\n      if (assignee) queryParams.append('assignee', assignee.toString());\n\n      const endpoint = `/team/${teamId}/time_entries/current?${queryParams.toString()}`;\n      const response = await this.getAxiosInstance().get(endpoint);\n      \n      return response.data.data || [];\n    } catch (error) {\n      console.error('Error getting running timers:', error);\n      throw this.handleError(error, `Failed to get running timers for team ${teamId}`);\n    }\n  }\n\n  /**\n   * Start a timer for a time entry\n   */\n  async startTimer(teamId: string, timerId: string, startTime?: number): Promise<void> {\n    try {\n      const endpoint = `/team/${teamId}/time_entries/${timerId}/start`;\n      const params = startTime ? { start: startTime } : {};\n      \n      await this.getAxiosInstance().post(endpoint, params);\n    } catch (error) {\n      console.error('Error starting timer:', error);\n      throw this.handleError(error, `Failed to start timer ${timerId} for team ${teamId}`);\n    }\n  }\n\n  /**\n   * Stop a running timer\n   */\n  async stopTimer(teamId: string, timerId: string, endTime?: number): Promise<void> {\n    try {\n      const endpoint = `/team/${teamId}/time_entries/${timerId}/stop`;\n      const params = endTime ? { end: endTime } : {};\n      \n      await this.getAxiosInstance().post(endpoint, params);\n    } catch (error) {\n      console.error('Error stopping timer:', error);\n      throw this.handleError(error, `Failed to stop timer ${timerId} for team ${teamId}`);\n    }\n  }\n\n  // ========================================\n  // TIME ANALYTICS & REPORTING\n  // ========================================\n\n  /**\n   * Get time summary and analytics\n   */\n  async getTimeSummary(teamId: string, params: GetTimeEntriesParams = {}): Promise<TimeSummary> {\n    try {\n      // Get time entries for the specified parameters\n      const timeEntries = await this.getTimeEntries(teamId, params);\n      \n      // Calculate summary statistics\n      let totalDuration = 0;\n      let billableDuration = 0;\n      let nonBillableDuration = 0;\n      const byUser: Record<string, any> = {};\n      const byTask: Record<string, any> = {};\n\n      for (const entry of timeEntries) {\n        const duration = parseInt(entry.duration);\n        totalDuration += duration;\n\n        if (entry.billable) {\n          billableDuration += duration;\n        } else {\n          nonBillableDuration += duration;\n        }\n\n        // Group by user\n        const userId = entry.user.id.toString();\n        if (!byUser[userId]) {\n          byUser[userId] = {\n            duration: 0,\n            billable_duration: 0,\n            entries_count: 0,\n            user_info: entry.user\n          };\n        }\n        byUser[userId].duration += duration;\n        if (entry.billable) {\n          byUser[userId].billable_duration += duration;\n        }\n        byUser[userId].entries_count++;\n\n        // Group by task\n        if (entry.task) {\n          const taskId = entry.task.id;\n          if (!byTask[taskId]) {\n            byTask[taskId] = {\n              duration: 0,\n              billable_duration: 0,\n              entries_count: 0,\n              task_info: entry.task\n            };\n          }\n          byTask[taskId].duration += duration;\n          if (entry.billable) {\n            byTask[taskId].billable_duration += duration;\n          }\n          byTask[taskId].entries_count++;\n        }\n      }\n\n      return {\n        total_duration: totalDuration,\n        billable_duration: billableDuration,\n        non_billable_duration: nonBillableDuration,\n        entries_count: timeEntries.length,\n        by_user: byUser,\n        by_task: byTask\n      };\n    } catch (error) {\n      console.error('Error getting time summary:', error);\n      throw this.handleError(error, `Failed to get time summary for team ${teamId}`);\n    }\n  }\n\n  // ========================================\n  // UTILITY METHODS\n  // ========================================\n\n  /**\n   * Format duration from milliseconds to human-readable format\n   */\n  formatDuration(milliseconds: number, includeSeconds: boolean = true): string {\n    const hours = Math.floor(milliseconds / (1000 * 60 * 60));\n    const minutes = Math.floor((milliseconds % (1000 * 60 * 60)) / (1000 * 60));\n    const seconds = Math.floor((milliseconds % (1000 * 60)) / 1000);\n\n    if (hours > 0) {\n      return includeSeconds \n        ? `${hours}h ${minutes}m ${seconds}s`\n        : `${hours}h ${minutes}m`;\n    } else if (minutes > 0) {\n      return includeSeconds \n        ? `${minutes}m ${seconds}s`\n        : `${minutes}m`;\n    } else {\n      return includeSeconds ? `${seconds}s` : '0m';\n    }\n  }\n\n  /**\n   * Convert duration to different time units\n   */\n  convertDuration(milliseconds: number, format: 'milliseconds' | 'seconds' | 'minutes' | 'hours'): number {\n    switch (format) {\n      case 'milliseconds':\n        return milliseconds;\n      case 'seconds':\n        return Math.floor(milliseconds / 1000);\n      case 'minutes':\n        return Math.floor(milliseconds / (1000 * 60));\n      case 'hours':\n        return Math.floor(milliseconds / (1000 * 60 * 60));\n      default:\n        return milliseconds;\n    }\n  }\n\n  /**\n   * Validate time range (start must be before end)\n   */\n  validateTimeRange(start: number, end?: number): boolean {\n    if (end === undefined) return true;\n    return start < end;\n  }\n\n  /**\n   * Get current Unix timestamp in milliseconds\n   */\n  getCurrentTimestamp(): number {\n    return Date.now();\n  }\n\n  // ========================================\n  // ERROR HANDLING\n  // ========================================\n\n  private handleError(error: any, context: string): Error {\n    if (axios.isAxiosError(error)) {\n      const status = error.response?.status;\n      const message = error.response?.data?.message || error.message;\n      \n      switch (status) {\n        case 400:\n          return new Error(`${context}: Invalid request - ${message}`);\n        case 401:\n          return new Error(`${context}: Authentication failed - check API token`);\n        case 403:\n          return new Error(`${context}: Permission denied - insufficient access rights`);\n        case 404:\n          return new Error(`${context}: Resource not found - ${message}`);\n        case 429:\n          return new Error(`${context}: Rate limit exceeded - please retry later`);\n        case 500:\n          return new Error(`${context}: Server error - please try again`);\n        default:\n          return new Error(`${context}: ${message}`);\n      }\n    }\n    \n    return new Error(`${context}: ${error.message || 'Unknown error'}`);\n  }\n}\n\nexport const createEnhancedTimeTrackingClient = (client: ClickUpClient): EnhancedTimeTrackingClient => {\n  return new EnhancedTimeTrackingClient(client);\n};\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e8b2bfbfa5b091d083de0ba70b91a4e9578ae8fe"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_4hbxgawhh = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_4hbxgawhh();
import axios from 'axios';
// ========================================
// ENHANCED TIME TRACKING CLIENT
// ========================================
export class EnhancedTimeTrackingClient {
  constructor(client) {
    /* istanbul ignore next */
    cov_4hbxgawhh().f[0]++;
    cov_4hbxgawhh().s[0]++;
    this.client = client;
  }
  getAxiosInstance() {
    /* istanbul ignore next */
    cov_4hbxgawhh().f[1]++;
    cov_4hbxgawhh().s[1]++;
    return this.client.getAxiosInstance();
  }
  // ========================================
  // TIME ENTRY MANAGEMENT
  // ========================================
  /**
   * Get time entries for a team with filtering options
   */
  async getTimeEntries(teamId, params =
  /* istanbul ignore next */
  (cov_4hbxgawhh().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_4hbxgawhh().f[2]++;
    cov_4hbxgawhh().s[2]++;
    try {
      const queryParams =
      /* istanbul ignore next */
      (cov_4hbxgawhh().s[3]++, new URLSearchParams());
      /* istanbul ignore next */
      cov_4hbxgawhh().s[4]++;
      if (params.start_date) {
        /* istanbul ignore next */
        cov_4hbxgawhh().b[1][0]++;
        cov_4hbxgawhh().s[5]++;
        queryParams.append('start_date', params.start_date.toString());
      } else
      /* istanbul ignore next */
      {
        cov_4hbxgawhh().b[1][1]++;
      }
      cov_4hbxgawhh().s[6]++;
      if (params.end_date) {
        /* istanbul ignore next */
        cov_4hbxgawhh().b[2][0]++;
        cov_4hbxgawhh().s[7]++;
        queryParams.append('end_date', params.end_date.toString());
      } else
      /* istanbul ignore next */
      {
        cov_4hbxgawhh().b[2][1]++;
      }
      cov_4hbxgawhh().s[8]++;
      if (params.assignee) {
        /* istanbul ignore next */
        cov_4hbxgawhh().b[3][0]++;
        cov_4hbxgawhh().s[9]++;
        queryParams.append('assignee', params.assignee.toString());
      } else
      /* istanbul ignore next */
      {
        cov_4hbxgawhh().b[3][1]++;
      }
      cov_4hbxgawhh().s[10]++;
      if (params.include_task_tags) {
        /* istanbul ignore next */
        cov_4hbxgawhh().b[4][0]++;
        cov_4hbxgawhh().s[11]++;
        queryParams.append('include_task_tags', 'true');
      } else
      /* istanbul ignore next */
      {
        cov_4hbxgawhh().b[4][1]++;
      }
      cov_4hbxgawhh().s[12]++;
      if (params.include_location_names) {
        /* istanbul ignore next */
        cov_4hbxgawhh().b[5][0]++;
        cov_4hbxgawhh().s[13]++;
        queryParams.append('include_location_names', 'true');
      } else
      /* istanbul ignore next */
      {
        cov_4hbxgawhh().b[5][1]++;
      }
      cov_4hbxgawhh().s[14]++;
      if (params.space_id) {
        /* istanbul ignore next */
        cov_4hbxgawhh().b[6][0]++;
        cov_4hbxgawhh().s[15]++;
        queryParams.append('space_id', params.space_id);
      } else
      /* istanbul ignore next */
      {
        cov_4hbxgawhh().b[6][1]++;
      }
      cov_4hbxgawhh().s[16]++;
      if (params.folder_id) {
        /* istanbul ignore next */
        cov_4hbxgawhh().b[7][0]++;
        cov_4hbxgawhh().s[17]++;
        queryParams.append('folder_id', params.folder_id);
      } else
      /* istanbul ignore next */
      {
        cov_4hbxgawhh().b[7][1]++;
      }
      cov_4hbxgawhh().s[18]++;
      if (params.list_id) {
        /* istanbul ignore next */
        cov_4hbxgawhh().b[8][0]++;
        cov_4hbxgawhh().s[19]++;
        queryParams.append('list_id', params.list_id);
      } else
      /* istanbul ignore next */
      {
        cov_4hbxgawhh().b[8][1]++;
      }
      cov_4hbxgawhh().s[20]++;
      if (params.task_id) {
        /* istanbul ignore next */
        cov_4hbxgawhh().b[9][0]++;
        cov_4hbxgawhh().s[21]++;
        queryParams.append('task_id', params.task_id);
      } else
      /* istanbul ignore next */
      {
        cov_4hbxgawhh().b[9][1]++;
      }
      const endpoint =
      /* istanbul ignore next */
      (cov_4hbxgawhh().s[22]++, `/team/${teamId}/time_entries?${queryParams.toString()}`);
      const response =
      /* istanbul ignore next */
      (cov_4hbxgawhh().s[23]++, await this.getAxiosInstance().get(endpoint));
      /* istanbul ignore next */
      cov_4hbxgawhh().s[24]++;
      return /* istanbul ignore next */(cov_4hbxgawhh().b[10][0]++, response.data.data) ||
      /* istanbul ignore next */
      (cov_4hbxgawhh().b[10][1]++, []);
    } catch (error) {
      /* istanbul ignore next */
      cov_4hbxgawhh().s[25]++;
      console.error('Error getting time entries:', error);
      /* istanbul ignore next */
      cov_4hbxgawhh().s[26]++;
      throw this.handleError(error, `Failed to get time entries for team ${teamId}`);
    }
  }
  /**
   * Create a new time entry
   */
  async createTimeEntry(teamId, params) {
    /* istanbul ignore next */
    cov_4hbxgawhh().f[3]++;
    cov_4hbxgawhh().s[27]++;
    try {
      const endpoint =
      /* istanbul ignore next */
      (cov_4hbxgawhh().s[28]++, `/team/${teamId}/time_entries`);
      const response =
      /* istanbul ignore next */
      (cov_4hbxgawhh().s[29]++, await this.getAxiosInstance().post(endpoint, params));
      /* istanbul ignore next */
      cov_4hbxgawhh().s[30]++;
      return response.data.data;
    } catch (error) {
      /* istanbul ignore next */
      cov_4hbxgawhh().s[31]++;
      console.error('Error creating time entry:', error);
      /* istanbul ignore next */
      cov_4hbxgawhh().s[32]++;
      throw this.handleError(error, `Failed to create time entry for team ${teamId}`);
    }
  }
  /**
   * Update an existing time entry
   */
  async updateTimeEntry(teamId, timerId, params) {
    /* istanbul ignore next */
    cov_4hbxgawhh().f[4]++;
    cov_4hbxgawhh().s[33]++;
    try {
      const endpoint =
      /* istanbul ignore next */
      (cov_4hbxgawhh().s[34]++, `/team/${teamId}/time_entries/${timerId}`);
      const response =
      /* istanbul ignore next */
      (cov_4hbxgawhh().s[35]++, await this.getAxiosInstance().put(endpoint, params));
      /* istanbul ignore next */
      cov_4hbxgawhh().s[36]++;
      return response.data.data;
    } catch (error) {
      /* istanbul ignore next */
      cov_4hbxgawhh().s[37]++;
      console.error('Error updating time entry:', error);
      /* istanbul ignore next */
      cov_4hbxgawhh().s[38]++;
      throw this.handleError(error, `Failed to update time entry ${timerId} for team ${teamId}`);
    }
  }
  /**
   * Delete a time entry
   */
  async deleteTimeEntry(teamId, timerId) {
    /* istanbul ignore next */
    cov_4hbxgawhh().f[5]++;
    cov_4hbxgawhh().s[39]++;
    try {
      const endpoint =
      /* istanbul ignore next */
      (cov_4hbxgawhh().s[40]++, `/team/${teamId}/time_entries/${timerId}`);
      /* istanbul ignore next */
      cov_4hbxgawhh().s[41]++;
      await this.getAxiosInstance().delete(endpoint);
    } catch (error) {
      /* istanbul ignore next */
      cov_4hbxgawhh().s[42]++;
      console.error('Error deleting time entry:', error);
      /* istanbul ignore next */
      cov_4hbxgawhh().s[43]++;
      throw this.handleError(error, `Failed to delete time entry ${timerId} for team ${teamId}`);
    }
  }
  // ========================================
  // TIMER OPERATIONS
  // ========================================
  /**
   * Get currently running timers for a team
   */
  async getRunningTimers(teamId, assignee) {
    /* istanbul ignore next */
    cov_4hbxgawhh().f[6]++;
    cov_4hbxgawhh().s[44]++;
    try {
      const queryParams =
      /* istanbul ignore next */
      (cov_4hbxgawhh().s[45]++, new URLSearchParams());
      /* istanbul ignore next */
      cov_4hbxgawhh().s[46]++;
      if (assignee) {
        /* istanbul ignore next */
        cov_4hbxgawhh().b[11][0]++;
        cov_4hbxgawhh().s[47]++;
        queryParams.append('assignee', assignee.toString());
      } else
      /* istanbul ignore next */
      {
        cov_4hbxgawhh().b[11][1]++;
      }
      const endpoint =
      /* istanbul ignore next */
      (cov_4hbxgawhh().s[48]++, `/team/${teamId}/time_entries/current?${queryParams.toString()}`);
      const response =
      /* istanbul ignore next */
      (cov_4hbxgawhh().s[49]++, await this.getAxiosInstance().get(endpoint));
      /* istanbul ignore next */
      cov_4hbxgawhh().s[50]++;
      return /* istanbul ignore next */(cov_4hbxgawhh().b[12][0]++, response.data.data) ||
      /* istanbul ignore next */
      (cov_4hbxgawhh().b[12][1]++, []);
    } catch (error) {
      /* istanbul ignore next */
      cov_4hbxgawhh().s[51]++;
      console.error('Error getting running timers:', error);
      /* istanbul ignore next */
      cov_4hbxgawhh().s[52]++;
      throw this.handleError(error, `Failed to get running timers for team ${teamId}`);
    }
  }
  /**
   * Start a timer for a time entry
   */
  async startTimer(teamId, timerId, startTime) {
    /* istanbul ignore next */
    cov_4hbxgawhh().f[7]++;
    cov_4hbxgawhh().s[53]++;
    try {
      const endpoint =
      /* istanbul ignore next */
      (cov_4hbxgawhh().s[54]++, `/team/${teamId}/time_entries/${timerId}/start`);
      const params =
      /* istanbul ignore next */
      (cov_4hbxgawhh().s[55]++, startTime ?
      /* istanbul ignore next */
      (cov_4hbxgawhh().b[13][0]++, {
        start: startTime
      }) :
      /* istanbul ignore next */
      (cov_4hbxgawhh().b[13][1]++, {}));
      /* istanbul ignore next */
      cov_4hbxgawhh().s[56]++;
      await this.getAxiosInstance().post(endpoint, params);
    } catch (error) {
      /* istanbul ignore next */
      cov_4hbxgawhh().s[57]++;
      console.error('Error starting timer:', error);
      /* istanbul ignore next */
      cov_4hbxgawhh().s[58]++;
      throw this.handleError(error, `Failed to start timer ${timerId} for team ${teamId}`);
    }
  }
  /**
   * Stop a running timer
   */
  async stopTimer(teamId, timerId, endTime) {
    /* istanbul ignore next */
    cov_4hbxgawhh().f[8]++;
    cov_4hbxgawhh().s[59]++;
    try {
      const endpoint =
      /* istanbul ignore next */
      (cov_4hbxgawhh().s[60]++, `/team/${teamId}/time_entries/${timerId}/stop`);
      const params =
      /* istanbul ignore next */
      (cov_4hbxgawhh().s[61]++, endTime ?
      /* istanbul ignore next */
      (cov_4hbxgawhh().b[14][0]++, {
        end: endTime
      }) :
      /* istanbul ignore next */
      (cov_4hbxgawhh().b[14][1]++, {}));
      /* istanbul ignore next */
      cov_4hbxgawhh().s[62]++;
      await this.getAxiosInstance().post(endpoint, params);
    } catch (error) {
      /* istanbul ignore next */
      cov_4hbxgawhh().s[63]++;
      console.error('Error stopping timer:', error);
      /* istanbul ignore next */
      cov_4hbxgawhh().s[64]++;
      throw this.handleError(error, `Failed to stop timer ${timerId} for team ${teamId}`);
    }
  }
  // ========================================
  // TIME ANALYTICS & REPORTING
  // ========================================
  /**
   * Get time summary and analytics
   */
  async getTimeSummary(teamId, params =
  /* istanbul ignore next */
  (cov_4hbxgawhh().b[15][0]++, {})) {
    /* istanbul ignore next */
    cov_4hbxgawhh().f[9]++;
    cov_4hbxgawhh().s[65]++;
    try {
      // Get time entries for the specified parameters
      const timeEntries =
      /* istanbul ignore next */
      (cov_4hbxgawhh().s[66]++, await this.getTimeEntries(teamId, params));
      // Calculate summary statistics
      let totalDuration =
      /* istanbul ignore next */
      (cov_4hbxgawhh().s[67]++, 0);
      let billableDuration =
      /* istanbul ignore next */
      (cov_4hbxgawhh().s[68]++, 0);
      let nonBillableDuration =
      /* istanbul ignore next */
      (cov_4hbxgawhh().s[69]++, 0);
      const byUser =
      /* istanbul ignore next */
      (cov_4hbxgawhh().s[70]++, {});
      const byTask =
      /* istanbul ignore next */
      (cov_4hbxgawhh().s[71]++, {});
      /* istanbul ignore next */
      cov_4hbxgawhh().s[72]++;
      for (const entry of timeEntries) {
        const duration =
        /* istanbul ignore next */
        (cov_4hbxgawhh().s[73]++, parseInt(entry.duration));
        /* istanbul ignore next */
        cov_4hbxgawhh().s[74]++;
        totalDuration += duration;
        /* istanbul ignore next */
        cov_4hbxgawhh().s[75]++;
        if (entry.billable) {
          /* istanbul ignore next */
          cov_4hbxgawhh().b[16][0]++;
          cov_4hbxgawhh().s[76]++;
          billableDuration += duration;
        } else {
          /* istanbul ignore next */
          cov_4hbxgawhh().b[16][1]++;
          cov_4hbxgawhh().s[77]++;
          nonBillableDuration += duration;
        }
        // Group by user
        const userId =
        /* istanbul ignore next */
        (cov_4hbxgawhh().s[78]++, entry.user.id.toString());
        /* istanbul ignore next */
        cov_4hbxgawhh().s[79]++;
        if (!byUser[userId]) {
          /* istanbul ignore next */
          cov_4hbxgawhh().b[17][0]++;
          cov_4hbxgawhh().s[80]++;
          byUser[userId] = {
            duration: 0,
            billable_duration: 0,
            entries_count: 0,
            user_info: entry.user
          };
        } else
        /* istanbul ignore next */
        {
          cov_4hbxgawhh().b[17][1]++;
        }
        cov_4hbxgawhh().s[81]++;
        byUser[userId].duration += duration;
        /* istanbul ignore next */
        cov_4hbxgawhh().s[82]++;
        if (entry.billable) {
          /* istanbul ignore next */
          cov_4hbxgawhh().b[18][0]++;
          cov_4hbxgawhh().s[83]++;
          byUser[userId].billable_duration += duration;
        } else
        /* istanbul ignore next */
        {
          cov_4hbxgawhh().b[18][1]++;
        }
        cov_4hbxgawhh().s[84]++;
        byUser[userId].entries_count++;
        // Group by task
        /* istanbul ignore next */
        cov_4hbxgawhh().s[85]++;
        if (entry.task) {
          /* istanbul ignore next */
          cov_4hbxgawhh().b[19][0]++;
          const taskId =
          /* istanbul ignore next */
          (cov_4hbxgawhh().s[86]++, entry.task.id);
          /* istanbul ignore next */
          cov_4hbxgawhh().s[87]++;
          if (!byTask[taskId]) {
            /* istanbul ignore next */
            cov_4hbxgawhh().b[20][0]++;
            cov_4hbxgawhh().s[88]++;
            byTask[taskId] = {
              duration: 0,
              billable_duration: 0,
              entries_count: 0,
              task_info: entry.task
            };
          } else
          /* istanbul ignore next */
          {
            cov_4hbxgawhh().b[20][1]++;
          }
          cov_4hbxgawhh().s[89]++;
          byTask[taskId].duration += duration;
          /* istanbul ignore next */
          cov_4hbxgawhh().s[90]++;
          if (entry.billable) {
            /* istanbul ignore next */
            cov_4hbxgawhh().b[21][0]++;
            cov_4hbxgawhh().s[91]++;
            byTask[taskId].billable_duration += duration;
          } else
          /* istanbul ignore next */
          {
            cov_4hbxgawhh().b[21][1]++;
          }
          cov_4hbxgawhh().s[92]++;
          byTask[taskId].entries_count++;
        } else
        /* istanbul ignore next */
        {
          cov_4hbxgawhh().b[19][1]++;
        }
      }
      /* istanbul ignore next */
      cov_4hbxgawhh().s[93]++;
      return {
        total_duration: totalDuration,
        billable_duration: billableDuration,
        non_billable_duration: nonBillableDuration,
        entries_count: timeEntries.length,
        by_user: byUser,
        by_task: byTask
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_4hbxgawhh().s[94]++;
      console.error('Error getting time summary:', error);
      /* istanbul ignore next */
      cov_4hbxgawhh().s[95]++;
      throw this.handleError(error, `Failed to get time summary for team ${teamId}`);
    }
  }
  // ========================================
  // UTILITY METHODS
  // ========================================
  /**
   * Format duration from milliseconds to human-readable format
   */
  formatDuration(milliseconds, includeSeconds =
  /* istanbul ignore next */
  (cov_4hbxgawhh().b[22][0]++, true)) {
    /* istanbul ignore next */
    cov_4hbxgawhh().f[10]++;
    const hours =
    /* istanbul ignore next */
    (cov_4hbxgawhh().s[96]++, Math.floor(milliseconds / (1000 * 60 * 60)));
    const minutes =
    /* istanbul ignore next */
    (cov_4hbxgawhh().s[97]++, Math.floor(milliseconds % (1000 * 60 * 60) / (1000 * 60)));
    const seconds =
    /* istanbul ignore next */
    (cov_4hbxgawhh().s[98]++, Math.floor(milliseconds % (1000 * 60) / 1000));
    /* istanbul ignore next */
    cov_4hbxgawhh().s[99]++;
    if (hours > 0) {
      /* istanbul ignore next */
      cov_4hbxgawhh().b[23][0]++;
      cov_4hbxgawhh().s[100]++;
      return includeSeconds ?
      /* istanbul ignore next */
      (cov_4hbxgawhh().b[24][0]++, `${hours}h ${minutes}m ${seconds}s`) :
      /* istanbul ignore next */
      (cov_4hbxgawhh().b[24][1]++, `${hours}h ${minutes}m`);
    } else {
      /* istanbul ignore next */
      cov_4hbxgawhh().b[23][1]++;
      cov_4hbxgawhh().s[101]++;
      if (minutes > 0) {
        /* istanbul ignore next */
        cov_4hbxgawhh().b[25][0]++;
        cov_4hbxgawhh().s[102]++;
        return includeSeconds ?
        /* istanbul ignore next */
        (cov_4hbxgawhh().b[26][0]++, `${minutes}m ${seconds}s`) :
        /* istanbul ignore next */
        (cov_4hbxgawhh().b[26][1]++, `${minutes}m`);
      } else {
        /* istanbul ignore next */
        cov_4hbxgawhh().b[25][1]++;
        cov_4hbxgawhh().s[103]++;
        return includeSeconds ?
        /* istanbul ignore next */
        (cov_4hbxgawhh().b[27][0]++, `${seconds}s`) :
        /* istanbul ignore next */
        (cov_4hbxgawhh().b[27][1]++, '0m');
      }
    }
  }
  /**
   * Convert duration to different time units
   */
  convertDuration(milliseconds, format) {
    /* istanbul ignore next */
    cov_4hbxgawhh().f[11]++;
    cov_4hbxgawhh().s[104]++;
    switch (format) {
      case 'milliseconds':
        /* istanbul ignore next */
        cov_4hbxgawhh().b[28][0]++;
        cov_4hbxgawhh().s[105]++;
        return milliseconds;
      case 'seconds':
        /* istanbul ignore next */
        cov_4hbxgawhh().b[28][1]++;
        cov_4hbxgawhh().s[106]++;
        return Math.floor(milliseconds / 1000);
      case 'minutes':
        /* istanbul ignore next */
        cov_4hbxgawhh().b[28][2]++;
        cov_4hbxgawhh().s[107]++;
        return Math.floor(milliseconds / (1000 * 60));
      case 'hours':
        /* istanbul ignore next */
        cov_4hbxgawhh().b[28][3]++;
        cov_4hbxgawhh().s[108]++;
        return Math.floor(milliseconds / (1000 * 60 * 60));
      default:
        /* istanbul ignore next */
        cov_4hbxgawhh().b[28][4]++;
        cov_4hbxgawhh().s[109]++;
        return milliseconds;
    }
  }
  /**
   * Validate time range (start must be before end)
   */
  validateTimeRange(start, end) {
    /* istanbul ignore next */
    cov_4hbxgawhh().f[12]++;
    cov_4hbxgawhh().s[110]++;
    if (end === undefined) {
      /* istanbul ignore next */
      cov_4hbxgawhh().b[29][0]++;
      cov_4hbxgawhh().s[111]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_4hbxgawhh().b[29][1]++;
    }
    cov_4hbxgawhh().s[112]++;
    return start < end;
  }
  /**
   * Get current Unix timestamp in milliseconds
   */
  getCurrentTimestamp() {
    /* istanbul ignore next */
    cov_4hbxgawhh().f[13]++;
    cov_4hbxgawhh().s[113]++;
    return Date.now();
  }
  // ========================================
  // ERROR HANDLING
  // ========================================
  handleError(error, context) {
    /* istanbul ignore next */
    cov_4hbxgawhh().f[14]++;
    cov_4hbxgawhh().s[114]++;
    if (axios.isAxiosError(error)) {
      /* istanbul ignore next */
      cov_4hbxgawhh().b[30][0]++;
      const status =
      /* istanbul ignore next */
      (cov_4hbxgawhh().s[115]++, error.response?.status);
      const message =
      /* istanbul ignore next */
      (cov_4hbxgawhh().s[116]++,
      /* istanbul ignore next */
      (cov_4hbxgawhh().b[31][0]++, error.response?.data?.message) ||
      /* istanbul ignore next */
      (cov_4hbxgawhh().b[31][1]++, error.message));
      /* istanbul ignore next */
      cov_4hbxgawhh().s[117]++;
      switch (status) {
        case 400:
          /* istanbul ignore next */
          cov_4hbxgawhh().b[32][0]++;
          cov_4hbxgawhh().s[118]++;
          return new Error(`${context}: Invalid request - ${message}`);
        case 401:
          /* istanbul ignore next */
          cov_4hbxgawhh().b[32][1]++;
          cov_4hbxgawhh().s[119]++;
          return new Error(`${context}: Authentication failed - check API token`);
        case 403:
          /* istanbul ignore next */
          cov_4hbxgawhh().b[32][2]++;
          cov_4hbxgawhh().s[120]++;
          return new Error(`${context}: Permission denied - insufficient access rights`);
        case 404:
          /* istanbul ignore next */
          cov_4hbxgawhh().b[32][3]++;
          cov_4hbxgawhh().s[121]++;
          return new Error(`${context}: Resource not found - ${message}`);
        case 429:
          /* istanbul ignore next */
          cov_4hbxgawhh().b[32][4]++;
          cov_4hbxgawhh().s[122]++;
          return new Error(`${context}: Rate limit exceeded - please retry later`);
        case 500:
          /* istanbul ignore next */
          cov_4hbxgawhh().b[32][5]++;
          cov_4hbxgawhh().s[123]++;
          return new Error(`${context}: Server error - please try again`);
        default:
          /* istanbul ignore next */
          cov_4hbxgawhh().b[32][6]++;
          cov_4hbxgawhh().s[124]++;
          return new Error(`${context}: ${message}`);
      }
    } else
    /* istanbul ignore next */
    {
      cov_4hbxgawhh().b[30][1]++;
    }
    cov_4hbxgawhh().s[125]++;
    return new Error(`${context}: ${
    /* istanbul ignore next */
    (cov_4hbxgawhh().b[33][0]++, error.message) ||
    /* istanbul ignore next */
    (cov_4hbxgawhh().b[33][1]++, 'Unknown error')}`);
  }
}
/* istanbul ignore next */
cov_4hbxgawhh().s[126]++;
export const createEnhancedTimeTrackingClient = client => {
  /* istanbul ignore next */
  cov_4hbxgawhh().f[15]++;
  cov_4hbxgawhh().s[127]++;
  return new EnhancedTimeTrackingClient(client);
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,